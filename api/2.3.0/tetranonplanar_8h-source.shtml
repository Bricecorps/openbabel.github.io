<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: tetranonplanar.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.4.7 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.shtml"><span>Modules</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li><a href="classes.shtml"><span>Classes</span></a></li>
    <li id="current"><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
    <li><a href="examples.shtml"><span>Examples</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.shtml"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.shtml"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>tetranonplanar.h</h1><a href="tetranonplanar_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">  tetranonplanar.h - OBTetraNonPlanarStereo</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">  Copyright (C) 2009 by Tim Vandermeersch</span>
<a name="l00005"></a>00005 <span class="comment"> </span>
<a name="l00006"></a>00006 <span class="comment">  This file is part of the Open Babel project.</span>
<a name="l00007"></a>00007 <span class="comment">  For more information, see &lt;http://openbabel.sourceforge.net/&gt;</span>
<a name="l00008"></a>00008 <span class="comment"></span>
<a name="l00009"></a>00009 <span class="comment">  This program is free software; you can redistribute it and/or modify</span>
<a name="l00010"></a>00010 <span class="comment">  it under the terms of the GNU General Public License as published by</span>
<a name="l00011"></a>00011 <span class="comment">  the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00012"></a>00012 <span class="comment">  (at your option) any later version.</span>
<a name="l00013"></a>00013 <span class="comment"></span>
<a name="l00014"></a>00014 <span class="comment">  This program is distributed in the hope that it will be useful,</span>
<a name="l00015"></a>00015 <span class="comment">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00016"></a>00016 <span class="comment">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00017"></a>00017 <span class="comment">  GNU General Public License for more details.</span>
<a name="l00018"></a>00018 <span class="comment"></span>
<a name="l00019"></a>00019 <span class="comment">  You should have received a copy of the GNU General Public License</span>
<a name="l00020"></a>00020 <span class="comment">  along with this program; if not, write to the Free Software</span>
<a name="l00021"></a>00021 <span class="comment">  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA</span>
<a name="l00022"></a>00022 <span class="comment">  02110-1301, USA.</span>
<a name="l00023"></a>00023 <span class="comment"> **********************************************************************/</span>
<a name="l00024"></a>00024 <span class="preprocessor">#ifndef OB_TETRANONPLANAR_H</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span><span class="preprocessor">#define OB_TETRANONPLANAR_H</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;<a class="code" href="stereo_8h.shtml">openbabel/stereo/stereo.h</a>&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;<a class="code" href="oberror_8h.shtml">openbabel/oberror.h</a>&gt;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="keyword">namespace </span>OpenBabel {
<a name="l00031"></a>00031 
<a name="l00034"></a>00034 
<a name="l00089"></a><a class="code" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml">00089</a>   <span class="keyword">class </span>OBAPI OBTetraNonPlanarStereo : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBStereoBase.shtml">OBStereoBase</a>
<a name="l00090"></a>00090   {
<a name="l00091"></a>00091     <span class="keyword">public</span>:
<a name="l00096"></a>00096       OBTetraNonPlanarStereo(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol);
<a name="l00100"></a>00100       <span class="keyword">virtual</span> ~OBTetraNonPlanarStereo();
<a name="l00101"></a>00101      
<a name="l00142"></a>00142       <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ConfigType&gt;
<a name="l00143"></a><a class="code" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml#e79d081597f6d18cf5214706e47d6071">00143</a>       <span class="keyword">static</span> ConfigType ToConfig(<span class="keyword">const</span> ConfigType &amp;cfg, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> from_or_towards,
<a name="l00144"></a>00144           <a class="code" href="structOpenBabel_1_1OBStereo.shtml#14b44cd67149a6a308b7836e939401e9">OBStereo::Winding</a> winding = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#14b44cd67149a6a308b7836e939401e9815b9e47b11a50a20904521bd08b89eb">OBStereo::Clockwise</a>, 
<a name="l00145"></a>00145           <a class="code" href="structOpenBabel_1_1OBStereo.shtml#03545e626f3c27dc982c2e9194e4c909">OBStereo::View</a> view = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#03545e626f3c27dc982c2e9194e4c909938e442002c5c2530fbb720db66d2547">OBStereo::ViewFrom</a>)
<a name="l00146"></a>00146       {
<a name="l00147"></a>00147         <span class="keywordflow">if</span> (cfg.from == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#9776a0545c4469f87d7addeabca77ac425a6ce394c1fda073f925db1469f5bc2">OBStereo::NoRef</a>) {
<a name="l00148"></a>00148           <a class="code" href="namespaceOpenBabel.shtml#24ee5eebf9449658bd038e0bf3e807c3">obErrorLog</a>.<a class="code" href="classOpenBabel_1_1OBMessageHandler.shtml#84ad4fe87ea71851a3703e7aa25907fe">ThrowError</a>(__FUNCTION__, 
<a name="l00149"></a>00149               <span class="stringliteral">"OBTetraNonPlanarStereo::ToConfig : Invalid from in ConfigType struct."</span>, <a class="code" href="namespaceOpenBabel.shtml#e494ccb64b7d25f533091d227481b1f345209411ebfcf0255b15672fa3018138">obError</a>);
<a name="l00150"></a>00150           <span class="keywordflow">return</span> ConfigType();
<a name="l00151"></a>00151         }
<a name="l00152"></a>00152         <span class="keywordflow">if</span> (cfg.refs.size() != 3) {
<a name="l00153"></a>00153           <a class="code" href="namespaceOpenBabel.shtml#24ee5eebf9449658bd038e0bf3e807c3">obErrorLog</a>.<a class="code" href="classOpenBabel_1_1OBMessageHandler.shtml#84ad4fe87ea71851a3703e7aa25907fe">ThrowError</a>(__FUNCTION__, 
<a name="l00154"></a>00154               <span class="stringliteral">"OBTetraNonPlanarStereo::ToConfig : Invalid refs size."</span>, <a class="code" href="namespaceOpenBabel.shtml#e494ccb64b7d25f533091d227481b1f345209411ebfcf0255b15672fa3018138">obError</a>);
<a name="l00155"></a>00155           <span class="keywordflow">return</span> ConfigType(); 
<a name="l00156"></a>00156         }
<a name="l00157"></a>00157 
<a name="l00158"></a>00158         <span class="comment">// copy the internal refs</span>
<a name="l00159"></a>00159         ConfigType result = cfg;
<a name="l00160"></a>00160         result.from = from_or_towards;
<a name="l00161"></a>00161         result.winding = winding;
<a name="l00162"></a>00162         result.view = view;
<a name="l00163"></a>00163  
<a name="l00164"></a>00164         <span class="comment">// keep track of the permuations by using the oddness</span>
<a name="l00165"></a>00165         <span class="keywordtype">bool</span> odd = <span class="keyword">false</span>;
<a name="l00166"></a>00166 
<a name="l00167"></a>00167         <span class="comment">// find id</span>
<a name="l00168"></a>00168         <span class="keywordflow">if</span> (cfg.from != from_or_towards) {
<a name="l00169"></a>00169           <span class="comment">// move id to front and remove it = 1 permutation</span>
<a name="l00170"></a>00170           <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; ++i) {
<a name="l00171"></a>00171             <span class="keywordflow">if</span> (cfg.refs.at(i) == from_or_towards) {
<a name="l00172"></a>00172               result.refs[i] = cfg.from;
<a name="l00173"></a>00173               <span class="keywordflow">break</span>;
<a name="l00174"></a>00174             }
<a name="l00175"></a>00175           }
<a name="l00176"></a>00176           <span class="comment">// 1 permutation perfromed --&gt; odd = true</span>
<a name="l00177"></a>00177           odd = <span class="keyword">true</span>;
<a name="l00178"></a>00178         }
<a name="l00179"></a>00179 
<a name="l00180"></a>00180         <span class="comment">// clockwise &lt;-&gt; anti-clockwise : odd = true</span>
<a name="l00181"></a>00181         <span class="keywordflow">if</span> (winding == cfg.winding)
<a name="l00182"></a>00182           odd = !odd;
<a name="l00183"></a>00183         <span class="comment">// ViewFrom &lt;-&gt; ViewTowards : odd = true</span>
<a name="l00184"></a>00184         <span class="keywordflow">if</span> (view == cfg.view)
<a name="l00185"></a>00185           odd = !odd;
<a name="l00186"></a>00186 
<a name="l00187"></a>00187         <span class="comment">// make sure we actually found id</span>
<a name="l00188"></a>00188         <span class="keywordflow">if</span> (result.refs.size() == 3) {
<a name="l00189"></a>00189           <span class="keywordflow">if</span> (odd)
<a name="l00190"></a>00190             <a class="code" href="structOpenBabel_1_1OBStereo.shtml#eab7f9b35dc38a7a41fd29764556b032">OBStereo::Permutate</a>(result.refs, 1, 2);
<a name="l00191"></a>00191           <span class="keywordflow">return</span> result;
<a name="l00192"></a>00192         }   
<a name="l00193"></a>00193 
<a name="l00194"></a>00194         <a class="code" href="namespaceOpenBabel.shtml#24ee5eebf9449658bd038e0bf3e807c3">obErrorLog</a>.<a class="code" href="classOpenBabel_1_1OBMessageHandler.shtml#84ad4fe87ea71851a3703e7aa25907fe">ThrowError</a>(__FUNCTION__, 
<a name="l00195"></a>00195             <span class="stringliteral">"OBTetraNonPlanarStereo::ToConfig : Paramter id not found in internal refs."</span>, <a class="code" href="namespaceOpenBabel.shtml#e494ccb64b7d25f533091d227481b1f345209411ebfcf0255b15672fa3018138">obError</a>);
<a name="l00196"></a>00196         <span class="keywordflow">return</span> result;
<a name="l00197"></a>00197       }
<a name="l00201"></a>00201       <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ConfigType&gt;
<a name="l00202"></a><a class="code" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml#46f4d697e0cdd63d3c53336781b9b33e">00202</a>       <span class="keyword">static</span> <span class="keywordtype">void</span> ChangeWinding(ConfigType &amp;cfg)
<a name="l00203"></a>00203       {
<a name="l00204"></a>00204         cfg.winding = (cfg.winding == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#14b44cd67149a6a308b7836e939401e9815b9e47b11a50a20904521bd08b89eb">OBStereo::Clockwise</a>) ? <a class="code" href="structOpenBabel_1_1OBStereo.shtml#14b44cd67149a6a308b7836e939401e9cea2ca8d1d8af2a2f1b161696f3a4512">OBStereo::AntiClockwise</a> : <a class="code" href="structOpenBabel_1_1OBStereo.shtml#14b44cd67149a6a308b7836e939401e9815b9e47b11a50a20904521bd08b89eb">OBStereo::Clockwise</a>;
<a name="l00205"></a>00205         <a class="code" href="structOpenBabel_1_1OBStereo.shtml#eab7f9b35dc38a7a41fd29764556b032">OBStereo::Permutate</a>(cfg.refs, 1, 2);
<a name="l00206"></a>00206       }
<a name="l00210"></a>00210       <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ConfigType&gt;
<a name="l00211"></a><a class="code" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml#4fa95cf69a36181e2fbf502910994805">00211</a>       <span class="keyword">static</span> <span class="keywordtype">void</span> ChangeView(ConfigType &amp;cfg)
<a name="l00212"></a>00212       {
<a name="l00213"></a>00213         cfg.view = (cfg.view == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#03545e626f3c27dc982c2e9194e4c909938e442002c5c2530fbb720db66d2547">OBStereo::ViewFrom</a>) ? <a class="code" href="structOpenBabel_1_1OBStereo.shtml#03545e626f3c27dc982c2e9194e4c9098cc0fe76b0227bf833320aa24ae8e31d">OBStereo::ViewTowards</a> : <a class="code" href="structOpenBabel_1_1OBStereo.shtml#03545e626f3c27dc982c2e9194e4c909938e442002c5c2530fbb720db66d2547">OBStereo::ViewFrom</a>;
<a name="l00214"></a>00214         <a class="code" href="structOpenBabel_1_1OBStereo.shtml#eab7f9b35dc38a7a41fd29764556b032">OBStereo::Permutate</a>(cfg.refs, 1, 2);
<a name="l00215"></a>00215       }
<a name="l00219"></a>00219       <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ConfigType&gt;
<a name="l00220"></a><a class="code" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml#953ad2e1f1326f1857179ef1ff495989">00220</a>       <span class="keyword">static</span> <span class="keywordtype">void</span> Invert(ConfigType &amp;cfg)
<a name="l00221"></a>00221       {
<a name="l00222"></a>00222         <a class="code" href="structOpenBabel_1_1OBStereo.shtml#eab7f9b35dc38a7a41fd29764556b032">OBStereo::Permutate</a>(cfg.refs, 1, 2);
<a name="l00223"></a>00223       }
<a name="l00224"></a>00224  };
<a name="l00225"></a>00225   
<a name="l00227"></a>00227 
<a name="l00228"></a>00228 }
<a name="l00229"></a>00229 
<a name="l00230"></a>00230 <span class="preprocessor">#endif</span>
</pre></div></div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.99.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Fri Jun 18 09:21:44 2010 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.7.
</div>

</body>
</html>
