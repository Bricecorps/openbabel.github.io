<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: PluginIter Class Template Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.2 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1PluginIter.shtml">PluginIter</a></div>
<h1>PluginIter Class Template Reference</h1><!-- doxytag: class="OpenBabel::PluginIter" -->Template class used to simplify dynamic classes discovered at runtime.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="pluginiter_8h-source.shtml">openbabel/pluginiter.h</a>&gt;</code>
<p>
<a href="classOpenBabel_1_1PluginIter-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1PluginIter.shtml#59e8c96382cd3f9504f222579df2c513">Register</a> (T *pType, const std::string ID, bool IsDefault)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">T *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1PluginIter.shtml#a134edc111ceb41bb59b2e5a5d89a389">FindType</a> (const std::string &amp;ID)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">T *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1PluginIter.shtml#13482abcd6e8c7fb44f554827d83ff98">FindDefaultType</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1PluginIter.shtml#616e5ec5383953189628ddf0dd018453">ID</a> () const</td></tr>

<tr><td colspan="2"><div class="groupHeader">Iterator methods</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1PluginIter.shtml#a0a167fcdf5ecca5a00c497cd68cc35a">ToStart</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1PluginIter.shtml">PluginIter</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1PluginIter.shtml#cb6505d5b92d6b4a023ff7e7173cd7b9">operator++</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1PluginIter.shtml#67b76affb3b5d35fa419ac234144038b">operator bool</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">T *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1PluginIter.shtml#5c1735ebb61cb9b40f6d0ed30be8a288">operator-&gt;</a> () const</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<h3>template&lt;typename T&gt;<br>
 class OpenBabel::PluginIter&lt; T &gt;</h3>

Template class used to simplify dynamic classes discovered at runtime. 
<p>
<dl class="see" compact><dt><b>See also:</b></dt><dd>openbabel/plugininter.h plugininter.h </dd></dl>

<p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="59e8c96382cd3f9504f222579df2c513"></a><!-- doxytag: member="OpenBabel::PluginIter::Register" ref="59e8c96382cd3f9504f222579df2c513" args="(T *pType, const std::string ID, bool IsDefault)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Register           </td>
          <td>(</td>
          <td class="paramtype">T *&nbsp;</td>
          <td class="paramname"> <em>pType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string&nbsp;</td>
          <td class="paramname"> <em>ID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>IsDefault</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Register a specific plugin module of a given type Not intended for direct use <dl class="see" compact><dt><b>See also:</b></dt><dd>openbabel/plugininter.h plugininter.h </dd></dl>

</div>
</div><p>
<a class="anchor" name="a134edc111ceb41bb59b2e5a5d89a389"></a><!-- doxytag: member="OpenBabel::PluginIter::FindType" ref="a134edc111ceb41bb59b2e5a5d89a389" args="(const std::string &amp;ID)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">T* FindType           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>ID</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Find a plugin with a given ID code <dl class="return" compact><dt><b>Returns:</b></dt><dd>the plugin instance or NULL if the ID code does not exist </dd></dl>

</div>
</div><p>
<a class="anchor" name="13482abcd6e8c7fb44f554827d83ff98"></a><!-- doxytag: member="OpenBabel::PluginIter::FindDefaultType" ref="13482abcd6e8c7fb44f554827d83ff98" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">T* FindDefaultType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The default plugin for a given plugin type </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="616e5ec5383953189628ddf0dd018453"></a><!-- doxytag: member="OpenBabel::PluginIter::ID" ref="616e5ec5383953189628ddf0dd018453" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string ID           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The ID code for this plugin </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="a0a167fcdf5ecca5a00c497cd68cc35a"></a><!-- doxytag: member="OpenBabel::PluginIter::ToStart" ref="a0a167fcdf5ecca5a00c497cd68cc35a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ToStart           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the iterator to the beginning of the list of plugins. 
<p>

</div>
</div><p>
<a class="anchor" name="cb6505d5b92d6b4a023ff7e7173cd7b9"></a><!-- doxytag: member="OpenBabel::PluginIter::operator++" ref="cb6505d5b92d6b4a023ff7e7173cd7b9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1PluginIter.shtml">PluginIter</a>&amp; operator++           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Increment the iterator to the next plugin in the list <dl class="return" compact><dt><b>Returns:</b></dt><dd>This plugin iterator </dd></dl>

</div>
</div><p>
<a class="anchor" name="67b76affb3b5d35fa419ac234144038b"></a><!-- doxytag: member="OpenBabel::PluginIter::operator bool" ref="67b76affb3b5d35fa419ac234144038b" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">operator bool           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether the iterator is valid (i.e., it is not at the end) </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="5c1735ebb61cb9b40f6d0ed30be8a288"></a><!-- doxytag: member="OpenBabel::PluginIter::operator-&gt;" ref="5c1735ebb61cb9b40f6d0ed30be8a288" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">T* operator-&gt;           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The plugin associated with the current state of the iterator </dd></dl>

<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="pluginiter_8h-source.shtml">pluginiter.h</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/wiki/">Open Babel</a>, version 2.1.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.sourceforge.net/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Sat Apr 7 10:33:52 2007 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.2.
</div>

</body>
</html>
