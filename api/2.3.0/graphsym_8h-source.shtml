<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: graphsym.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.4.7 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.shtml"><span>Modules</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li><a href="classes.shtml"><span>Classes</span></a></li>
    <li id="current"><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
    <li><a href="examples.shtml"><span>Examples</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.shtml"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.shtml"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>graphsym.h</h1><a href="graphsym_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">graphsym.h - Class for handling graph symmetry.</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">To determine copyright, please analyse the Subversion commit log.</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00007"></a>00007 <span class="comment">For more information, see &lt;http://openbabel.sourceforge.net/&gt;</span>
<a name="l00008"></a>00008 <span class="comment"> </span>
<a name="l00009"></a>00009 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00010"></a>00010 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00011"></a>00011 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00012"></a>00012 <span class="comment"> </span>
<a name="l00013"></a>00013 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00014"></a>00014 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00015"></a>00015 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00016"></a>00016 <span class="comment">GNU General Public License for more details.</span>
<a name="l00017"></a>00017 <span class="comment">***********************************************************************/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#ifndef OB_GRAPHSYM_H</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span><span class="preprocessor">#define OB_GRAPHSYM_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef EXTERN</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#  define EXTERN extern</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="keyword">using namespace </span>std;
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="keyword">namespace </span>OpenBabel {
<a name="l00032"></a>00032 
<a name="l00033"></a>00033   <span class="keyword">class </span>OBBitVec;
<a name="l00034"></a>00034   <span class="keyword">class </span>OBMol;
<a name="l00035"></a>00035   <span class="keyword">class </span>OBAtom;
<a name="l00036"></a>00036   <span class="keyword">class </span>OBBond;
<a name="l00037"></a>00037   <span class="keyword">class </span>OBMol;
<a name="l00038"></a>00038 
<a name="l00039"></a><a class="code" href="classOpenBabel_1_1OBGraphSym.shtml">00039</a>   <span class="keyword">class </span>OBAPI OBGraphSym {
<a name="l00040"></a>00040     <span class="keyword">private</span>:
<a name="l00041"></a>00041       <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> _frag_atoms;
<a name="l00042"></a>00042       <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* _pmol;
<a name="l00043"></a>00043 
<a name="l00044"></a>00044       <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#215f9e94d974bf17cff2d61f83846fab">CompareUnsigned</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;a,<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;b);
<a name="l00045"></a>00045       <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#871526ddfcf5ea404d9300029e4861e3">ComparePairFirst</a>(<span class="keyword">const</span> std::pair&lt;OBAtom*,unsigned int&gt; &amp;a,<span class="keyword">const</span> std::pair&lt;OBAtom*,unsigned int&gt; &amp;b);
<a name="l00046"></a>00046       <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#ab32bcb3394bc353865e858883169495">ComparePairSecond</a>(<span class="keyword">const</span> std::pair&lt;OBAtom*,unsigned int&gt; &amp;a,<span class="keyword">const</span> std::pair&lt;OBAtom*,unsigned int&gt; &amp;b);
<a name="l00047"></a>00047       <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#bb0cc4a61b8d3a66460a40ac9d9c0d28">CompareBondPairSecond</a>(<span class="keyword">const</span> std::pair&lt;OBBond*,unsigned int&gt; &amp;a,<span class="keyword">const</span> std::pair&lt;OBBond*,unsigned int&gt; &amp;b);
<a name="l00048"></a>00048 
<a name="l00049"></a>00049       <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespaceOpenBabel.shtml#aab98f4129d077cff461571e601e5be5">GetValence</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom);
<a name="l00050"></a>00050       <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespaceOpenBabel.shtml#f34f6d754496ff9869a8b7f714be6217">GetHvyValence</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom);
<a name="l00051"></a>00051       <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespaceOpenBabel.shtml#c0661f776e92fdd3ae5f9a074cf93eb5">GetHvyBondSum</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom);
<a name="l00052"></a>00052 
<a name="l00053"></a>00053       <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel.shtml#438cfd2505c411deb39040d9fff644a3">FindRingAtoms</a>(<a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;ring_atoms);
<a name="l00054"></a>00054       <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel.shtml#8e4fbe33fbac9c8a59480e75cbbeb728">CreateNewClassVector</a>(std::vector&lt;std::pair&lt;OBAtom*,unsigned int&gt; &gt; &amp;vp1,
<a name="l00055"></a>00055                                 std::vector&lt;std::pair&lt;OBAtom*,unsigned int&gt; &gt; &amp;vp2);
<a name="l00056"></a>00056       <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel.shtml#1375b3dff08f980737b81db89188ba84">GetGIVector</a>(std::vector&lt;unsigned int&gt; &amp;vid);
<a name="l00057"></a>00057       <span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#43b39b18f63070fcb45c3bfb78ccbeaa">GetGTDVector</a>(std::vector&lt;int&gt; &amp;gtd);
<a name="l00058"></a>00058       <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel.shtml#4d3be55c0380b473682e14cdd97a1c5b">CountAndRenumberClasses</a>(std::vector&lt;std::pair&lt;OBAtom*,unsigned int&gt; &gt; &amp;vp, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;count);
<a name="l00059"></a>00059       <span class="keywordtype">int</span> ExtendInvariants(std::vector&lt;std::pair&lt;OBAtom*, unsigned int&gt; &gt; &amp;symmetry_classes, <span class="keywordtype">bool</span> breakChiralTies);
<a name="l00060"></a>00060                            
<a name="l00061"></a>00061       <span class="keywordtype">int</span> <a class="code" href="namespaceOpenBabel.shtml#d04ea472f1af9680b27c46aa51ef76aa">CalculateSymmetry</a>(std::vector&lt;unsigned int&gt; &amp;symmetry_classes, <span class="keywordtype">bool</span> breakChiralTies);
<a name="l00062"></a>00062       <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel.shtml#55de6ac80a36126c80f3696590462a4e">BreakChiralTies</a>(vector&lt;pair&lt;OBAtom*, unsigned int&gt; &gt; &amp;atom_sym_classes);
<a name="l00063"></a>00063     <span class="keyword">public</span>:
<a name="l00065"></a>00065       OBGraphSym(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* pmol, <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>* frag_atoms = NULL);
<a name="l00067"></a>00067       <span class="keyword">virtual</span> ~OBGraphSym();
<a name="l00068"></a>00068 
<a name="l00069"></a><a class="code" href="classOpenBabel_1_1OBGraphSym.shtml#348b3723f9817192ea90e83c883c63c8">00069</a>       <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> NoSymmetryClass;
<a name="l00070"></a>00070       
<a name="l00081"></a>00081       <span class="keywordtype">int</span> GetSymmetry(vector&lt;unsigned int&gt; &amp;symmetry_classes, <span class="keywordtype">bool</span> breakChiralTies = <span class="keyword">true</span>);
<a name="l00082"></a>00082       <span class="keywordtype">void</span> ClearSymmetry();
<a name="l00091"></a>00091       <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel.shtml#b12f2e25db61e00a6d62815281c602a9">CanonicalLabels</a>(vector&lt;unsigned int&gt; &amp;symmetry_classes);
<a name="l00092"></a>00092     };
<a name="l00093"></a>00093 
<a name="l00094"></a>00094       
<a name="l00095"></a>00095       
<a name="l00096"></a>00096       
<a name="l00097"></a>00097       <span class="comment">//&amp;OBBitVec GetFragment();</span>
<a name="l00098"></a>00098       <span class="comment">//SetFragment(&amp;OBBitVec);</span>
<a name="l00099"></a>00099 
<a name="l00100"></a>00100 } <span class="comment">// namespace OpenBabel</span>
<a name="l00101"></a>00101 
<a name="l00104"></a>00104 
<a name="l00105"></a>00105 <span class="preprocessor">  #endif // OB_GRAPHSYM_H</span>
</pre></div></div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.99.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Fri Jun 18 09:21:44 2010 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.7.
</div>

</body>
</html>
