<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: obmolecformat.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.4.7 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.shtml"><span>Modules</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li><a href="classes.shtml"><span>Classes</span></a></li>
    <li id="current"><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
    <li><a href="examples.shtml"><span>Examples</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.shtml"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.shtml"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>obmolecformat.h</h1><a href="obmolecformat_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">obmolecformat.h - Subclass of OBFormat for conversion of OBMol.</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 2005 Chris Morley</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00007"></a>00007 <span class="comment">For more information, see &lt;http://openbabel.sourceforge.net/&gt;</span>
<a name="l00008"></a>00008 <span class="comment"></span>
<a name="l00009"></a>00009 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00010"></a>00010 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00011"></a>00011 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00012"></a>00012 <span class="comment"></span>
<a name="l00013"></a>00013 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00014"></a>00014 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00015"></a>00015 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00016"></a>00016 <span class="comment">GNU General Public License for more details.</span>
<a name="l00017"></a>00017 <span class="comment">***********************************************************************/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#ifndef OB_MOLECULEFORMAT_H</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span><span class="preprocessor">#define OB_MOLECULEFORMAT_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span>
<a name="l00022"></a>00022 <span class="preprocessor">#ifdef _MSC_VER</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">  #include &lt;hash_map&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#endif</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>
<a name="l00026"></a>00026 <span class="preprocessor">#if __GNUC__ == 4 &amp;&amp; __GNUC_MINOR__ &gt;= 1</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span><span class="preprocessor">  #include &lt;tr1/unordered_map&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#elif defined(USE_BOOST)</span>
<a name="l00029"></a>00029 <span class="preprocessor"></span><span class="preprocessor">  #include &lt;boost/tr1/unordered_map.hpp&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#endif</span>
<a name="l00031"></a>00031 <span class="preprocessor"></span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;typeinfo&gt;</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#ifdef HAVE_SHARED_POINTER</span>
<a name="l00036"></a>00036 <span class="preprocessor"></span><span class="preprocessor">  #include &lt;<a class="code" href="reaction_8h.shtml">openbabel/reaction.h</a>&gt;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#endif</span>
<a name="l00038"></a>00038 <span class="preprocessor"></span><span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &lt;<a class="code" href="obconversion_8h.shtml">openbabel/obconversion.h</a>&gt;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &lt;typeinfo&gt;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &lt;<a class="code" href="descriptor_8h.shtml">openbabel/descriptor.h</a>&gt;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &lt;set&gt;</span>
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 <span class="keyword">namespace </span>OpenBabel {
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 <span class="comment">// This macro is used in DLL builds. If it has not</span>
<a name="l00047"></a>00047 <span class="comment">// been set in babelconfig.h, define it as nothing.</span>
<a name="l00048"></a>00048 <span class="preprocessor">#ifndef OBCOMMON</span>
<a name="l00049"></a>00049 <span class="preprocessor"></span><span class="preprocessor">  #define OBCOMMON</span>
<a name="l00050"></a>00050 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00051"></a>00051 <span class="preprocessor"></span>
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 
<a name="l00068"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml">00068</a> <span class="keyword">class </span>OBCOMMON OBMoleculeFormat : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a>
<a name="l00069"></a>00069 {
<a name="l00070"></a>00070 <span class="keyword">public</span>:
<a name="l00071"></a>00071 
<a name="l00072"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#01cc946e7629731eb97ba1d79e6121cf">00072</a>   OBMoleculeFormat()
<a name="l00073"></a>00073   {
<a name="l00074"></a>00074     <span class="keywordflow">if</span>(!OptionsRegistered)
<a name="l00075"></a>00075     {
<a name="l00076"></a>00076       OptionsRegistered=<span class="keyword">true</span>;
<a name="l00077"></a>00077       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"b"</span>,         <span class="keyword">this</span>, 0, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750ba67eb12c03e13a7604813e2b0b4d3ec3">OBConversion::INOPTIONS</a>);
<a name="l00078"></a>00078       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"s"</span>,         <span class="keyword">this</span>, 0, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750ba67eb12c03e13a7604813e2b0b4d3ec3">OBConversion::INOPTIONS</a>);
<a name="l00079"></a>00079       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"title"</span>,     <span class="keyword">this</span>, 1, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00080"></a>00080       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"addtotitle"</span>,<span class="keyword">this</span>, 1, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00081"></a>00081       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"property"</span>,  <span class="keyword">this</span>, 2, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00082"></a>00082       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"C"</span>,         <span class="keyword">this</span>, 0, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00083"></a>00083       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"j"</span>,         <span class="keyword">this</span>, 0, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00084"></a>00084       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"join"</span>,      <span class="keyword">this</span>, 0, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00085"></a>00085       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"separate"</span>,  <span class="keyword">this</span>, 0, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00086"></a>00086 
<a name="l00087"></a>00087       <span class="comment">//The follow are OBMol options, which should not be in OBConversion.</span>
<a name="l00088"></a>00088       <span class="comment">//But here isn't entirely appropriate either, since one could have</span>
<a name="l00089"></a>00089       <span class="comment">//OBMol formats loaded but which don't derived from this class.</span>
<a name="l00090"></a>00090       <span class="comment">//However, this possibility is remote.</span>
<a name="l00091"></a>00091       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"s"</span>, NULL, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00092"></a>00092       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"v"</span>, NULL, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00093"></a>00093       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"h"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00094"></a>00094       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"d"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00095"></a>00095       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"b"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00096"></a>00096       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"c"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00097"></a>00097       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"p"</span>, NULL, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>); 
<a name="l00098"></a>00098       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"t"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00099"></a>00099       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"k"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00100"></a>00100       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"filter"</span>, NULL, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00101"></a>00101       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"add"</span>, NULL, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00102"></a>00102       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"delete"</span>, NULL, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00103"></a>00103       <a class="code" href="classOpenBabel_1_1OBConversion.shtml#4ae7c596da40d4dffa0d1334fbea8640">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"append"</span>, NULL, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#1527a0a12210467a9dbd6d53f856750b9c19756b92dd5276c10d5a6830435410">OBConversion::GENOPTIONS</a>);
<a name="l00104"></a>00104     }
<a name="l00105"></a>00105   }
<a name="l00106"></a>00106 
<a name="l00108"></a>00108   <span class="keyword">static</span> <span class="keywordtype">bool</span> ReadChemObjectImpl(<a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a>* pConv, <a class="code" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a>*);
<a name="l00110"></a>00110   <span class="keyword">static</span> <span class="keywordtype">bool</span> WriteChemObjectImpl(<a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a>* pConv, <a class="code" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a>*);
<a name="l00111"></a>00111 
<a name="l00113"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#d3c223811e8af7e19f0d1230ef2b96b3">00113</a>   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> ReadChemObject(<a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a>* pConv)
<a name="l00114"></a>00114   { <span class="keywordflow">return</span> ReadChemObjectImpl(pConv, <span class="keyword">this</span>);}
<a name="l00115"></a>00115 
<a name="l00117"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#4d36e09813e2a9a264481f9cb5f28766">00117</a>   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> WriteChemObject(<a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a>* pConv)
<a name="l00118"></a>00118   { <span class="keywordflow">return</span> WriteChemObjectImpl(pConv, <span class="keyword">this</span>);}
<a name="l00119"></a>00119 
<a name="l00121"></a>00121 
<a name="l00122"></a>00122 
<a name="l00123"></a>00123 
<a name="l00124"></a>00124   <span class="keyword">static</span> <span class="keywordtype">bool</span>   DeferMolOutput(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* pmol, <a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a>* pConv, <a class="code" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a>* pF);
<a name="l00126"></a>00126   <span class="keyword">static</span> <span class="keywordtype">bool</span>   OutputDeferredMols(<a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a>* pConv);
<a name="l00128"></a>00128   <span class="keyword">static</span> <span class="keywordtype">bool</span>   DeleteDeferredMols();
<a name="l00130"></a>00130   <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* MakeCombinedMolecule(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* pFirst, <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* pSecond);
<a name="l00132"></a>00132   
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 <span class="preprocessor">#ifdef HAVE_SHARED_POINTER</span>
<a name="l00137"></a>00137 <span class="preprocessor">  static bool OutputMolsFromReaction</span>
<a name="l00138"></a>00138 <span class="preprocessor"></span>    (<a class="code" href="classOpenBabel_1_1OBReaction.shtml">OBReaction</a>* pReact, <a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a>* pConv, <a class="code" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a>* pFormat);
<a name="l00139"></a>00139 <span class="preprocessor">#endif</span>
<a name="l00140"></a>00140 <span class="preprocessor"></span>
<a name="l00141"></a>00141 <span class="preprocessor">#ifdef _MSC_VER</span>
<a name="l00142"></a>00142 <span class="preprocessor"></span>  <span class="keyword">typedef</span> stdext::hash_map&lt;std::string, unsigned&gt; NameIndexType;
<a name="l00143"></a>00143 <span class="preprocessor">#elif (__GNUC__ == 4 &amp;&amp; __GNUC_MINOR__ &gt;= 1 &amp;&amp; !defined(__APPLE_CC__)) || defined (USE_BOOST)</span>
<a name="l00144"></a>00144 <span class="preprocessor"></span>  <span class="keyword">typedef</span> std::tr1::unordered_map&lt;std::string, unsigned&gt; NameIndexType;
<a name="l00145"></a>00145 <span class="preprocessor">#else</span>
<a name="l00146"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#751b195fb27d0fba67b3c9796cb95c53">00146</a> <span class="preprocessor"></span>  <span class="keyword">typedef</span> std::map&lt;std::string, unsigned&gt; <a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#751b195fb27d0fba67b3c9796cb95c53">NameIndexType</a>;
<a name="l00147"></a>00147 <span class="preprocessor">#endif</span>
<a name="l00148"></a>00148 <span class="preprocessor"></span>  
<a name="l00149"></a>00149   <span class="comment">// documentation in obmolecformat.cpp</span>
<a name="l00150"></a>00150   <span class="keyword">static</span> <span class="keywordtype">bool</span>   ReadNameIndex(<a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#751b195fb27d0fba67b3c9796cb95c53">NameIndexType</a>&amp; index, <span class="keyword">const</span> std::string&amp; datafilename,
<a name="l00151"></a>00151                   <a class="code" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a>* pInFormat);
<a name="l00152"></a>00152 
<a name="l00154"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ced0e833bee98b9f2eb67f4c7dad52cc">00154</a>   <span class="keyword">const</span> std::type_info&amp; GetType()
<a name="l00155"></a>00155   {
<a name="l00156"></a>00156     <span class="keywordflow">return</span> <span class="keyword">typeid</span>(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>*);
<a name="l00157"></a>00157   }
<a name="l00158"></a>00158 
<a name="l00159"></a>00159 <span class="keyword">private</span>:
<a name="l00160"></a>00160 
<a name="l00161"></a>00161   <span class="keyword">static</span> <span class="keywordtype">bool</span> OptionsRegistered;
<a name="l00162"></a>00162   <span class="keyword">static</span> std::map&lt;std::string, OBMol*&gt; IMols;
<a name="l00163"></a>00163   <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* _jmol; 
<a name="l00164"></a>00164   <span class="keyword">static</span> std::vector&lt;OBMol&gt; MolArray; 
<a name="l00165"></a>00165   <span class="keyword">static</span> <span class="keywordtype">bool</span> StoredMolsReady; 
<a name="l00166"></a>00166   <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBDescriptor.shtml">OBDescriptor</a>* _pDesc;
<a name="l00167"></a>00167 
<a name="l00168"></a>00168 };
<a name="l00169"></a>00169 
<a name="l00170"></a>00170 }
<a name="l00171"></a>00171 <span class="preprocessor">#endif //OB_MOLECULEFORMAT_H</span>
<a name="l00172"></a>00172 <span class="preprocessor"></span>
</pre></div></div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.99.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Fri Jun 18 09:21:44 2010 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.7.
</div>

</body>
</html>
