<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open Babel: typer.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open Babel
   &#160;<span id="projectnumber">3.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">typer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="typer_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">typer.h - Open Babel atom and aromaticity typer.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Some portions Copyright (C) 2001-2005 by Geoffrey R. Hutchison</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef OB_TYPER_H</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#define OB_TYPER_H</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="parsmart_8h.shtml">openbabel/parsmart.h</a>&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="data_8h.shtml">openbabel/data.h</a>&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="comment">// Forward declaration</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keyword">class </span>OBSmartsPattern;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">// class introduction in typer.cpp</span></div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomTyper.shtml">   39</a></span>&#160;<span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml">OBAtomTyper</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  std::vector&lt;std::pair&lt;OBSmartsPattern*,int&gt; &gt;            _vinthyb; </div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  std::vector&lt;std::pair&lt;OBSmartsPattern*,std::string&gt; &gt;    _vexttyp; </div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml">OBAtomTyper</a>();</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomTyper.shtml#a6b898b942feac9a6e199a1833be74634">   46</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml#a6b898b942feac9a6e199a1833be74634">OBAtomTyper</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml">OBAtomTyper</a>&amp; rhs) {abort();}</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    ~<a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml">OBAtomTyper</a>();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">//swig is requiring these, but I can&#39;t figure out how to make it not, so definte with abort</span></div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomTyper.shtml#abc1b5dc1beed2a453f008022621742c5">   50</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml">OBAtomTyper</a>&amp; <a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml#abc1b5dc1beed2a453f008022621742c5">operator=</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml">OBAtomTyper</a>&amp; rhs) {abort();}</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomTyper.shtml#aab7c531e5ffc5174e57a85e853931534">   54</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>()                 { <span class="keywordflow">return</span> _vinthyb.size(); }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">void</span> AssignHyb(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>&amp;);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">void</span> AssignTypes(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>&amp;);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;};</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#ifndef THREAD_LOCAL</span></div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="typer_8h.shtml#af8556c37f3acfa45992b8697930c501b">   63</a></span>&#160;<span class="preprocessor"># define THREAD_LOCAL</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#ifndef EXTERN</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#error EXTERN</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<a class="code" href="typer_8h.shtml#af8556c37f3acfa45992b8697930c501b">THREAD_LOCAL</a> EXTERN OBAtomTyper      <a class="code" href="namespaceOpenBabel.shtml#a52bf6b496d4534adf94f5e04f2793a2f">atomtyper</a>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">// class introduction in typer.cpp</span></div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAromaticTyper.shtml">   73</a></span>&#160;<span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml">OBAromaticTyper</a></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAromaticTyper.shtml#aea2f134780d085773f633cd27f1a0916">   76</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml#aea2f134780d085773f633cd27f1a0916">OBAromaticTyper</a>() {};</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAromaticTyper.shtml#a120c7e77d9c2de69099a705700277b43">   77</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml#a120c7e77d9c2de69099a705700277b43">~OBAromaticTyper</a>() {};</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">void</span> AssignAromaticFlags(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;};</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#af6d2ab7139f897c69ad5ce9b9e195fb5">   84</a></span>&#160;<a class="code" href="typer_8h.shtml#af8556c37f3acfa45992b8697930c501b">THREAD_LOCAL</a> EXTERN <a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml">OBAromaticTyper</a>  <a class="code" href="namespaceOpenBabel.shtml#af6d2ab7139f897c69ad5ce9b9e195fb5">aromtyper</a>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">// class introduction in typer.cpp</span></div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRingTyper.shtml">   87</a></span>&#160;<span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBRingTyper.shtml">OBRingTyper</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  std::vector&lt;std::pair&lt;OBSmartsPattern*,std::string&gt; &gt;    _ringtyp; </div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="classOpenBabel_1_1OBRingTyper.shtml">OBRingTyper</a>();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    ~<a class="code" href="classOpenBabel_1_1OBRingTyper.shtml">OBRingTyper</a>();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRingTyper.shtml#aab7c531e5ffc5174e57a85e853931534">   97</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBRingTyper.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>()                 { <span class="keywordflow">return</span> _ringtyp.size();}</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">void</span> AssignTypes(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>&amp;);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;};</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;} <span class="comment">//namespace OpenBabel</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">#endif // OB_TYPER_H</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OBAromaticTyper_shtml_aea2f134780d085773f633cd27f1a0916"><div class="ttname"><a href="classOpenBabel_1_1OBAromaticTyper.shtml#aea2f134780d085773f633cd27f1a0916">OpenBabel::OBAromaticTyper::OBAromaticTyper</a></div><div class="ttdeci">OBAromaticTyper()</div><div class="ttdef"><b>Definition:</b> typer.h:76</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAromaticTyper_shtml_a120c7e77d9c2de69099a705700277b43"><div class="ttname"><a href="classOpenBabel_1_1OBAromaticTyper.shtml#a120c7e77d9c2de69099a705700277b43">OpenBabel::OBAromaticTyper::~OBAromaticTyper</a></div><div class="ttdeci">~OBAromaticTyper()</div><div class="ttdef"><b>Definition:</b> typer.h:77</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomTyper_shtml_aab7c531e5ffc5174e57a85e853931534"><div class="ttname"><a href="classOpenBabel_1_1OBAtomTyper.shtml#aab7c531e5ffc5174e57a85e853931534">OpenBabel::OBAtomTyper::GetSize</a></div><div class="ttdeci">size_t GetSize()</div><div class="ttdef"><b>Definition:</b> typer.h:54</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMol_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a></div><div class="ttdoc">Molecule Class. </div><div class="ttdef"><b>Definition:</b> mol.h:118</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomTyper_shtml_a6b898b942feac9a6e199a1833be74634"><div class="ttname"><a href="classOpenBabel_1_1OBAtomTyper.shtml#a6b898b942feac9a6e199a1833be74634">OpenBabel::OBAtomTyper::OBAtomTyper</a></div><div class="ttdeci">OBAtomTyper(const OBAtomTyper &amp;rhs)</div><div class="ttdef"><b>Definition:</b> typer.h:46</div></div>
<div class="ttc" id="mol_8h_shtml"><div class="ttname"><a href="mol_8h.shtml">mol.h</a></div><div class="ttdoc">Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel) ...</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a52bf6b496d4534adf94f5e04f2793a2f"><div class="ttname"><a href="namespaceOpenBabel.shtml#a52bf6b496d4534adf94f5e04f2793a2f">OpenBabel::atomtyper</a></div><div class="ttdeci">THREAD_LOCAL OBAtomTyper atomtyper</div><div class="ttdef"><b>Definition:</b> typer.h:70</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_af6d2ab7139f897c69ad5ce9b9e195fb5"><div class="ttname"><a href="namespaceOpenBabel.shtml#af6d2ab7139f897c69ad5ce9b9e195fb5">OpenBabel::aromtyper</a></div><div class="ttdeci">THREAD_LOCAL OBAromaticTyper aromtyper</div><div class="ttdoc">Global OBAromaticTyper for detecting aromatic atoms and bonds. </div><div class="ttdef"><b>Definition:</b> typer.h:84</div></div>
<div class="ttc" id="data_8h_shtml"><div class="ttname"><a href="data_8h.shtml">data.h</a></div><div class="ttdoc">Global data and resource file parsers. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBAromaticTyper_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAromaticTyper.shtml">OpenBabel::OBAromaticTyper</a></div><div class="ttdoc">Assigns aromatic typing to atoms and bonds. </div><div class="ttdef"><b>Definition:</b> typer.h:73</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRingTyper_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBRingTyper.shtml">OpenBabel::OBRingTyper</a></div><div class="ttdoc">Assigns ring types. </div><div class="ttdef"><b>Definition:</b> typer.h:87</div></div>
<div class="ttc" id="typer_8h_shtml_af8556c37f3acfa45992b8697930c501b"><div class="ttname"><a href="typer_8h.shtml#af8556c37f3acfa45992b8697930c501b">THREAD_LOCAL</a></div><div class="ttdeci">#define THREAD_LOCAL</div><div class="ttdef"><b>Definition:</b> typer.h:63</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomTyper_shtml_abc1b5dc1beed2a453f008022621742c5"><div class="ttname"><a href="classOpenBabel_1_1OBAtomTyper.shtml#abc1b5dc1beed2a453f008022621742c5">OpenBabel::OBAtomTyper::operator=</a></div><div class="ttdeci">const OBAtomTyper &amp; operator=(const OBAtomTyper &amp;rhs)</div><div class="ttdef"><b>Definition:</b> typer.h:50</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomTyper_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAtomTyper.shtml">OpenBabel::OBAtomTyper</a></div><div class="ttdoc">Assigns atom types, hybridization, and formal charges. </div><div class="ttdef"><b>Definition:</b> typer.h:39</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRingTyper_shtml_aab7c531e5ffc5174e57a85e853931534"><div class="ttname"><a href="classOpenBabel_1_1OBRingTyper.shtml#aab7c531e5ffc5174e57a85e853931534">OpenBabel::OBRingTyper::GetSize</a></div><div class="ttdeci">size_t GetSize()</div><div class="ttdef"><b>Definition:</b> typer.h:97</div></div>
<div class="ttc" id="parsmart_8h_shtml"><div class="ttname"><a href="parsmart_8h.shtml">parsmart.h</a></div><div class="ttdoc">Daylight SMARTS parser. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml">OpenBabel::OBGlobalDataBase</a></div><div class="ttdoc">Base data table class, handles reading data files. </div><div class="ttdef"><b>Definition:</b> data.h:48</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Oct 15 2019 21:28:04 for Open Babel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
