<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open Babel: bond.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open Babel
   &#160;<span id="projectnumber">3.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">bond.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="bond_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">bond.h - Handle OBBond class.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Some portions Copyright (C) 2001-2006 by Geoffrey R. Hutchison</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">Some portions Copyright (C) 2003 by Michael Banck</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">Some portions Copyright (C) 2008 by Tim Vandermeersch</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#ifndef OB_BOND_H</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#define OB_BOND_H</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#ifndef EXTERN</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#  define EXTERN extern</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="base_8h.shtml">openbabel/base.h</a>&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="atom_8h.shtml">openbabel/atom.h</a>&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keyword">class </span>OBAtom;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">class </span>OBRing;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="comment">//BOND Property Macros (flags)</span></div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="bond_8h.shtml#a90183171d38e32f07e97bffb7836f9fd">   41</a></span>&#160;<span class="comment"></span><span class="preprocessor">#define OB_AROMATIC_BOND  (1&lt;&lt;1)</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#define OB_WEDGE_BOND     (1&lt;&lt;2)</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#define OB_HASH_BOND      (1&lt;&lt;3)</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#define OB_RING_BOND      (1&lt;&lt;4)</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#define OB_CLOSURE_BOND   (1&lt;&lt;10)</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="comment">// 11-16 currently unused</span></div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="bond_8h.shtml#a40ac5b89beb0ea8297e93ee26e7eaf7b">   51</a></span>&#160;<span class="preprocessor">#define OB_WEDGE_OR_HASH_BOND     (1&lt;&lt;11)</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="bond_8h.shtml#a05c44d063162906b3dd12b6e90d24de4">   53</a></span>&#160;<span class="preprocessor">#define SET_OR_UNSET_FLAG(X) \</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">  if (value) SetFlag(X); \</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">  else     UnsetFlag(X);</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml">   58</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a1219a011a5e0ec59c67a5a873d81986c">   61</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                <a class="code" href="classOpenBabel_1_1OBBond.shtml#a1219a011a5e0ec59c67a5a873d81986c">_idx</a>;   </div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#aa15238ffbdb1330727678c9d6553d6ba">   62</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>                      *<a class="code" href="classOpenBabel_1_1OBBond.shtml#aa15238ffbdb1330727678c9d6553d6ba">_parent</a>;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a3a61f73b711933e11ee793bf8fc550e0">   63</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>                     *<a class="code" href="classOpenBabel_1_1OBBond.shtml#a3a61f73b711933e11ee793bf8fc550e0">_bgn</a>;   </div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#aa094fa86d6e276e37457b5f662d386e0">   64</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>                     *<a class="code" href="classOpenBabel_1_1OBBond.shtml#aa094fa86d6e276e37457b5f662d386e0">_end</a>;   </div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a3db9d8d4a032ad98c3cc9139bff39a49">   65</a></span>&#160;      <span class="keywordtype">char</span>                        <a class="code" href="classOpenBabel_1_1OBBond.shtml#a3db9d8d4a032ad98c3cc9139bff39a49">_order</a>; </div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#aec57dcfb24a8b5496b6319fa1172fa5e">   66</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <span class="keywordtype">int</span>          <a class="code" href="classOpenBabel_1_1OBBond.shtml#aec57dcfb24a8b5496b6319fa1172fa5e">_flags</a>; </div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#accc49a515c7a81154bd46a8ea8a16204">   67</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>                 <a class="code" href="classOpenBabel_1_1OBBond.shtml#accc49a515c7a81154bd46a8ea8a16204">_id</a>;        </div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="comment">//OBBondPrivate * const d;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a29c5c831c63b61f3c0906cd12f05e1bc">   73</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a29c5c831c63b61f3c0906cd12f05e1bc">HasFlag</a>(<span class="keywordtype">int</span> flag)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> ((_flags &amp; flag) != 0); }</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#adcdab8f96dc4fdc2940749e527087245">   77</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#adcdab8f96dc4fdc2940749e527087245">SetFlag</a>(<span class="keywordtype">int</span> flag) { _flags |= flag; }</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a401b99defa8a57195dc40a2604cee115">   81</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a401b99defa8a57195dc40a2604cee115">UnsetFlag</a>(<span class="keywordtype">int</span> flag) { _flags &amp;= (~(flag)); }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a3f3de3e0d751949b8d0b60ffb302944a">   84</a></span>&#160;      <span class="keyword">enum</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a3f3de3e0d751949b8d0b60ffb302944a">Flag</a> {</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a3f3de3e0d751949b8d0b60ffb302944aa64c607937ff8cf2e2d5c22b8b4052b4c">   85</a></span>&#160;        Aromatic = (1&lt;&lt;1), </div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a3f3de3e0d751949b8d0b60ffb302944aa881827681e680c135749c84331670a50">   86</a></span>&#160;        Ring     = (1&lt;&lt;4), </div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a3f3de3e0d751949b8d0b60ffb302944aa588f9590824232581845c4db8cbda773">   87</a></span>&#160;        Closure  = (1&lt;&lt;10) </div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      };</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#afbdb429fe4a7d37960636a555de77326">   89</a></span>&#160;      <span class="keyword">enum</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#afbdb429fe4a7d37960636a555de77326">StereoFlag</a> {</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#afbdb429fe4a7d37960636a555de77326a721d5e522bcc0b0defce43b967d34091">   90</a></span>&#160;        Wedge       = (1&lt;&lt;2),  </div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#afbdb429fe4a7d37960636a555de77326ae44c0278588a18b472943c7f72857c03">   91</a></span>&#160;        Hash        = (1&lt;&lt;3),  </div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#afbdb429fe4a7d37960636a555de77326a96d5e3fcebcf162bf697dcf08f6e2063">   92</a></span>&#160;        WedgeOrHash = (1&lt;&lt;11), </div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#afbdb429fe4a7d37960636a555de77326a1a4533d507bb26970b15bb7ba5ce6b3d">   93</a></span>&#160;        CisOrTrans  = (1&lt;&lt;12)  </div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      };</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a6368d7673f23186649b2969ade3661d7">   97</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a6368d7673f23186649b2969ade3661d7">Visit</a>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="keyword">virtual</span> ~<a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#ab994a975e39f5c62288f4f972b6f90c9">  109</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#ab994a975e39f5c62288f4f972b6f90c9">SetIdx</a>(<span class="keywordtype">int</span> idx)        {          _idx = idx;        }</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a383094c5a19383cf09f3dfb4c1de1da2">  110</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a383094c5a19383cf09f3dfb4c1de1da2">SetId</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">id</span>) { _id = id; }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      <span class="keywordtype">void</span> SetBondOrder(<span class="keywordtype">int</span> order);</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a3c443bcf96eac155aa058b69cc59aa4e">  114</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a3c443bcf96eac155aa058b69cc59aa4e">SetBegin</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *begin){          _bgn = begin;      }</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a9bcf1c90715c368ce2896acae75235c4">  116</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a9bcf1c90715c368ce2896acae75235c4">SetEnd</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *end)    {          _end = end;        }</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a962b3010305cfb80ba816a0e54097dee">  118</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a962b3010305cfb80ba816a0e54097dee">SetParent</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *ptr)  {        _parent= ptr;        }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="keywordtype">void</span> SetLength(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *fixed,<span class="keywordtype">double</span> length);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordtype">void</span> SetLength(<span class="keywordtype">double</span> length);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordtype">void</span> Set(<span class="keywordtype">int</span> index, <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>* begin,<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>* end,<span class="keywordtype">int</span> order,<span class="keywordtype">int</span> flags);</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a934b854d51de7d1601168ace7c681bc5">  127</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a934b854d51de7d1601168ace7c681bc5">SetAromatic</a>(<span class="keywordtype">bool</span> value=<span class="keyword">true</span>)    { <a class="code" href="bond_8h.shtml#a05c44d063162906b3dd12b6e90d24de4">SET_OR_UNSET_FLAG</a>(<a class="code" href="bond_8h.shtml#a90183171d38e32f07e97bffb7836f9fd">OB_AROMATIC_BOND</a>); }</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#ac9185612a7a1cc62815db9eea66879d9">  132</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#ac9185612a7a1cc62815db9eea66879d9">SetWedge</a>(<span class="keywordtype">bool</span> value=<span class="keyword">true</span>) { <a class="code" href="bond_8h.shtml#a05c44d063162906b3dd12b6e90d24de4">SET_OR_UNSET_FLAG</a>(Wedge); }</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a02d0674b826ff9d5cbf79bf887b2625f">  137</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a02d0674b826ff9d5cbf79bf887b2625f">SetHash</a>(<span class="keywordtype">bool</span> value=<span class="keyword">true</span>) { <a class="code" href="bond_8h.shtml#a05c44d063162906b3dd12b6e90d24de4">SET_OR_UNSET_FLAG</a>(Hash); }</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a1c43610191274e51ceeac84d5f127e5f">  141</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a1c43610191274e51ceeac84d5f127e5f">SetWedgeOrHash</a>(<span class="keywordtype">bool</span> value=<span class="keyword">true</span>) { <a class="code" href="bond_8h.shtml#a05c44d063162906b3dd12b6e90d24de4">SET_OR_UNSET_FLAG</a>(WedgeOrHash); }</div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a784bd0847745feaf11bafaddf5cb4c5f">  143</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a784bd0847745feaf11bafaddf5cb4c5f">SetInRing</a>(<span class="keywordtype">bool</span> value=<span class="keyword">true</span>) { <a class="code" href="bond_8h.shtml#a05c44d063162906b3dd12b6e90d24de4">SET_OR_UNSET_FLAG</a>(<a class="code" href="bond_8h.shtml#a2f74970f7126e2bc1e9a4e1d8ed1af26">OB_RING_BOND</a>); }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#af1391fad867bc3d202dd43b490227632">  148</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#af1391fad867bc3d202dd43b490227632">SetClosure</a>(<span class="keywordtype">bool</span> value=<span class="keyword">true</span>)     { <a class="code" href="bond_8h.shtml#a05c44d063162906b3dd12b6e90d24de4">SET_OR_UNSET_FLAG</a>(<a class="code" href="bond_8h.shtml#a19b6306ab83f788b1fb60f8816b07e9c">OB_CLOSURE_BOND</a>); }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>     GetIdx()<span class="keyword">           const </span>{ <span class="keywordflow">return</span>(_idx);  }</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a6dd98e3e99e394dce75b285c451028b1">  155</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a6dd98e3e99e394dce75b285c451028b1">GetId</a>()<span class="keyword">           const </span>{ <span class="keywordflow">return</span> _id; }</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#ad4ae2f349fa9fe34dea5f5e69378fbf7">  157</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>     <a class="code" href="classOpenBabel_1_1OBBond.shtml#ad4ae2f349fa9fe34dea5f5e69378fbf7">GetBondOrder</a>()<span class="keyword">     const </span>{ <span class="keywordflow">return</span>(_order); }</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#ad2ed50e039de387fb517a9f7832de06f">  159</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>     <a class="code" href="classOpenBabel_1_1OBBond.shtml#ad2ed50e039de387fb517a9f7832de06f">GetFlags</a>()<span class="keyword">         const </span>{ <span class="keywordflow">return</span>(_flags);      }</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#ae11a8ddd132109c3a14328bb7676d9f7">  161</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>     <a class="code" href="classOpenBabel_1_1OBBond.shtml#ae11a8ddd132109c3a14328bb7676d9f7">GetBeginAtomIdx</a>()<span class="keyword">  const</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> (_bgn ? _bgn-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>() : 0); }</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a38f53ed138507e197a36be75e58a24da">  164</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>     <a class="code" href="classOpenBabel_1_1OBBond.shtml#a38f53ed138507e197a36be75e58a24da">GetEndAtomIdx</a>()<span class="keyword">    const</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> (_end ? _end-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>() : 0); }</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#afdda9b904cabc9ce0335a665988ab143">  167</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *<a class="code" href="classOpenBabel_1_1OBBond.shtml#afdda9b904cabc9ce0335a665988ab143">GetBeginAtom</a>()    { <span class="keywordflow">return</span>(_bgn);    }</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#ae24579e3e3a0beac0d559aa2ac513f5d">  168</a></span>&#160;      <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *<a class="code" href="classOpenBabel_1_1OBBond.shtml#ae24579e3e3a0beac0d559aa2ac513f5d">GetBeginAtom</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span>(_bgn);    }</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#aee593e9cc14031b07e3dc63a003c345f">  171</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *<a class="code" href="classOpenBabel_1_1OBBond.shtml#aee593e9cc14031b07e3dc63a003c345f">GetEndAtom</a>()      { <span class="keywordflow">return</span>(_end);    }</div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a2b0f900d4472956b82a94dca09c64eeb">  172</a></span>&#160;      <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *<a class="code" href="classOpenBabel_1_1OBBond.shtml#a2b0f900d4472956b82a94dca09c64eeb">GetEndAtom</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span>(_end);    }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a30735471b108fe43965fd2d0a9fe86a0">  177</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *<a class="code" href="classOpenBabel_1_1OBBond.shtml#a30735471b108fe43965fd2d0a9fe86a0">GetNbrAtom</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *ptr)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;          <span class="keywordflow">return</span>((ptr != _bgn)? _bgn : _end);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        }</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#ad8480b61159bc6cb861b17341dc2b29a">  182</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>  *<a class="code" href="classOpenBabel_1_1OBBond.shtml#ad8480b61159bc6cb861b17341dc2b29a">GetParent</a>()                 {<span class="keywordflow">return</span>(_parent);}</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordtype">double</span>  GetEquibLength() <span class="keyword">const</span>;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      <span class="keywordtype">double</span>  GetLength() <span class="keyword">const</span>;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#ae3aba2dee7140a159fb534747bb2dc7a">  191</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>     <a class="code" href="classOpenBabel_1_1OBBond.shtml#ae3aba2dee7140a159fb534747bb2dc7a">GetNbrAtomIdx</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *ptr)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;          <span class="keywordflow">if</span> (ptr!=_bgn)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="keywordflow">return</span> (_bgn ? _bgn-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>() : 0);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;          <span class="keywordflow">else</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">return</span> (_end ? _end-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>() : 0);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        }</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      <a class="code" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>* FindSmallestRing() <span class="keyword">const</span>;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      <span class="keywordtype">bool</span> IsAromatic() <span class="keyword">const</span>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      <span class="keywordtype">bool</span> IsInRing() <span class="keyword">const</span>;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      <span class="keywordtype">bool</span> IsRotor(<span class="keywordtype">bool</span> includeRingBonds=<span class="keyword">false</span>);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordtype">bool</span> IsAmide();</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keywordtype">bool</span> IsPrimaryAmide();</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="keywordtype">bool</span> IsSecondaryAmide();</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="keywordtype">bool</span> IsTertiaryAmide();</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      <span class="keywordtype">bool</span> IsEster();</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordtype">bool</span> IsCarbonyl();</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      <span class="keywordtype">bool</span> IsClosure();</div><div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#a70910881ff95404e96c9b40d33e0db76">  238</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#a70910881ff95404e96c9b40d33e0db76">IsWedge</a>() {    <span class="keywordflow">return</span>(HasFlag(<a class="code" href="bond_8h.shtml#a71faadca5c5e100b081f5a563c22e9ee">OB_WEDGE_BOND</a>));    }</div><div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#ab5e8e371f621ba037c843f6da7fe6bdb">  241</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#ab5e8e371f621ba037c843f6da7fe6bdb">IsHash</a>()  {    <span class="keywordflow">return</span>(HasFlag(<a class="code" href="bond_8h.shtml#a14b10c08a25058d1d4a98f8573195119">OB_HASH_BOND</a>));     }</div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#adde4f29d5c0c23a90e04e11ecdd1edfc">  247</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#adde4f29d5c0c23a90e04e11ecdd1edfc">IsWedgeOrHash</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span>(HasFlag(WedgeOrHash)); }</div><div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBond.shtml#aa8b4b96aad165feb9b21d7a25a9b2b29">  252</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBBond.shtml#aa8b4b96aad165feb9b21d7a25a9b2b29">IsCisOrTrans</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span>(HasFlag(CisOrTrans)); }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      <span class="keywordtype">bool</span> IsDoubleBondGeometry();</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    }; <span class="comment">// class OBBond</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  <span class="keyword">typedef</span> std::vector&lt;OBBond*&gt;::iterator <a class="code" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a>;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}<span class="comment">// namespace OpenBabel</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="preprocessor">#endif   // OB_BOND_H</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OBBond_shtml_adcdab8f96dc4fdc2940749e527087245"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#adcdab8f96dc4fdc2940749e527087245">OpenBabel::OBBond::SetFlag</a></div><div class="ttdeci">void SetFlag(int flag)</div><div class="ttdef"><b>Definition:</b> bond.h:77</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_aa8b4b96aad165feb9b21d7a25a9b2b29"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#aa8b4b96aad165feb9b21d7a25a9b2b29">OpenBabel::OBBond::IsCisOrTrans</a></div><div class="ttdeci">bool IsCisOrTrans() const</div><div class="ttdef"><b>Definition:</b> bond.h:252</div></div>
<div class="ttc" id="bond_8h_shtml_a71faadca5c5e100b081f5a563c22e9ee"><div class="ttname"><a href="bond_8h.shtml#a71faadca5c5e100b081f5a563c22e9ee">OB_WEDGE_BOND</a></div><div class="ttdeci">#define OB_WEDGE_BOND</div><div class="ttdoc">A solid black wedge in 2D representations – i.e., &quot;up&quot; from the 2D plane. </div><div class="ttdef"><b>Definition:</b> bond.h:43</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_ae11a8ddd132109c3a14328bb7676d9f7"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#ae11a8ddd132109c3a14328bb7676d9f7">OpenBabel::OBBond::GetBeginAtomIdx</a></div><div class="ttdeci">unsigned int GetBeginAtomIdx() const</div><div class="ttdef"><b>Definition:</b> bond.h:161</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a3f3de3e0d751949b8d0b60ffb302944a"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a3f3de3e0d751949b8d0b60ffb302944a">OpenBabel::OBBond::Flag</a></div><div class="ttdeci">Flag</div><div class="ttdef"><b>Definition:</b> bond.h:84</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_aec57dcfb24a8b5496b6319fa1172fa5e"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#aec57dcfb24a8b5496b6319fa1172fa5e">OpenBabel::OBBond::_flags</a></div><div class="ttdeci">unsigned short int _flags</div><div class="ttdoc">Any flags for this bond. </div><div class="ttdef"><b>Definition:</b> bond.h:66</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a02d0674b826ff9d5cbf79bf887b2625f"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a02d0674b826ff9d5cbf79bf887b2625f">OpenBabel::OBBond::SetHash</a></div><div class="ttdeci">void SetHash(bool value=true)</div><div class="ttdef"><b>Definition:</b> bond.h:137</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_ae3aba2dee7140a159fb534747bb2dc7a"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#ae3aba2dee7140a159fb534747bb2dc7a">OpenBabel::OBBond::GetNbrAtomIdx</a></div><div class="ttdeci">unsigned int GetNbrAtomIdx(OBAtom *ptr)</div><div class="ttdef"><b>Definition:</b> bond.h:191</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRing_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBRing.shtml">OpenBabel::OBRing</a></div><div class="ttdoc">Stores information on rings in a molecule from SSSR perception. </div><div class="ttdef"><b>Definition:</b> ring.h:40</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a9bcf1c90715c368ce2896acae75235c4"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a9bcf1c90715c368ce2896acae75235c4">OpenBabel::OBBond::SetEnd</a></div><div class="ttdeci">void SetEnd(OBAtom *end)</div><div class="ttdoc">Set the ending atom of this bond to end. Does not update end. </div><div class="ttdef"><b>Definition:</b> bond.h:116</div></div>
<div class="ttc" id="base_8h_shtml"><div class="ttname"><a href="base_8h.shtml">base.h</a></div><div class="ttdoc">Base classes to build a graph. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_ae24579e3e3a0beac0d559aa2ac513f5d"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#ae24579e3e3a0beac0d559aa2ac513f5d">OpenBabel::OBBond::GetBeginAtom</a></div><div class="ttdeci">const OBAtom * GetBeginAtom() const</div><div class="ttdef"><b>Definition:</b> bond.h:168</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a30735471b108fe43965fd2d0a9fe86a0"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a30735471b108fe43965fd2d0a9fe86a0">OpenBabel::OBBond::GetNbrAtom</a></div><div class="ttdeci">OBAtom * GetNbrAtom(OBAtom *ptr)</div><div class="ttdef"><b>Definition:</b> bond.h:177</div></div>
<div class="ttc" id="bond_8h_shtml_a90183171d38e32f07e97bffb7836f9fd"><div class="ttname"><a href="bond_8h.shtml#a90183171d38e32f07e97bffb7836f9fd">OB_AROMATIC_BOND</a></div><div class="ttdeci">#define OB_AROMATIC_BOND</div><div class="ttdoc">An aromatic bond (regardless of bond order) </div><div class="ttdef"><b>Definition:</b> bond.h:41</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a1c43610191274e51ceeac84d5f127e5f"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a1c43610191274e51ceeac84d5f127e5f">OpenBabel::OBBond::SetWedgeOrHash</a></div><div class="ttdeci">void SetWedgeOrHash(bool value=true)</div><div class="ttdef"><b>Definition:</b> bond.h:141</div></div>
<div class="ttc" id="bond_8h_shtml_a19b6306ab83f788b1fb60f8816b07e9c"><div class="ttname"><a href="bond_8h.shtml#a19b6306ab83f788b1fb60f8816b07e9c">OB_CLOSURE_BOND</a></div><div class="ttdeci">#define OB_CLOSURE_BOND</div><div class="ttdoc">A bond which &quot;closes&quot; a ring when walking the molecular graph. </div><div class="ttdef"><b>Definition:</b> bond.h:49</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_ac9185612a7a1cc62815db9eea66879d9"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#ac9185612a7a1cc62815db9eea66879d9">OpenBabel::OBBond::SetWedge</a></div><div class="ttdeci">void SetWedge(bool value=true)</div><div class="ttdef"><b>Definition:</b> bond.h:132</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a1219a011a5e0ec59c67a5a873d81986c"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a1219a011a5e0ec59c67a5a873d81986c">OpenBabel::OBBond::_idx</a></div><div class="ttdeci">unsigned int _idx</div><div class="ttdoc">Unique edge index used by GetIdx() and SetIdx() </div><div class="ttdef"><b>Definition:</b> bond.h:61</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml">OpenBabel::OBBond</a></div><div class="ttdoc">Bond class. </div><div class="ttdef"><b>Definition:</b> bond.h:58</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a2b0f900d4472956b82a94dca09c64eeb"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a2b0f900d4472956b82a94dca09c64eeb">OpenBabel::OBBond::GetEndAtom</a></div><div class="ttdeci">const OBAtom * GetEndAtom() const</div><div class="ttdef"><b>Definition:</b> bond.h:172</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMol_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a></div><div class="ttdoc">Molecule Class. </div><div class="ttdef"><b>Definition:</b> mol.h:118</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a3c443bcf96eac155aa058b69cc59aa4e"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a3c443bcf96eac155aa058b69cc59aa4e">OpenBabel::OBBond::SetBegin</a></div><div class="ttdeci">void SetBegin(OBAtom *begin)</div><div class="ttdoc">Set the beginning atom of this bond to begin. Does not update begin. </div><div class="ttdef"><b>Definition:</b> bond.h:114</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a70910881ff95404e96c9b40d33e0db76"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a70910881ff95404e96c9b40d33e0db76">OpenBabel::OBBond::IsWedge</a></div><div class="ttdeci">bool IsWedge()</div><div class="ttdef"><b>Definition:</b> bond.h:238</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a6368d7673f23186649b2969ade3661d7"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a6368d7673f23186649b2969ade3661d7">OpenBabel::OBBond::Visit</a></div><div class="ttdeci">bool Visit</div><div class="ttdoc">Whether this bond has been visited by a graph algorithm. </div><div class="ttdef"><b>Definition:</b> bond.h:97</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_adde4f29d5c0c23a90e04e11ecdd1edfc"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#adde4f29d5c0c23a90e04e11ecdd1edfc">OpenBabel::OBBond::IsWedgeOrHash</a></div><div class="ttdeci">bool IsWedgeOrHash() const</div><div class="ttdef"><b>Definition:</b> bond.h:247</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_ad2ed50e039de387fb517a9f7832de06f"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#ad2ed50e039de387fb517a9f7832de06f">OpenBabel::OBBond::GetFlags</a></div><div class="ttdeci">unsigned int GetFlags() const</div><div class="ttdef"><b>Definition:</b> bond.h:159</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a934b854d51de7d1601168ace7c681bc5"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a934b854d51de7d1601168ace7c681bc5">OpenBabel::OBBond::SetAromatic</a></div><div class="ttdeci">void SetAromatic(bool value=true)</div><div class="ttdoc">Mark that this bond is aromatic. Does not update atoms or validate. </div><div class="ttdef"><b>Definition:</b> bond.h:127</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_afbdb429fe4a7d37960636a555de77326"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#afbdb429fe4a7d37960636a555de77326">OpenBabel::OBBond::StereoFlag</a></div><div class="ttdeci">StereoFlag</div><div class="ttdef"><b>Definition:</b> bond.h:89</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a3a61f73b711933e11ee793bf8fc550e0"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a3a61f73b711933e11ee793bf8fc550e0">OpenBabel::OBBond::_bgn</a></div><div class="ttdeci">OBAtom * _bgn</div><div class="ttdoc">I connect one node. </div><div class="ttdef"><b>Definition:</b> bond.h:63</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_afdda9b904cabc9ce0335a665988ab143"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#afdda9b904cabc9ce0335a665988ab143">OpenBabel::OBBond::GetBeginAtom</a></div><div class="ttdeci">OBAtom * GetBeginAtom()</div><div class="ttdef"><b>Definition:</b> bond.h:167</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a6dd98e3e99e394dce75b285c451028b1"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a6dd98e3e99e394dce75b285c451028b1">OpenBabel::OBBond::GetId</a></div><div class="ttdeci">unsigned long GetId() const</div><div class="ttdef"><b>Definition:</b> bond.h:155</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a54495d3eb8f9749d0237e6bda59e0abe"><div class="ttname"><a href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OpenBabel::OBBondIterator</a></div><div class="ttdeci">std::vector&lt; OBBond * &gt;::iterator OBBondIterator</div><div class="ttdoc">A standard iterator over a vector of bonds. </div><div class="ttdef"><b>Definition:</b> atom.h:46</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a784bd0847745feaf11bafaddf5cb4c5f"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a784bd0847745feaf11bafaddf5cb4c5f">OpenBabel::OBBond::SetInRing</a></div><div class="ttdeci">void SetInRing(bool value=true)</div><div class="ttdoc">Mark that this bond is in a ring. Primarily for internal use. </div><div class="ttdef"><b>Definition:</b> bond.h:143</div></div>
<div class="ttc" id="bond_8h_shtml_a14b10c08a25058d1d4a98f8573195119"><div class="ttname"><a href="bond_8h.shtml#a14b10c08a25058d1d4a98f8573195119">OB_HASH_BOND</a></div><div class="ttdeci">#define OB_HASH_BOND</div><div class="ttdoc">A dashed &quot;hash&quot; bond in 2D representations – i.e., &quot;down&quot; from the 2D plane. </div><div class="ttdef"><b>Definition:</b> bond.h:45</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a962b3010305cfb80ba816a0e54097dee"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a962b3010305cfb80ba816a0e54097dee">OpenBabel::OBBond::SetParent</a></div><div class="ttdeci">void SetParent(OBMol *ptr)</div><div class="ttdoc">Set the parent molecule to ptr. Does not update parent. </div><div class="ttdef"><b>Definition:</b> bond.h:118</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_af1391fad867bc3d202dd43b490227632"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#af1391fad867bc3d202dd43b490227632">OpenBabel::OBBond::SetClosure</a></div><div class="ttdeci">void SetClosure(bool value=true)</div><div class="ttdoc">Mark that this bond indicates a ring closure when walking the molecule. </div><div class="ttdef"><b>Definition:</b> bond.h:148</div></div>
<div class="ttc" id="bond_8h_shtml_a05c44d063162906b3dd12b6e90d24de4"><div class="ttname"><a href="bond_8h.shtml#a05c44d063162906b3dd12b6e90d24de4">SET_OR_UNSET_FLAG</a></div><div class="ttdeci">#define SET_OR_UNSET_FLAG(X)</div><div class="ttdef"><b>Definition:</b> bond.h:53</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a44b77545e83209582e42f375c8f40474"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">OpenBabel::OBAtom::GetIdx</a></div><div class="ttdeci">unsigned int GetIdx() const</div><div class="ttdef"><b>Definition:</b> atom.h:189</div></div>
<div class="ttc" id="bond_8h_shtml_a2f74970f7126e2bc1e9a4e1d8ed1af26"><div class="ttname"><a href="bond_8h.shtml#a2f74970f7126e2bc1e9a4e1d8ed1af26">OB_RING_BOND</a></div><div class="ttdeci">#define OB_RING_BOND</div><div class="ttdoc">A bond in a ring. </div><div class="ttdef"><b>Definition:</b> bond.h:47</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a29c5c831c63b61f3c0906cd12f05e1bc"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a29c5c831c63b61f3c0906cd12f05e1bc">OpenBabel::OBBond::HasFlag</a></div><div class="ttdeci">bool HasFlag(int flag) const</div><div class="ttdef"><b>Definition:</b> bond.h:73</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_ad4ae2f349fa9fe34dea5f5e69378fbf7"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#ad4ae2f349fa9fe34dea5f5e69378fbf7">OpenBabel::OBBond::GetBondOrder</a></div><div class="ttdeci">unsigned int GetBondOrder() const</div><div class="ttdef"><b>Definition:</b> bond.h:157</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_ad8480b61159bc6cb861b17341dc2b29a"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#ad8480b61159bc6cb861b17341dc2b29a">OpenBabel::OBBond::GetParent</a></div><div class="ttdeci">OBMol * GetParent()</div><div class="ttdef"><b>Definition:</b> bond.h:182</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_ab994a975e39f5c62288f4f972b6f90c9"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#ab994a975e39f5c62288f4f972b6f90c9">OpenBabel::OBBond::SetIdx</a></div><div class="ttdeci">void SetIdx(int idx)</div><div class="ttdoc">Set the internal bond index. </div><div class="ttdef"><b>Definition:</b> bond.h:109</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_aa15238ffbdb1330727678c9d6553d6ba"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#aa15238ffbdb1330727678c9d6553d6ba">OpenBabel::OBBond::_parent</a></div><div class="ttdeci">OBMol * _parent</div><div class="ttdoc">The molecule which contains me (if any) </div><div class="ttdef"><b>Definition:</b> bond.h:62</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a383094c5a19383cf09f3dfb4c1de1da2"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a383094c5a19383cf09f3dfb4c1de1da2">OpenBabel::OBBond::SetId</a></div><div class="ttdeci">void SetId(unsigned long id)</div><div class="ttdef"><b>Definition:</b> bond.h:110</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_aee593e9cc14031b07e3dc63a003c345f"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#aee593e9cc14031b07e3dc63a003c345f">OpenBabel::OBBond::GetEndAtom</a></div><div class="ttdeci">OBAtom * GetEndAtom()</div><div class="ttdef"><b>Definition:</b> bond.h:171</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a401b99defa8a57195dc40a2604cee115"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a401b99defa8a57195dc40a2604cee115">OpenBabel::OBBond::UnsetFlag</a></div><div class="ttdeci">void UnsetFlag(int flag)</div><div class="ttdef"><b>Definition:</b> bond.h:81</div></div>
<div class="ttc" id="atom_8h_shtml"><div class="ttname"><a href="atom_8h.shtml">atom.h</a></div><div class="ttdoc">Handle atoms. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_ab5e8e371f621ba037c843f6da7fe6bdb"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#ab5e8e371f621ba037c843f6da7fe6bdb">OpenBabel::OBBond::IsHash</a></div><div class="ttdeci">bool IsHash()</div><div class="ttdef"><b>Definition:</b> bond.h:241</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a38f53ed138507e197a36be75e58a24da"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a38f53ed138507e197a36be75e58a24da">OpenBabel::OBBond::GetEndAtomIdx</a></div><div class="ttdeci">unsigned int GetEndAtomIdx() const</div><div class="ttdef"><b>Definition:</b> bond.h:164</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_a3db9d8d4a032ad98c3cc9139bff39a49"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#a3db9d8d4a032ad98c3cc9139bff39a49">OpenBabel::OBBond::_order</a></div><div class="ttdeci">char _order</div><div class="ttdoc">Bond order (1, 2, 3, 5=aromatic) </div><div class="ttdef"><b>Definition:</b> bond.h:65</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml">OpenBabel::OBBase</a></div><div class="ttdoc">Base Class. </div><div class="ttdef"><b>Definition:</b> base.h:239</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_aa094fa86d6e276e37457b5f662d386e0"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#aa094fa86d6e276e37457b5f662d386e0">OpenBabel::OBBond::_end</a></div><div class="ttdeci">OBAtom * _end</div><div class="ttdoc">to another node </div><div class="ttdef"><b>Definition:</b> bond.h:64</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml_accc49a515c7a81154bd46a8ea8a16204"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml#accc49a515c7a81154bd46a8ea8a16204">OpenBabel::OBBond::_id</a></div><div class="ttdeci">unsigned long _id</div><div class="ttdoc">unique id </div><div class="ttdef"><b>Definition:</b> bond.h:67</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml">OpenBabel::OBAtom</a></div><div class="ttdoc">Atom class. </div><div class="ttdef"><b>Definition:</b> atom.h:71</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Oct 15 2019 21:28:03 for Open Babel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
