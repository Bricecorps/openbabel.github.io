<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open Babel: OBMessageHandler Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open Babel
   &#160;<span id="projectnumber">3.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml">OBMessageHandler</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classOpenBabel_1_1OBMessageHandler-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBMessageHandler Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="oberror_8h_source.shtml">openbabel/oberror.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5cce70bc2fc932b31d3f31bda5900414"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a5cce70bc2fc932b31d3f31bda5900414">OBMessageHandler</a> ()</td></tr>
<tr class="separator:a5cce70bc2fc932b31d3f31bda5900414"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cc3bdf8e84224428a5bde1179b8cc60"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a4cc3bdf8e84224428a5bde1179b8cc60">~OBMessageHandler</a> ()</td></tr>
<tr class="separator:a4cc3bdf8e84224428a5bde1179b8cc60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2482566201934523c4631d85b1214a70"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a2482566201934523c4631d85b1214a70">ThrowError</a> (<a class="el" href="classOpenBabel_1_1OBError.shtml">OBError</a> err, <a class="el" href="namespaceOpenBabel.shtml#a91e6912277f7537a670952698f7b2d82">errorQualifier</a> qqualifier=<a class="el" href="namespaceOpenBabel.shtml#a91e6912277f7537a670952698f7b2d82a94bec3e41bc9810307020aaae030baa5">always</a>)</td></tr>
<tr class="separator:a2482566201934523c4631d85b1214a70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40f9d382b5453a4cbf744c9be7f98ab2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a40f9d382b5453a4cbf744c9be7f98ab2">ThrowError</a> (const std::string &amp;method, const std::string &amp;errorMsg, <a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9">obMessageLevel</a> level=<a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9afd56eb19b254da4133c9c28f7cccf5ce">obDebug</a>, <a class="el" href="namespaceOpenBabel.shtml#a91e6912277f7537a670952698f7b2d82">errorQualifier</a> qualifier=<a class="el" href="namespaceOpenBabel.shtml#a91e6912277f7537a670952698f7b2d82a94bec3e41bc9810307020aaae030baa5">always</a>)</td></tr>
<tr class="separator:a40f9d382b5453a4cbf744c9be7f98ab2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaacf3302e7348bab13284a1336040240"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#aaacf3302e7348bab13284a1336040240">GetMessagesOfLevel</a> (const <a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9">obMessageLevel</a>)</td></tr>
<tr class="separator:aaacf3302e7348bab13284a1336040240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ddeff91a6a4f113be67243d32aae4f0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a2ddeff91a6a4f113be67243d32aae4f0">StartLogging</a> ()</td></tr>
<tr class="separator:a2ddeff91a6a4f113be67243d32aae4f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08d309e66bc4091df861de396b6dd4a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a08d309e66bc4091df861de396b6dd4a4">StopLogging</a> ()</td></tr>
<tr class="separator:a08d309e66bc4091df861de396b6dd4a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77f52cdbd233a78a86a17fdbc5b1aeba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a77f52cdbd233a78a86a17fdbc5b1aeba">SetMaxLogEntries</a> (unsigned int max)</td></tr>
<tr class="separator:a77f52cdbd233a78a86a17fdbc5b1aeba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5cc775d9bcbe374ba8e3a7706441187"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#ad5cc775d9bcbe374ba8e3a7706441187">GetMaxLogEntries</a> ()</td></tr>
<tr class="separator:ad5cc775d9bcbe374ba8e3a7706441187"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af69ea3bc45568000475c11f584bd6506"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#af69ea3bc45568000475c11f584bd6506">ClearLog</a> ()</td></tr>
<tr class="separator:af69ea3bc45568000475c11f584bd6506"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae467fbd6fca625ae5ee0ea066810280f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#ae467fbd6fca625ae5ee0ea066810280f">SetOutputLevel</a> (const <a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9">obMessageLevel</a> level)</td></tr>
<tr class="separator:ae467fbd6fca625ae5ee0ea066810280f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e6a1f72967b7b5e99d6a25cdde2fe34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9">obMessageLevel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a3e6a1f72967b7b5e99d6a25cdde2fe34">GetOutputLevel</a> ()</td></tr>
<tr class="separator:a3e6a1f72967b7b5e99d6a25cdde2fe34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d5a7033d340808ae4eb4602a6f638de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a8d5a7033d340808ae4eb4602a6f638de">SetOutputStream</a> (std::ostream *os)</td></tr>
<tr class="separator:a8d5a7033d340808ae4eb4602a6f638de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa3e05fe5fa00cc48db4a2b5b5f3ba95"><td class="memItemLeft" align="right" valign="top">std::ostream *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#afa3e05fe5fa00cc48db4a2b5b5f3ba95">GetOutputStream</a> ()</td></tr>
<tr class="separator:afa3e05fe5fa00cc48db4a2b5b5f3ba95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7822d9b9f26fac754fa79efab0dfcaf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#ab7822d9b9f26fac754fa79efab0dfcaf">StartErrorWrap</a> ()</td></tr>
<tr class="separator:ab7822d9b9f26fac754fa79efab0dfcaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac846e5a1ffd589891812b87e129b1a67"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#ac846e5a1ffd589891812b87e129b1a67">StopErrorWrap</a> ()</td></tr>
<tr class="separator:ac846e5a1ffd589891812b87e129b1a67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43dbb5cf7a6a8e51944720b532ebf0a3"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a43dbb5cf7a6a8e51944720b532ebf0a3">GetErrorMessageCount</a> ()</td></tr>
<tr class="separator:a43dbb5cf7a6a8e51944720b532ebf0a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8c74030fe5436581bebd5c42af17bc5"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#ad8c74030fe5436581bebd5c42af17bc5">GetWarningMessageCount</a> ()</td></tr>
<tr class="separator:ad8c74030fe5436581bebd5c42af17bc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00c4e7133ee9e7290c0002445789c1c6"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a00c4e7133ee9e7290c0002445789c1c6">GetInfoMessageCount</a> ()</td></tr>
<tr class="separator:a00c4e7133ee9e7290c0002445789c1c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48866a67a47b80b0d0c6adf5267e72eb"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a48866a67a47b80b0d0c6adf5267e72eb">GetAuditMessageCount</a> ()</td></tr>
<tr class="separator:a48866a67a47b80b0d0c6adf5267e72eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a673ec0e1a1c14ca7117e07a90efcd8ee"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a673ec0e1a1c14ca7117e07a90efcd8ee">GetDebugMessageCount</a> ()</td></tr>
<tr class="separator:a673ec0e1a1c14ca7117e07a90efcd8ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab58fc0b88f40b7dca684dfad13d587b7"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#ab58fc0b88f40b7dca684dfad13d587b7">GetMessageSummary</a> ()</td></tr>
<tr class="separator:ab58fc0b88f40b7dca684dfad13d587b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a5812cd4eb01367908022f9ef86e49ec6"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a5812cd4eb01367908022f9ef86e49ec6">_messageCount</a> [5]</td></tr>
<tr class="separator:a5812cd4eb01367908022f9ef86e49ec6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08ea2212aebb85ea22895ec49bd81f85"><td class="memItemLeft" align="right" valign="top">std::deque&lt; <a class="el" href="classOpenBabel_1_1OBError.shtml">OBError</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a08ea2212aebb85ea22895ec49bd81f85">_messageList</a></td></tr>
<tr class="separator:a08ea2212aebb85ea22895ec49bd81f85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abddad1d062682a33800f8d048a1e35f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9">obMessageLevel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#abddad1d062682a33800f8d048a1e35f6">_outputLevel</a></td></tr>
<tr class="separator:abddad1d062682a33800f8d048a1e35f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adff5b7b50cde9f6620dc08128df860c4"><td class="memItemLeft" align="right" valign="top">std::ostream *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#adff5b7b50cde9f6620dc08128df860c4">_outputStream</a></td></tr>
<tr class="separator:adff5b7b50cde9f6620dc08128df860c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c4c6fad78b988cdc4fc9b7ade5e788c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a3c4c6fad78b988cdc4fc9b7ade5e788c">_logging</a></td></tr>
<tr class="separator:a3c4c6fad78b988cdc4fc9b7ade5e788c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a0d2d55c1de9a5afc3bf71abedfdddd"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a7a0d2d55c1de9a5afc3bf71abedfdddd">_maxEntries</a></td></tr>
<tr class="separator:a7a0d2d55c1de9a5afc3bf71abedfdddd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e0837dfabcca64b1bdf2392e70b3228"><td class="memItemLeft" align="right" valign="top">std::streambuf *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a3e0837dfabcca64b1bdf2392e70b3228">_inWrapStreamBuf</a></td></tr>
<tr class="separator:a3e0837dfabcca64b1bdf2392e70b3228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9285cdb5ae08c9a33cd6d6998cd69a26"><td class="memItemLeft" align="right" valign="top">std::streambuf *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a9285cdb5ae08c9a33cd6d6998cd69a26">_filterStreamBuf</a></td></tr>
<tr class="separator:a9285cdb5ae08c9a33cd6d6998cd69a26"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Handle error messages, warnings, debugging information and the like. </p>
<p><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml" title="Handle error messages, warnings, debugging information and the like. ">OBMessageHandler</a> represents a configurable error system for Open Babel.</p>
<p>A global error log is defined by the Open Babel library for use of internal code as well as code built on top of Open Babel. This class allows flexible filtering based on urgency (defined by the obMessageLevel type), an "audit log" of molecular changes, including recall using the GetMessagesOfLevel method, etc.</p>
<p>The default is to only log and output errors of priority obMessageLevel::obError or obMessageLevel::obWarning.</p>
<p>Long-running code may wish to set the size of the in-memory error log using the StartLogging / StopLogging methods and SetMaxLogEntries. Otherwise, the error log may easily fill up, requiring large amounts of memory.</p>
<p>If you wish to divert error output to a different std::ostream (i.e., for graphical display, or a file log), use the SetOutputStream method &ndash; the default goes to the std::clog stream. Furthermore, some older code uses std::cerr for direct error output, rather than the <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a2482566201934523c4631d85b1214a70" title="Throw an error with an already-formatted OBError object. ">ThrowError()</a> methods in this class. To prevent this, you can turn on "error wrapping" using the StartErrorWrap method &ndash; this behavior is turned off by default.</p>
<p>To make it easy to use the <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml" title="Handle error messages, warnings, debugging information and the like. ">OBMessageHandler</a> class and error logging facilities, a global log is defined:</p>
<div class="fragment"><div class="line">OBERROR <span class="keyword">extern</span> <a class="code" href="classOpenBabel_1_1OBMessageHandler.shtml#a5cce70bc2fc932b31d3f31bda5900414">OBMessageHandler</a> <a class="code" href="namespaceOpenBabel.shtml#a394eef44b3dd6a9174067715712c2d16">obErrorLog</a>;</div></div><!-- fragment --><p>Therefore, it is very easy to log errors:</p>
<div class="fragment"><div class="line"><span class="keywordflow">if</span> (atomIndex &lt; 1 || atomIndex &gt; mol.NumAtoms() )</div><div class="line">   obErrorLog.ThrowError(__FUNCTION__, <span class="stringliteral">&quot;Requested Atom Out of Range&quot;</span>, <a class="code" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9afd56eb19b254da4133c9c28f7cccf5ce">obDebug</a>);</div></div><!-- fragment --><p>or</p>
<div class="fragment"><div class="line">stringstream errorMsg;</div><div class="line">errorMsg &lt;&lt; <span class="stringliteral">&quot; Could not parse line in type translation table types.txt -- incorect number of columns&quot;</span>;</div><div class="line">errorMsg &lt;&lt; <span class="stringliteral">&quot; found &quot;</span> &lt;&lt; vc.size() &lt;&lt; <span class="stringliteral">&quot; expected &quot;</span> &lt;&lt; _ncols &lt;&lt; <span class="stringliteral">&quot;.&quot;</span>;</div><div class="line">obErrorLog.ThrowError(__FUNCTION__, errorMsg.str(), <a class="code" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9a8239e6e8daa5c812be192e6447979814">obInfo</a>);</div></div><!-- fragment --><p>The <b>FUNCTION</b> builtin is defined by many compilers (e.g., <a href="http://gcc.gnu.org/">GCC</a>) but can be defined to an empty string on some platforms without this compiler extension.</p>
<p>Output from the error log typically looks like: </p><div class="fragment"><div class="line">==============================</div><div class="line">    Open Babel Audit Log  in ReadChemObject</div><div class="line">OpenBabel::Read molecule Protein Data Bank format</div><div class="line">==============================</div><div class="line">    Open Babel Information  in ParseConectRecord</div><div class="line">WARNING: Problems reading a PDB file</div><div class="line">Problems reading a CONECT record.</div><div class="line">According to the PDB specification,</div><div class="line">the record should have 70 columns, but <a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a> found 61 columns.</div></div><!-- fragment --> </div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a5cce70bc2fc932b31d3f31bda5900414"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cce70bc2fc932b31d3f31bda5900414">&#9670;&nbsp;</a></span>OBMessageHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml">OBMessageHandler</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4cc3bdf8e84224428a5bde1179b8cc60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4cc3bdf8e84224428a5bde1179b8cc60">&#9670;&nbsp;</a></span>~OBMessageHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml">OBMessageHandler</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a2482566201934523c4631d85b1214a70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2482566201934523c4631d85b1214a70">&#9670;&nbsp;</a></span>ThrowError() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ThrowError </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBError.shtml">OBError</a>&#160;</td>
          <td class="paramname"><em>err</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a91e6912277f7537a670952698f7b2d82">errorQualifier</a>&#160;</td>
          <td class="paramname"><em>qqualifier</em> = <code><a class="el" href="namespaceOpenBabel.shtml#a91e6912277f7537a670952698f7b2d82a94bec3e41bc9810307020aaae030baa5">always</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Throw an error with an already-formatted <a class="el" href="classOpenBabel_1_1OBError.shtml" title="Customizable error handling and logging – store a message, including the method yielding the error...">OBError</a> object. </p>

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1FastSearchIndexer.shtml#ad4714872089241b8d1b5bb6b714b5e5c">FastSearchIndexer::Add()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62e485fd693d4458ab5c47835afab049">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBConversion.shtml#a342df96ba3cd8751e19758939dbef2f5">OBConversion::AddChemObject()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a2230dfc67c9b617df81f950e382844cc">OBDescriptor::AddProperties()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a228de88f48ee3ca6a11554b74d82dedd">OBMol::Align()</a>, <a class="el" href="namespaceOpenBabel.shtml#a656a12d74df6452be30fd76d3860bca6">OpenBabel::alternate()</a>, <a class="el" href="classOpenBabel_1_1OBChemTsfm.shtml#a1df01dc22c67cc084e1c82b8f9333cab">OBChemTsfm::Apply()</a>, <a class="el" href="classOpenBabel_1_1patty.shtml#aef2ec72bd2c0b6c3846d20c1ba1fce3f">patty::assign_types()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5efe4ccada855f2e0c4b0f57614f8607">OBAromaticTyper::AssignAromaticFlags()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ae773554c61c3b4f4c855ead5bec93ee6">OBAtomTyper::AssignHyb()</a>, <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62429f9b662a5d62b500ec2fedf7f67c">OBMol::AssignTotalChargeToAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad7c6f09e6720f6041c81097b407d0961">OBAtomTyper::AssignTypes()</a>, <a class="el" href="classOpenBabel_1_1OBRingTyper.shtml#ad7c6f09e6720f6041c81097b407d0961">OBRingTyper::AssignTypes()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ac543a42f2765cba8535d145519372bc5">OBBuilder::Build()</a>, <a class="el" href="namespaceOpenBabel.shtml#aac15077eefb9e377d3c400f1f2273826">OpenBabel::CartesianToInternal()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9e896374801d7ea5f8986ecb2b54d65b">OBMol::Center()</a>, <a class="el" href="classOpenBabel_1_1OBConversion.shtml#a39b6cebdf53672368cfa3edd8bc7740d">OBConversion::CheckForUnintendedBatch()</a>, <a class="el" href="structOpenBabel_1_1FptIndex.shtml#a682b05eef24f11179405526ff6f81095">FptIndex::CheckFP()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad12fd937da5f4b0c4562888252fe214b">OBMol::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a5a775da37f5ce464013813ec66b3a349">OBDescriptor::Compare()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBConversion.shtml#a95c512f009bf277d9d6299d9f5d0c13d">OBConversion::Convert()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#acba192e5cf0db39c2ed6af7ba05328dc">OBMol::ConvertDativeBonds()</a>, <a class="el" href="classOpenBabel_1_1OBPhModel.shtml#aae3bb8e98c90f3eb77b8654341eef135">OBPhModel::CorrectForPH()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7af037d80801b43ae5450bd74004d669">OBMol::CorrectForPH()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3258f54a86ddc9ebb8968ebdb2aeab37">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a486c6525ca5f6e49f4c9a3905805b9a9">OBMoleculeFormat::DeferMolOutput()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a0d49a0baf30d9e34b8b32f9d61e3043b">OBMoleculeFormat::DeleteDeferredMols()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a4e2ddc39752d20fabcda1afc1cc4e8e4">OBMol::DeleteHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a2993ead33ec2a4b15dd536d798ff844d">OBMol::DeleteNonPolarHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a43904e621e60855bc1818b56a7bd4b93">OBMol::DeletePolarHydrogens()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8f20b057374301df47198187a234f259">OpenBabel::DeleteStereoOnAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac32ffc23db124156a953e8e5cb923ccd">OBMol::EndModify()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="namespaceOpenBabel.shtml#afb8652b972f454e6ab6a58c7ffa46380">OpenBabel::FatalAllocationError()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#adc5179fa55c4d176d458cadb7ffd2afe">SpaceGroup::Find()</a>, <a class="el" href="classOpenBabel_1_1FastSearch.shtml#a131de20d28c02d7f15b9ca36d3c78fe5">FastSearch::Find()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ae58b3f3da59d333ffa0d5b0f005f3526">OBMol::FindRingAtomsAndBonds()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#abd5c2d1e536989dc3b180c7ebd79dc7c">OBRotorList::FindRotors()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#a9bbe06daca0e9e000492cc6a89d7dabd">OBFingerprint::Fold()</a>, <a class="el" href="classOpenBabel_1_1OBConversion.shtml#a9d12b0f7f38951d2d1065fc7ddae4229">OBConversion::FullConvert()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5595d8755d9ec6f539143f7d059124d0">OBMol::GetAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a21478d000fc5211caff7a7b1ffb3fbeb">OBMol::GetAtomById()</a>, <a class="el" href="namespaceOpenBabel.shtml#a896fe2a9e9925cda30253ea47ab123c6">OpenBabel::GetAtomIDNumber()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04806f750ec871778f68d6c2cff331a">OBMol::GetBond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af28457ecdb11ba34d05bb6b02124c0e0">OBMol::GetBondById()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a128010af55bd474015437e8794ab477e">OBBuilder::GetFragmentCoord()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a9d1adeb0f4720b6af7f0fc5569a8bb3e">OBDescriptor::GetIdentifier()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a8e992bd318407a72c7e745653716ae2c">OBMol::GetResidue()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a997bc4b84a93d285f63efa60cbb8ee8d">OBMol::GetSpacedFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab78d46b60f04702fa6f450ef6f8dae62">OBMol::GetTotalCharge()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa431b859ed26f5a45e6ddc3448da1d1f">OBMol::GetTotalSpinMultiplicity()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">OBAtom::HtoMethyl()</a>, <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a1e3b6d38df0786ccf7f938d60e386aae">OBGlobalDataBase::Init()</a>, <a class="el" href="namespaceOpenBabel.shtml#a3be6b6496e799b9308b6c1beb927c265">OpenBabel::InternalToCartesian()</a>, <a class="el" href="group__plugins.shtml#gabfb658dfec57d827a9e3c6db43c2d9d1">OBPlugin::LoadAllPlugins()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#afe0a7e760f4908db34dfb69dc65d3bba">OBBuilder::LoadFragments()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBConversion.shtml#aea0a1d956ad2f87302924423930c793b">OBConversion::NumInputObjects()</a>, <a class="el" href="classOpenBabel_1_1OBConversion.shtml#a23aaa3e3be1f55323cd956b53f6b0417">OBConversion::OpenAndSetFormat()</a>, <a class="el" href="classOpenBabel_1_1OBConversion.shtml#a7424c6fe9292f59087d23e7748ac237e">OBConversion::OpenInAndOutFiles()</a>, <a class="el" href="classDLHandler.shtml#aace44b593957d50c6396a1e23d67189d">DLHandler::openLib()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ae59fef8af62e52629bf2576e34a26801">OBAtomTyper::ParseLine()</a>, <a class="el" href="classOpenBabel_1_1OBRingTyper.shtml#ae59fef8af62e52629bf2576e34a26801">OBRingTyper::ParseLine()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ae59fef8af62e52629bf2576e34a26801">OBRotorRules::ParseLine()</a>, <a class="el" href="classOpenBabel_1_1OBPhModel.shtml#ae59fef8af62e52629bf2576e34a26801">OBPhModel::ParseLine()</a>, <a class="el" href="classOpenBabel_1_1OBTypeTable.shtml#ae59fef8af62e52629bf2576e34a26801">OBTypeTable::ParseLine()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, <a class="el" href="classOpenBabel_1_1patty.shtml#ad52e9084efab7e27fbe7fe394612ca57">patty::read_rules()</a>, <a class="el" href="classOpenBabel_1_1OBConversion.shtml#a76d7d1bf8e0c05c19d5b5e991fd0ba2f">OBConversion::ReadFile()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a2881c699e6a370c350ca135f51797839">OBMoleculeFormat::ReadNameIndex()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#ac41e9b3233ce576c2e4c5b242767eaec">OBDescriptor::ReadStringFromFilter()</a>, <a class="el" href="classOpenBabel_1_1OBConversion.shtml#a6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a2d560c7f2e4a9fdd1814ed8e09bd02">OBMol::RenumberAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7a6cf5e812be471e72ecac3ee5d0bc46">OBMol::Rotate()</a>, <a class="el" href="namespaceOpenBabel.shtml#a1e68658ca81568e214ebedb8f6c4bd10">OpenBabel::SafeOpen()</a>, <a class="el" href="classOpenBabel_1_1OBTypeTable.shtml#a9b40b242258cc488f341d06412a1fb89">OBTypeTable::SetFromType()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a49b0e7a728429a4482c47127538f0fa6">OBMol::SetInternalCoord()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a501e76993e9deb8ec8ab24c464d4ed3c">OBMol::SetTorsion()</a>, <a class="el" href="classOpenBabel_1_1OBTypeTable.shtml#aeb07d37f2d18888127964d11e28c1c12">OBTypeTable::SetToType()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a6acf77e0a6d65df4fe6d4d79831ed9d0">OBRotorList::Setup()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a41f4684ab61bddd674bda41fff7bac07">OBSmartsPattern::SMARTSError()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a113fc04678d0d9647ac6b51a1646d1f4">OBMol::StripSalts()</a>, <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a40f9d382b5453a4cbf744c9be7f98ab2">OBMessageHandler::ThrowError()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac9aac27fe3b12d7201f8eb7cb95a3c57">OpenBabel::ThrowError()</a>, <a class="el" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml#ac6f1bf41e38b3e8b182fa57269046070">OBTetraNonPlanarStereo::ToConfig()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a751725f02bf62696515d79608198cd59">OBMol::ToInertialFrame()</a>, <a class="el" href="classOpenBabel_1_1OBTypeTable.shtml#a613e0ea0da4b4b0d26ea29439e3554a8">OBTypeTable::Translate()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#adad8d93db1fadf354b6f51687335fcb9">OBMol::Translate()</a>, <a class="el" href="classOpenBabel_1_1patty.shtml#af574984ee6ea81537b5af994f7f590df">patty::type_to_int()</a>, <a class="el" href="namespaceOpenBabel.shtml#a22642156c54d298d699ea3946f633d1b">OpenBabel::UnitNameToConversionFactor()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a9c04a77825af89227b6f83f19909d01d">OBMoleculeFormat::WriteChemObjectImpl()</a>, <a class="el" href="classOpenBabel_1_1OBConversion.shtml#ad17f0a96643dec6840eda76c07a54698">OBConversion::WriteFile()</a>, and <a class="el" href="classOpenBabel_1_1FastSearchIndexer.shtml#a4ad5fb826838fc07d9bee2c09b5ef039">FastSearchIndexer::~FastSearchIndexer()</a>.</p>

</div>
</div>
<a id="a40f9d382b5453a4cbf744c9be7f98ab2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40f9d382b5453a4cbf744c9be7f98ab2">&#9670;&nbsp;</a></span>ThrowError() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ThrowError </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>errorMsg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9">obMessageLevel</a>&#160;</td>
          <td class="paramname"><em>level</em> = <code><a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9afd56eb19b254da4133c9c28f7cccf5ce">obDebug</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a91e6912277f7537a670952698f7b2d82">errorQualifier</a>&#160;</td>
          <td class="paramname"><em>qualifier</em> = <code><a class="el" href="namespaceOpenBabel.shtml#a91e6912277f7537a670952698f7b2d82a94bec3e41bc9810307020aaae030baa5">always</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Throw an error in the specified method with an appropriate level. </p>

</div>
</div>
<a id="aaacf3302e7348bab13284a1336040240"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaacf3302e7348bab13284a1336040240">&#9670;&nbsp;</a></span>GetMessagesOfLevel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::string &gt; GetMessagesOfLevel </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9">obMessageLevel</a>&#160;</td>
          <td class="paramname"><em>level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>all messages matching a specified level </dd></dl>

</div>
</div>
<a id="a2ddeff91a6a4f113be67243d32aae4f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ddeff91a6a4f113be67243d32aae4f0">&#9670;&nbsp;</a></span>StartLogging()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void StartLogging </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Start logging messages (default) </p>

</div>
</div>
<a id="a08d309e66bc4091df861de396b6dd4a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08d309e66bc4091df861de396b6dd4a4">&#9670;&nbsp;</a></span>StopLogging()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void StopLogging </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stop logging messages completely. </p>

</div>
</div>
<a id="a77f52cdbd233a78a86a17fdbc5b1aeba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77f52cdbd233a78a86a17fdbc5b1aeba">&#9670;&nbsp;</a></span>SetMaxLogEntries()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetMaxLogEntries </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>max</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the maximum number of entries (or 0 for no limit) </p>

</div>
</div>
<a id="ad5cc775d9bcbe374ba8e3a7706441187"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5cc775d9bcbe374ba8e3a7706441187">&#9670;&nbsp;</a></span>GetMaxLogEntries()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetMaxLogEntries </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the current maximum number of entries (default = 0 for no limit) </dd></dl>

</div>
</div>
<a id="af69ea3bc45568000475c11f584bd6506"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af69ea3bc45568000475c11f584bd6506">&#9670;&nbsp;</a></span>ClearLog()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ClearLog </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clear the current message log entirely. </p>

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1OBConversion.shtml#a9d12b0f7f38951d2d1065fc7ddae4229">OBConversion::FullConvert()</a>.</p>

</div>
</div>
<a id="ae467fbd6fca625ae5ee0ea066810280f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae467fbd6fca625ae5ee0ea066810280f">&#9670;&nbsp;</a></span>SetOutputLevel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetOutputLevel </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9">obMessageLevel</a>&#160;</td>
          <td class="paramname"><em>level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the level of messages to output (i.e., messages with at least this priority will be output) </p>

</div>
</div>
<a id="a3e6a1f72967b7b5e99d6a25cdde2fe34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e6a1f72967b7b5e99d6a25cdde2fe34">&#9670;&nbsp;</a></span>GetOutputLevel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9">obMessageLevel</a> GetOutputLevel </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the current output level </dd></dl>

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad12fd937da5f4b0c4562888252fe214b">OBMol::Clear()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ae58b3f3da59d333ffa0d5b0f005f3526">OBMol::FindRingAtomsAndBonds()</a>.</p>

</div>
</div>
<a id="a8d5a7033d340808ae4eb4602a6f638de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d5a7033d340808ae4eb4602a6f638de">&#9670;&nbsp;</a></span>SetOutputStream()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetOutputStream </td>
          <td>(</td>
          <td class="paramtype">std::ostream *&#160;</td>
          <td class="paramname"><em>os</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afa3e05fe5fa00cc48db4a2b5b5f3ba95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa3e05fe5fa00cc48db4a2b5b5f3ba95">&#9670;&nbsp;</a></span>GetOutputStream()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream* GetOutputStream </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab7822d9b9f26fac754fa79efab0dfcaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7822d9b9f26fac754fa79efab0dfcaf">&#9670;&nbsp;</a></span>StartErrorWrap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool StartErrorWrap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start "wrapping" messages to cerr into ThrowError calls. </p>

</div>
</div>
<a id="ac846e5a1ffd589891812b87e129b1a67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac846e5a1ffd589891812b87e129b1a67">&#9670;&nbsp;</a></span>StopErrorWrap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool StopErrorWrap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Turn off "wrapping" messages, restoring normal cerr use (default) </p>

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a4cc3bdf8e84224428a5bde1179b8cc60">OBMessageHandler::~OBMessageHandler()</a>.</p>

</div>
</div>
<a id="a43dbb5cf7a6a8e51944720b532ebf0a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43dbb5cf7a6a8e51944720b532ebf0a3">&#9670;&nbsp;</a></span>GetErrorMessageCount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetErrorMessageCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Count of messages received at the obError level </dd></dl>

</div>
</div>
<a id="ad8c74030fe5436581bebd5c42af17bc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8c74030fe5436581bebd5c42af17bc5">&#9670;&nbsp;</a></span>GetWarningMessageCount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetWarningMessageCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Count of messages received at the obWarning level </dd></dl>

</div>
</div>
<a id="a00c4e7133ee9e7290c0002445789c1c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00c4e7133ee9e7290c0002445789c1c6">&#9670;&nbsp;</a></span>GetInfoMessageCount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetInfoMessageCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Count of messages received at the obInfo level </dd></dl>

</div>
</div>
<a id="a48866a67a47b80b0d0c6adf5267e72eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48866a67a47b80b0d0c6adf5267e72eb">&#9670;&nbsp;</a></span>GetAuditMessageCount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetAuditMessageCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Count of messages received at the obAuditMsg level </dd></dl>

</div>
</div>
<a id="a673ec0e1a1c14ca7117e07a90efcd8ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a673ec0e1a1c14ca7117e07a90efcd8ee">&#9670;&nbsp;</a></span>GetDebugMessageCount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetDebugMessageCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Count of messages received at the obDebug level </dd></dl>

</div>
</div>
<a id="ab58fc0b88f40b7dca684dfad13d587b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab58fc0b88f40b7dca684dfad13d587b7">&#9670;&nbsp;</a></span>GetMessageSummary()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string GetMessageSummary </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Summary of messages received at all levels </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a5812cd4eb01367908022f9ef86e49ec6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5812cd4eb01367908022f9ef86e49ec6">&#9670;&nbsp;</a></span>_messageCount</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int _messageCount[5]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Count of messages at each message level. </p>

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#ab58fc0b88f40b7dca684dfad13d587b7">OBMessageHandler::GetMessageSummary()</a>, <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a5cce70bc2fc932b31d3f31bda5900414">OBMessageHandler::OBMessageHandler()</a>, and <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a2482566201934523c4631d85b1214a70">OBMessageHandler::ThrowError()</a>.</p>

</div>
</div>
<a id="a08ea2212aebb85ea22895ec49bd81f85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08ea2212aebb85ea22895ec49bd81f85">&#9670;&nbsp;</a></span>_messageList</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::deque&lt;<a class="el" href="classOpenBabel_1_1OBError.shtml">OBError</a>&gt; _messageList</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Log of messages for later retrieval via <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#aaacf3302e7348bab13284a1336040240">GetMessagesOfLevel()</a> </p>

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#aaacf3302e7348bab13284a1336040240">OBMessageHandler::GetMessagesOfLevel()</a>, and <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a2482566201934523c4631d85b1214a70">OBMessageHandler::ThrowError()</a>.</p>

</div>
</div>
<a id="abddad1d062682a33800f8d048a1e35f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abddad1d062682a33800f8d048a1e35f6">&#9670;&nbsp;</a></span>_outputLevel</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#acf195409ac7024002db5c178f20862d9">obMessageLevel</a> _outputLevel</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Filtering level for messages and logging (messages of lower priority will be ignored. </p>

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a2482566201934523c4631d85b1214a70">OBMessageHandler::ThrowError()</a>.</p>

</div>
</div>
<a id="adff5b7b50cde9f6620dc08128df860c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adff5b7b50cde9f6620dc08128df860c4">&#9670;&nbsp;</a></span>_outputStream</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream* _outputStream</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a2482566201934523c4631d85b1214a70">OBMessageHandler::ThrowError()</a>.</p>

</div>
</div>
<a id="a3c4c6fad78b988cdc4fc9b7ade5e788c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c4c6fad78b988cdc4fc9b7ade5e788c">&#9670;&nbsp;</a></span>_logging</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool _logging</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Whether messages will be logged into _messageList. </p>

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a2482566201934523c4631d85b1214a70">OBMessageHandler::ThrowError()</a>.</p>

</div>
</div>
<a id="a7a0d2d55c1de9a5afc3bf71abedfdddd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a0d2d55c1de9a5afc3bf71abedfdddd">&#9670;&nbsp;</a></span>_maxEntries</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int _maxEntries</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The maximum size of _messageList log. </p>

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a2482566201934523c4631d85b1214a70">OBMessageHandler::ThrowError()</a>.</p>

</div>
</div>
<a id="a3e0837dfabcca64b1bdf2392e70b3228"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e0837dfabcca64b1bdf2392e70b3228">&#9670;&nbsp;</a></span>_inWrapStreamBuf</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::streambuf* _inWrapStreamBuf</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The default stream buffer for the output stream (saved if wrapping is ued) </p>

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a5cce70bc2fc932b31d3f31bda5900414">OBMessageHandler::OBMessageHandler()</a>, <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#ab7822d9b9f26fac754fa79efab0dfcaf">OBMessageHandler::StartErrorWrap()</a>, and <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#ac846e5a1ffd589891812b87e129b1a67">OBMessageHandler::StopErrorWrap()</a>.</p>

</div>
</div>
<a id="a9285cdb5ae08c9a33cd6d6998cd69a26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9285cdb5ae08c9a33cd6d6998cd69a26">&#9670;&nbsp;</a></span>_filterStreamBuf</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::streambuf* _filterStreamBuf</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The filtered <a class="el" href="classOpenBabel_1_1obLogBuf.shtml" title="A minimal streambuf derivative to wrap calls to cerr into calls to OBMessageHandler as needed...">obLogBuf</a> stream buffer to wrap error messages. </p>

<p class="reference">Referenced by <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a5cce70bc2fc932b31d3f31bda5900414">OBMessageHandler::OBMessageHandler()</a>, <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#ab7822d9b9f26fac754fa79efab0dfcaf">OBMessageHandler::StartErrorWrap()</a>, and <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml#a4cc3bdf8e84224428a5bde1179b8cc60">OBMessageHandler::~OBMessageHandler()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="oberror_8h_source.shtml">oberror.h</a></li>
<li><a class="el" href="oberror_8cpp.shtml">oberror.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Oct 15 2019 21:28:05 for Open Babel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
