<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open Babel: data.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open Babel
   &#160;<span id="projectnumber">3.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">data.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="data_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">data.h - Global data and resource file parsers.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Some portions Copyright (C) 2001-2006 by Geoffrey R. Hutchison</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef OB_DATA_H</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#define OB_DATA_H</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;cstring&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;cstring&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keyword">class </span>OBAtom;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keyword">class </span>OBMol;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml">   48</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a40756214f69d1c40ad70b64ae9fdc08d">   51</a></span>&#160;      <span class="keywordtype">bool</span>         <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a40756214f69d1c40ad70b64ae9fdc08d">_init</a>;               </div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a45a08560f2b4885250c586c550f2d7af">   52</a></span>&#160;      <span class="keyword">const</span> <span class="keywordtype">char</span>  *<a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a45a08560f2b4885250c586c550f2d7af">_dataptr</a>;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a895aefe990ffe9af66bb5cd4e37d3579">   53</a></span>&#160;      std::string  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a895aefe990ffe9af66bb5cd4e37d3579">_filename</a>;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2c2f62a9907553e5feb1ecef65c6c386">   54</a></span>&#160;      std::string  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2c2f62a9907553e5feb1ecef65c6c386">_dir</a>;                </div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5d93159b6eee0cb302451621106f61c7">   55</a></span>&#160;      std::string  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5d93159b6eee0cb302451621106f61c7">_subdir</a>;     </div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a87d06c3aed77fb9e118b337bed557928">   56</a></span>&#160;      std::string  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a87d06c3aed77fb9e118b337bed557928">_envvar</a>;     </div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a36b81861b36e935bf0a39dee7745c3ed">   60</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a36b81861b36e935bf0a39dee7745c3ed">OBGlobalDataBase</a>(): _init(false), _dataptr(NULL) { }</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a8556118660d5608e1c18a8e67a93df4c">   62</a></span>&#160;      <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a8556118660d5608e1c18a8e67a93df4c">~OBGlobalDataBase</a>()                  {}</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <span class="keywordtype">void</span>  Init();</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5ebfe2dd02a8ba2b7e84f1f6d55c74cd">   66</a></span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5ebfe2dd02a8ba2b7e84f1f6d55c74cd">GetSize</a>()                 { <span class="keywordflow">return</span> 0;}</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a49002f92ad6a1c71d7f9148271770b7a">   68</a></span>&#160;      <span class="keywordtype">void</span>  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a49002f92ad6a1c71d7f9148271770b7a">SetReadDirectory</a>(<span class="keywordtype">char</span> *dir)            { _dir = dir;    }</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2bd0630d27e20f38de4c753ca68e2282">   70</a></span>&#160;      <span class="keywordtype">void</span>  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2bd0630d27e20f38de4c753ca68e2282">SetEnvironmentVariable</a>(<span class="keywordtype">char</span> *var)      { _envvar = var; }</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a9a84dbfb089769dec48cd6f6eca1057b">   72</a></span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a9a84dbfb089769dec48cd6f6eca1057b">ParseLine</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>*)          {}</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    };</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml">   83</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml">OBAtomHOF</a></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keyword">private</span>:</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      std::string _element,_method,_desc,_unit;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">double</span> _T,_value;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">int</span> _charge;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">int</span> _multiplicity;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a0c4efd8937d3cd93f360c715d93a9b04">  103</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a0c4efd8937d3cd93f360c715d93a9b04">OBAtomHOF</a>(std::string element,<span class="keywordtype">int</span> charge,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;              std::string method,std::string desc,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;              <span class="keywordtype">double</span> <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a>,<span class="keywordtype">double</span> value,<span class="keywordtype">int</span> multiplicity,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;              std::string unit)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        _element      = element;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        _charge       = charge;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        _method       = method;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        _desc         = desc;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        _T            = <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        _value        = value;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        _multiplicity = multiplicity;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        _unit         = unit;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#ae5673d7815404bcb484cb2f1dfce0d91">  119</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#ae5673d7815404bcb484cb2f1dfce0d91">~OBAtomHOF</a>() {}</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a7688a3a7b9a13482694ba86fc48a20eb">  121</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a7688a3a7b9a13482694ba86fc48a20eb">Element</a>() { <span class="keywordflow">return</span> _element; }</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a0f74195bcc89c070de5d82995da7cd15">  123</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a0f74195bcc89c070de5d82995da7cd15">Charge</a>()          { <span class="keywordflow">return</span> _charge; }</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#af7b80e792fbac7a10303596489271db7">  125</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#af7b80e792fbac7a10303596489271db7">Method</a>()  { <span class="keywordflow">return</span> _method; }</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a35728b87e146323874948dac9fbcadbd">  127</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a35728b87e146323874948dac9fbcadbd">Desc</a>()    { <span class="keywordflow">return</span> _desc; }</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#ac9ca5ae9a3c0fb10701a535dab8beefc">  129</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#ac9ca5ae9a3c0fb10701a535dab8beefc">T</a>()            { <span class="keywordflow">return</span> _T; }</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a2d2806afc5e8067368c3eea0ca8eeecf">  131</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a2d2806afc5e8067368c3eea0ca8eeecf">Value</a>()        { <span class="keywordflow">return</span> _value; }</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a684f706b4c9e1bac0a473badab0e65f0">  133</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a684f706b4c9e1bac0a473badab0e65f0">Multiplicity</a>()    { <span class="keywordflow">return</span> _multiplicity; }</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a368fe56caaa9f637c13ea5ef32c21f08">  135</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a368fe56caaa9f637c13ea5ef32c21f08">Unit</a>()    { <span class="keywordflow">return</span> _unit; }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  };</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml">  149</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml">OBAtomicHeatOfFormationTable</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    std::vector&lt;OBAtomHOF&gt; _atomhof;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml">OBAtomicHeatOfFormationTable</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#a309cb4652c37cc75a9a0bf88067c9593">  157</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#a309cb4652c37cc75a9a0bf88067c9593">~OBAtomicHeatOfFormationTable</a>() {}</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#aab7c531e5ffc5174e57a85e853931534">  160</a></span>&#160;      <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>() { <span class="keywordflow">return</span> _atomhof.size(); }</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordtype">void</span>      ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      <span class="keywordtype">int</span>       GetHeatOfFormation(std::string elem, </div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                               <span class="keywordtype">int</span> charge,</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                               std::string method,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                               <span class="keywordtype">double</span> <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a>, <span class="keywordtype">double</span> *dhof0,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                               <span class="keywordtype">double</span> *dhofT,<span class="keywordtype">double</span> *S0T);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    };</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <span class="comment">// class introduction in data.cpp</span></div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTypeTable.shtml">  186</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBTypeTable.shtml">OBTypeTable</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    {</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordtype">int</span>             _linecount;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>    _ncols,_nrows;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      <span class="keywordtype">int</span>             _from,_to;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      std::vector&lt;std::string&gt; _colnames;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      std::vector&lt;std::vector&lt;std::string&gt; &gt; _table;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      <a class="code" href="classOpenBabel_1_1OBTypeTable.shtml">OBTypeTable</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTypeTable.shtml#a72cd4a33759982430a7db60c3d392fee">  197</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBTypeTable.shtml#a72cd4a33759982430a7db60c3d392fee">~OBTypeTable</a>() {}</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTypeTable.shtml#aab7c531e5ffc5174e57a85e853931534">  202</a></span>&#160;      <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBTypeTable.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>() { <span class="keywordflow">return</span> _table.size(); }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      <span class="keywordtype">bool</span> SetFromType(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      <span class="keywordtype">bool</span> SetToType(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      <span class="keywordtype">bool</span> Translate(<span class="keywordtype">char</span> *to, <span class="keyword">const</span> <span class="keywordtype">char</span> *from); <span class="comment">// to, from</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment"></span>      <span class="keywordtype">bool</span> Translate(std::string &amp;to, <span class="keyword">const</span> std::string &amp;from); <span class="comment">// to, from</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment"></span>      std::string Translate(<span class="keyword">const</span> std::string &amp;from);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      std::string GetFromType();</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      std::string GetToType();</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    };</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#ab8d4d5690031703bcccb95ddbe7ebf0a">  225</a></span>&#160;  EXTERN  <a class="code" href="classOpenBabel_1_1OBTypeTable.shtml">OBTypeTable</a>      <a class="code" href="namespaceOpenBabel.shtml#ab8d4d5690031703bcccb95ddbe7ebf0a">ttab</a>;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBResidueData.shtml">  232</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBResidueData.shtml">OBResidueData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      <span class="keywordtype">int</span>                                               _resnum;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      std::vector&lt;std::string&gt;                          _resname;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      std::vector&lt;std::vector&lt;std::string&gt; &gt;            _resatoms;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      std::vector&lt;std::vector&lt;std::pair&lt;std::string,int&gt; &gt; &gt; _resbonds;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <span class="comment">//variables used only temporarily for parsing resdata.txt</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      std::vector&lt;std::string&gt;                          _vatmtmp;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      std::vector&lt;std::pair&lt;std::string,int&gt; &gt;          _vtmp;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;      <a class="code" href="classOpenBabel_1_1OBResidueData.shtml">OBResidueData</a>();</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBResidueData.shtml#aab7c531e5ffc5174e57a85e853931534">  248</a></span>&#160;      <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBResidueData.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>() { <span class="keywordflow">return</span> _resname.size(); }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      <span class="keywordtype">bool</span> SetResName(<span class="keyword">const</span> std::string &amp;);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      <span class="keywordtype">int</span>  LookupBO(<span class="keyword">const</span> std::string &amp;);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      <span class="keywordtype">int</span>  LookupBO(<span class="keyword">const</span> std::string &amp;, <span class="keyword">const</span> std::string&amp;);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      <span class="keywordtype">bool</span> LookupType(<span class="keyword">const</span> std::string &amp;,std::string&amp;,<span class="keywordtype">int</span>&amp;);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      <span class="keywordtype">bool</span> AssignBonds(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    };</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a30154f62f3bd1a1b8613a080444e69d7">  270</a></span>&#160;  EXTERN  <a class="code" href="classOpenBabel_1_1OBResidueData.shtml">OBResidueData</a>    <a class="code" href="namespaceOpenBabel.shtml#a30154f62f3bd1a1b8613a080444e69d7">resdat</a>;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;} <span class="comment">// end namespace OpenBabel</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  </div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="preprocessor">#endif //DATA_H</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OBAtomicHeatOfFormationTable_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml">OpenBabel::OBAtomicHeatOfFormationTable</a></div><div class="ttdoc">Atomic Heat of Formation Table. </div><div class="ttdef"><b>Definition:</b> data.h:149</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBResidueIndex_shtml_a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce"><div class="ttname"><a href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">OpenBabel::OBResidueIndex::T</a></div><div class="ttdef"><b>Definition:</b> residue.h:336</div></div>
<div class="ttc" id="classOpenBabel_1_1OBResidueData_shtml_aab7c531e5ffc5174e57a85e853931534"><div class="ttname"><a href="classOpenBabel_1_1OBResidueData.shtml#aab7c531e5ffc5174e57a85e853931534">OpenBabel::OBResidueData::GetSize</a></div><div class="ttdeci">size_t GetSize()</div><div class="ttdef"><b>Definition:</b> data.h:248</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a2bd0630d27e20f38de4c753ca68e2282"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2bd0630d27e20f38de4c753ca68e2282">OpenBabel::OBGlobalDataBase::SetEnvironmentVariable</a></div><div class="ttdeci">void SetEnvironmentVariable(char *var)</div><div class="ttdoc">Set the environment variable to use before calling Init() </div><div class="ttdef"><b>Definition:</b> data.h:70</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomicHeatOfFormationTable_shtml_a309cb4652c37cc75a9a0bf88067c9593"><div class="ttname"><a href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#a309cb4652c37cc75a9a0bf88067c9593">OpenBabel::OBAtomicHeatOfFormationTable::~OBAtomicHeatOfFormationTable</a></div><div class="ttdeci">~OBAtomicHeatOfFormationTable()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> data.h:157</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_af7b80e792fbac7a10303596489271db7"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#af7b80e792fbac7a10303596489271db7">OpenBabel::OBAtomHOF::Method</a></div><div class="ttdeci">std::string Method()</div><div class="ttdoc">Return the method used for the measurement/calculation. </div><div class="ttdef"><b>Definition:</b> data.h:125</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMol_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a></div><div class="ttdoc">Molecule Class. </div><div class="ttdef"><b>Definition:</b> mol.h:118</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a0f74195bcc89c070de5d82995da7cd15"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a0f74195bcc89c070de5d82995da7cd15">OpenBabel::OBAtomHOF::Charge</a></div><div class="ttdeci">int Charge()</div><div class="ttdoc">Return the formal charge. </div><div class="ttdef"><b>Definition:</b> data.h:123</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_ae5673d7815404bcb484cb2f1dfce0d91"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#ae5673d7815404bcb484cb2f1dfce0d91">OpenBabel::OBAtomHOF::~OBAtomHOF</a></div><div class="ttdeci">~OBAtomHOF()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> data.h:119</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a36b81861b36e935bf0a39dee7745c3ed"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a36b81861b36e935bf0a39dee7745c3ed">OpenBabel::OBGlobalDataBase::OBGlobalDataBase</a></div><div class="ttdeci">OBGlobalDataBase()</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> data.h:60</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a9a84dbfb089769dec48cd6f6eca1057b"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a9a84dbfb089769dec48cd6f6eca1057b">OpenBabel::OBGlobalDataBase::ParseLine</a></div><div class="ttdeci">virtual void ParseLine(const char *)</div><div class="ttdoc">Specified by particular table classes (parses an individual data line) </div><div class="ttdef"><b>Definition:</b> data.h:72</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a49002f92ad6a1c71d7f9148271770b7a"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a49002f92ad6a1c71d7f9148271770b7a">OpenBabel::OBGlobalDataBase::SetReadDirectory</a></div><div class="ttdeci">void SetReadDirectory(char *dir)</div><div class="ttdoc">Set the directory before calling Init() </div><div class="ttdef"><b>Definition:</b> data.h:68</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a5d93159b6eee0cb302451621106f61c7"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5d93159b6eee0cb302451621106f61c7">OpenBabel::OBGlobalDataBase::_subdir</a></div><div class="ttdeci">std::string _subdir</div><div class="ttdoc">Subdirectory (if using environment variable) </div><div class="ttdef"><b>Definition:</b> data.h:55</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a895aefe990ffe9af66bb5cd4e37d3579"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a895aefe990ffe9af66bb5cd4e37d3579">OpenBabel::OBGlobalDataBase::_filename</a></div><div class="ttdeci">std::string _filename</div><div class="ttdoc">File to search for. </div><div class="ttdef"><b>Definition:</b> data.h:53</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTypeTable_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBTypeTable.shtml">OpenBabel::OBTypeTable</a></div><div class="ttdoc">Atom Type Translation Table. </div><div class="ttdef"><b>Definition:</b> data.h:186</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ab8d4d5690031703bcccb95ddbe7ebf0a"><div class="ttname"><a href="namespaceOpenBabel.shtml#ab8d4d5690031703bcccb95ddbe7ebf0a">OpenBabel::ttab</a></div><div class="ttdeci">OBTypeTable ttab</div><div class="ttdef"><b>Definition:</b> data.h:225</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a368fe56caaa9f637c13ea5ef32c21f08"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a368fe56caaa9f637c13ea5ef32c21f08">OpenBabel::OBAtomHOF::Unit</a></div><div class="ttdeci">std::string Unit()</div><div class="ttdoc">Return the (energy) unit. </div><div class="ttdef"><b>Definition:</b> data.h:135</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTypeTable_shtml_aab7c531e5ffc5174e57a85e853931534"><div class="ttname"><a href="classOpenBabel_1_1OBTypeTable.shtml#aab7c531e5ffc5174e57a85e853931534">OpenBabel::OBTypeTable::GetSize</a></div><div class="ttdeci">size_t GetSize()</div><div class="ttdef"><b>Definition:</b> data.h:202</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a8556118660d5608e1c18a8e67a93df4c"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a8556118660d5608e1c18a8e67a93df4c">OpenBabel::OBGlobalDataBase::~OBGlobalDataBase</a></div><div class="ttdeci">virtual ~OBGlobalDataBase()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> data.h:62</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTypeTable_shtml_a72cd4a33759982430a7db60c3d392fee"><div class="ttname"><a href="classOpenBabel_1_1OBTypeTable.shtml#a72cd4a33759982430a7db60c3d392fee">OpenBabel::OBTypeTable::~OBTypeTable</a></div><div class="ttdeci">~OBTypeTable()</div><div class="ttdef"><b>Definition:</b> data.h:197</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a40756214f69d1c40ad70b64ae9fdc08d"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a40756214f69d1c40ad70b64ae9fdc08d">OpenBabel::OBGlobalDataBase::_init</a></div><div class="ttdeci">bool _init</div><div class="ttdoc">Whether the data been read already. </div><div class="ttdef"><b>Definition:</b> data.h:51</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomicHeatOfFormationTable_shtml_aab7c531e5ffc5174e57a85e853931534"><div class="ttname"><a href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#aab7c531e5ffc5174e57a85e853931534">OpenBabel::OBAtomicHeatOfFormationTable::GetSize</a></div><div class="ttdeci">size_t GetSize()</div><div class="ttdef"><b>Definition:</b> data.h:160</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a45a08560f2b4885250c586c550f2d7af"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a45a08560f2b4885250c586c550f2d7af">OpenBabel::OBGlobalDataBase::_dataptr</a></div><div class="ttdeci">const char * _dataptr</div><div class="ttdoc">Default data table if file is unreadable. </div><div class="ttdef"><b>Definition:</b> data.h:52</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a35728b87e146323874948dac9fbcadbd"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a35728b87e146323874948dac9fbcadbd">OpenBabel::OBAtomHOF::Desc</a></div><div class="ttdeci">std::string Desc()</div><div class="ttdoc">Return specification of the measurement/calculation type. </div><div class="ttdef"><b>Definition:</b> data.h:127</div></div>
<div class="ttc" id="classOpenBabel_1_1OBResidueData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBResidueData.shtml">OpenBabel::OBResidueData</a></div><div class="ttdoc">Table of common biomolecule residues (for PDB or other files). </div><div class="ttdef"><b>Definition:</b> data.h:232</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a2c2f62a9907553e5feb1ecef65c6c386"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2c2f62a9907553e5feb1ecef65c6c386">OpenBabel::OBGlobalDataBase::_dir</a></div><div class="ttdeci">std::string _dir</div><div class="ttdoc">Data directory for file if _envvar fails. </div><div class="ttdef"><b>Definition:</b> data.h:54</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a87d06c3aed77fb9e118b337bed557928"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a87d06c3aed77fb9e118b337bed557928">OpenBabel::OBGlobalDataBase::_envvar</a></div><div class="ttdeci">std::string _envvar</div><div class="ttdoc">Environment variable to check first. </div><div class="ttdef"><b>Definition:</b> data.h:56</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_ac9ca5ae9a3c0fb10701a535dab8beefc"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#ac9ca5ae9a3c0fb10701a535dab8beefc">OpenBabel::OBAtomHOF::T</a></div><div class="ttdeci">double T()</div><div class="ttdoc">Return the temperature. </div><div class="ttdef"><b>Definition:</b> data.h:129</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a5ebfe2dd02a8ba2b7e84f1f6d55c74cd"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5ebfe2dd02a8ba2b7e84f1f6d55c74cd">OpenBabel::OBGlobalDataBase::GetSize</a></div><div class="ttdeci">virtual size_t GetSize()</div><div class="ttdef"><b>Definition:</b> data.h:66</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml">OpenBabel::OBAtomHOF</a></div><div class="ttdoc">helper class for OBAtomicHeatOfFormationTable </div><div class="ttdef"><b>Definition:</b> data.h:83</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a684f706b4c9e1bac0a473badab0e65f0"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a684f706b4c9e1bac0a473badab0e65f0">OpenBabel::OBAtomHOF::Multiplicity</a></div><div class="ttdeci">int Multiplicity()</div><div class="ttdoc">Return the multiplicity. </div><div class="ttdef"><b>Definition:</b> data.h:133</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a30154f62f3bd1a1b8613a080444e69d7"><div class="ttname"><a href="namespaceOpenBabel.shtml#a30154f62f3bd1a1b8613a080444e69d7">OpenBabel::resdat</a></div><div class="ttdeci">OBResidueData resdat</div><div class="ttdoc">Global OBResidueData biomolecule residue database. </div><div class="ttdef"><b>Definition:</b> data.h:270</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a2d2806afc5e8067368c3eea0ca8eeecf"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a2d2806afc5e8067368c3eea0ca8eeecf">OpenBabel::OBAtomHOF::Value</a></div><div class="ttdeci">double Value()</div><div class="ttdoc">Return the (energy) value. </div><div class="ttdef"><b>Definition:</b> data.h:131</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a0c4efd8937d3cd93f360c715d93a9b04"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a0c4efd8937d3cd93f360c715d93a9b04">OpenBabel::OBAtomHOF::OBAtomHOF</a></div><div class="ttdeci">OBAtomHOF(std::string element, int charge, std::string method, std::string desc, double T, double value, int multiplicity, std::string unit)</div><div class="ttdoc">Initialize Heat of Formation for atom. </div><div class="ttdef"><b>Definition:</b> data.h:103</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml">OpenBabel::OBGlobalDataBase</a></div><div class="ttdoc">Base data table class, handles reading data files. </div><div class="ttdef"><b>Definition:</b> data.h:48</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a7688a3a7b9a13482694ba86fc48a20eb"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a7688a3a7b9a13482694ba86fc48a20eb">OpenBabel::OBAtomHOF::Element</a></div><div class="ttdeci">std::string Element()</div><div class="ttdoc">Return the chemical element. </div><div class="ttdef"><b>Definition:</b> data.h:121</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Oct 15 2019 21:28:03 for Open Babel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
