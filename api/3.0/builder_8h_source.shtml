<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open Babel: builder.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open Babel
   &#160;<span id="projectnumber">3.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">builder.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="builder_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">builder.h - OBBuilder class.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 2007-2008 by Tim Vandermeersch</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">                           &lt;tim.vandermeersch@gmail.com&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef OB_BUILDER_H</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#define OB_BUILDER_H</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;list&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="stereo_8h.shtml">openbabel/stereo/stereo.h</a>&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keyword">class </span>OBMol;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keyword">class </span>OBAtom;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keyword">class </span>OBSmartsPattern;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">class </span>vector3;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">class </span>OBBitVec;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBuilder.shtml">   42</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBBuilder.shtml">OBBuilder</a> {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBuilder.shtml#a7bb41c313c47405a2040198e671caad5">   45</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBBuilder.shtml#a7bb41c313c47405a2040198e671caad5">OBBuilder</a>(): _keeprings(false) {}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">bool</span> Build(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">bool</span> stereoWarnings = <span class="keyword">true</span>);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBuilder.shtml#acf9a71f4ec162379069afdcae3088beb">   68</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBuilder.shtml#acf9a71f4ec162379069afdcae3088beb">SetKeepRings</a>() { _keeprings = <span class="keyword">true</span>; }</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBuilder.shtml#aa981684e16a4cc7f7acf0cb9df1ce55b">   69</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBuilder.shtml#aa981684e16a4cc7f7acf0cb9df1ce55b">UnsetKeepRings</a>() { _keeprings = <span class="keyword">false</span>; }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      <span class="keywordtype">void</span> LoadFragments();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      std::vector&lt;vector3&gt; GetFragmentCoord(std::string smiles);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetNewBondVector(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetNewBondVector(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, <span class="keywordtype">double</span> length);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">bool</span> Connect(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;newpos, <span class="keywordtype">int</span> bondOrder = 1);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">bool</span> Connect(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> bondOrder = 1);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">bool</span> Swap(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> c, <span class="keywordtype">int</span> d);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="comment">//bool Insert(OBMol &amp;mol, int a, int b, std::string smiles, int c, int d);</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment"></span>      <span class="keyword">static</span> <span class="keywordtype">bool</span> CorrectStereoBonds(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">bool</span> CorrectStereoAtoms(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">bool</span> warn = <span class="keyword">true</span>);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">bool</span> IsSpiroAtom(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> atomId, <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> GetFragment(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">void</span> AddNbrs(<a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;fragment, <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="comment">//static std::map&lt;std::string, double&gt; _torsion;</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keyword">static</span> std::vector&lt;std::string&gt; _rigid_fragments;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keyword">static</span> std::vector&lt;std::pair&lt;OBSmartsPattern*, std::vector&lt;vector3&gt; &gt; &gt; _ring_fragments;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keyword">static</span> std::map&lt;std::string, int&gt; _rigid_fragments_index;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keyword">static</span> std::map&lt;std::string, std::vector&lt;vector3&gt; &gt; _rigid_fragments_cache;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="comment">//  supports the case where the fragments overlap at a spiro atom only.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">void</span> ConnectFrags(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;workmol, std::vector&lt;int&gt; match, std::vector&lt;vector3&gt; coords,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                               std::vector&lt;int&gt; pivot);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">void</span> FlipSpiro(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">int</span> idx);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">bool</span> FixRingStereo(std::vector&lt;std::pair&lt;OBStereo::Ref, bool&gt; &gt; atomIds,</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <a class="code" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> &amp;unfixedcenters);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">void</span> AddRingNbrs(<a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;fragment, <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">bool</span> SwapWithVector(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> c, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;newlocation);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="keywordtype">bool</span> _keeprings;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  }; <span class="comment">// class OBBuilder</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;}<span class="comment">// namespace OpenBabel</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="preprocessor">#endif   // OB_BUILDER_H</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OBBuilder_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBuilder.shtml">OpenBabel::OBBuilder</a></div><div class="ttdoc">Class to build 3D structures. </div><div class="ttdef"><b>Definition:</b> builder.h:42</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBuilder_shtml_aa981684e16a4cc7f7acf0cb9df1ce55b"><div class="ttname"><a href="classOpenBabel_1_1OBBuilder.shtml#aa981684e16a4cc7f7acf0cb9df1ce55b">OpenBabel::OBBuilder::UnsetKeepRings</a></div><div class="ttdeci">void UnsetKeepRings()</div><div class="ttdef"><b>Definition:</b> builder.h:69</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBuilder_shtml_acf9a71f4ec162379069afdcae3088beb"><div class="ttname"><a href="classOpenBabel_1_1OBBuilder.shtml#acf9a71f4ec162379069afdcae3088beb">OpenBabel::OBBuilder::SetKeepRings</a></div><div class="ttdeci">void SetKeepRings()</div><div class="ttdef"><b>Definition:</b> builder.h:68</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMol_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a></div><div class="ttdoc">Molecule Class. </div><div class="ttdef"><b>Definition:</b> mol.h:118</div></div>
<div class="ttc" id="stereo_8h_shtml"><div class="ttname"><a href="stereo_8h.shtml">stereo.h</a></div><div class="ttdoc">Process molecular stereochemistry information. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBBitVec_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBitVec.shtml">OpenBabel::OBBitVec</a></div><div class="ttdoc">A speed-optimized vector of bits. </div><div class="ttdef"><b>Definition:</b> bitvec.h:57</div></div>
<div class="ttc" id="classOpenBabel_1_1vector3_shtml"><div class="ttname"><a href="classOpenBabel_1_1vector3.shtml">OpenBabel::vector3</a></div><div class="ttdoc">Represents a vector in 3-dimensional real space. </div><div class="ttdef"><b>Definition:</b> vector3.h:44</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBuilder_shtml_a7bb41c313c47405a2040198e671caad5"><div class="ttname"><a href="classOpenBabel_1_1OBBuilder.shtml#a7bb41c313c47405a2040198e671caad5">OpenBabel::OBBuilder::OBBuilder</a></div><div class="ttdeci">OBBuilder()</div><div class="ttdef"><b>Definition:</b> builder.h:45</div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_aa6d4491769cb9af32f3ea22e9f9a66c4"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OpenBabel::OBStereo::Refs</a></div><div class="ttdeci">std::vector&lt; Ref &gt; Refs</div><div class="ttdef"><b>Definition:</b> stereo.h:156</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml">OpenBabel::OBAtom</a></div><div class="ttdoc">Atom class. </div><div class="ttdef"><b>Definition:</b> atom.h:71</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Oct 15 2019 21:28:03 for Open Babel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
