<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: obmolecformat.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.2 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li><a href="classes.shtml"><span>Classes</span></a></li>
    <li class="current"><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="files.shtml"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.shtml"><span>File&nbsp;Members</span></a></li>
  </ul>
</div>
<h1>obmolecformat.h</h1><a href="obmolecformat_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">obmolecformat.h - Subclass of OBFormat for conversion of OBMol.</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 2005 Chris Morley</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00007"></a>00007 <span class="comment">For more information, see &lt;http://openbabel.sourceforge.net/&gt;</span>
<a name="l00008"></a>00008 <span class="comment"></span>
<a name="l00009"></a>00009 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00010"></a>00010 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00011"></a>00011 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00012"></a>00012 <span class="comment"></span>
<a name="l00013"></a>00013 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00014"></a>00014 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00015"></a>00015 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00016"></a>00016 <span class="comment">GNU General Public License for more details.</span>
<a name="l00017"></a>00017 <span class="comment">***********************************************************************/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#ifndef OB_MOLECULEFORMAT_H</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span><span class="preprocessor">#define OB_MOLECULEFORMAT_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span>
<a name="l00022"></a>00022 <span class="preprocessor">#ifdef _WIN32</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">  #include &lt;hash_map&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#endif</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml" title="Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header...">openbabel/mol.h</a>&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;<a class="code" href="obconversion_8h.shtml" title="Handle file conversions. Declaration of OBFormat, OBConversion.">openbabel/obconversion.h</a>&gt;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="keyword">namespace </span>OpenBabel {
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="comment">// This macro is used in DLL builds. If it has not</span>
<a name="l00032"></a>00032 <span class="comment">// been set in babelconfig.h, define it as nothing.</span>
<a name="l00033"></a>00033 <span class="preprocessor">#ifndef OBCOMMON</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span><span class="preprocessor">  #define OBCOMMON</span>
<a name="l00035"></a>00035 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00036"></a>00036 <span class="preprocessor"></span>
<a name="l00050"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml">00050</a> <span class="keyword">class </span>OBCOMMON OBMoleculeFormat : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBFormat.shtml" title="Base class for file formats.">OBFormat</a>
<a name="l00051"></a>00051 {
<a name="l00052"></a>00052 <span class="keyword">private</span>:
<a name="l00053"></a>00053   <span class="keyword">static</span> std::map&lt;std::string, OBMol*&gt; IMols;
<a name="l00054"></a>00054   <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>* _jmol; 
<a name="l00055"></a>00055   <span class="keyword">static</span> std::vector&lt;OBMol&gt; MolArray; 
<a name="l00056"></a>00056   <span class="keyword">static</span> <span class="keywordtype">bool</span> StoredMolsReady; 
<a name="l00057"></a>00057 
<a name="l00058"></a>00058 <span class="keyword">public</span>:
<a name="l00059"></a>00059 
<a name="l00060"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#73a3969d77031276422cbeb5901ea05a">00060</a>   OBMoleculeFormat()
<a name="l00061"></a>00061   {
<a name="l00062"></a>00062     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"b"</span>, <span class="keyword">this</span>, 0, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116291d3d898fa3e1258eef693d56d600d7">OBConversion::INOPTIONS</a>);
<a name="l00063"></a>00063     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"s"</span>, <span class="keyword">this</span>, 0, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116291d3d898fa3e1258eef693d56d600d7">OBConversion::INOPTIONS</a>);
<a name="l00064"></a>00064     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"title"</span>, <span class="keyword">this</span>, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00065"></a>00065     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"addtotitle"</span>, <span class="keyword">this</span>, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00066"></a>00066     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"property"</span>, <span class="keyword">this</span>, 2, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00067"></a>00067     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"C"</span>,        <span class="keyword">this</span>, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00068"></a>00068     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"j"</span>,        <span class="keyword">this</span>, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00069"></a>00069     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"join"</span>,     <span class="keyword">this</span>, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00070"></a>00070     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"separate"</span>, <span class="keyword">this</span>, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00071"></a>00071 
<a name="l00072"></a>00072     <span class="comment">//The follow are OBMol options, which should not be in OBConversion.</span>
<a name="l00073"></a>00073     <span class="comment">//But here isn't entirely appropriate either, since one could have</span>
<a name="l00074"></a>00074     <span class="comment">//OBMol formats loaded but which don't derived from this class.</span>
<a name="l00075"></a>00075     <span class="comment">//However, this possibility is remote.</span>
<a name="l00076"></a>00076     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"s"</span>, NULL, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00077"></a>00077     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"v"</span>, NULL, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00078"></a>00078     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"h"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00079"></a>00079     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"d"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00080"></a>00080     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"b"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00081"></a>00081     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"c"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00082"></a>00082     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"p"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>); 
<a name="l00083"></a>00083     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"t"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00084"></a>00084     <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f" title="For example -h takes 0 parameters; -f takes 1. Call in a format constructor.">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"k"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00085"></a>00085   };
<a name="l00086"></a>00086 
<a name="l00088"></a>00088   <span class="keyword">static</span> <span class="keywordtype">bool</span> ReadChemObjectImpl(<a class="code" href="classOpenBabel_1_1OBConversion.shtml" title="Class to convert from one format to another.">OBConversion</a>* pConv, <a class="code" href="classOpenBabel_1_1OBFormat.shtml" title="Base class for file formats.">OBFormat</a>*);
<a name="l00090"></a>00090   <span class="keyword">static</span> <span class="keywordtype">bool</span> WriteChemObjectImpl(<a class="code" href="classOpenBabel_1_1OBConversion.shtml" title="Class to convert from one format to another.">OBConversion</a>* pConv, <a class="code" href="classOpenBabel_1_1OBFormat.shtml" title="Base class for file formats.">OBFormat</a>*);
<a name="l00091"></a>00091 
<a name="l00093"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#9acd362b27e30c19a2c870ca71592723">00093</a>   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> ReadChemObject(<a class="code" href="classOpenBabel_1_1OBConversion.shtml" title="Class to convert from one format to another.">OBConversion</a>* pConv)
<a name="l00094"></a>00094   { <span class="keywordflow">return</span> ReadChemObjectImpl(pConv, <span class="keyword">this</span>);}
<a name="l00095"></a>00095     
<a name="l00097"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#39c2aaf250dde6e85d05ff9357d8b003">00097</a>   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> WriteChemObject(<a class="code" href="classOpenBabel_1_1OBConversion.shtml" title="Class to convert from one format to another.">OBConversion</a>* pConv)
<a name="l00098"></a>00098   { <span class="keywordflow">return</span> WriteChemObjectImpl(pConv, <span class="keyword">this</span>);}
<a name="l00099"></a>00099   
<a name="l00101"></a>00101 
<a name="l00102"></a>00102 
<a name="l00103"></a>00103 
<a name="l00104"></a>00104   <span class="keyword">static</span> <span class="keywordtype">bool</span>   DeferMolOutput(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>* pmol, <a class="code" href="classOpenBabel_1_1OBConversion.shtml" title="Class to convert from one format to another.">OBConversion</a>* pConv, <a class="code" href="classOpenBabel_1_1OBFormat.shtml" title="Base class for file formats.">OBFormat</a>* pF);
<a name="l00106"></a>00106   <span class="keyword">static</span> <span class="keywordtype">bool</span>   OutputDeferredMols(<a class="code" href="classOpenBabel_1_1OBConversion.shtml" title="Class to convert from one format to another.">OBConversion</a>* pConv);
<a name="l00108"></a>00108   <span class="keyword">static</span> <span class="keywordtype">bool</span>   DeleteDeferredMols();
<a name="l00110"></a>00110   <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>* MakeCombinedMolecule(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>* pFirst, <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>* pSecond);
<a name="l00112"></a>00112 
<a name="l00113"></a>00113 <span class="preprocessor">#ifdef _WIN32</span>
<a name="l00114"></a>00114 <span class="preprocessor"></span>  <span class="keyword">typedef</span> stdext::hash_map&lt;std::string, unsigned&gt; NameIndexType;
<a name="l00115"></a>00115 <span class="preprocessor">#else</span>
<a name="l00116"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#da7e9e6b9a0767b268cc282a91ff4185">00116</a> <span class="preprocessor"></span>  <span class="keyword">typedef</span> std::map&lt;std::string, unsigned&gt; <a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#da7e9e6b9a0767b268cc282a91ff4185">NameIndexType</a>;
<a name="l00117"></a>00117 <span class="preprocessor">#endif</span>
<a name="l00118"></a>00118 <span class="preprocessor"></span>  
<a name="l00119"></a>00119   <span class="comment">// documentation in obmolecformat.cpp</span>
<a name="l00120"></a>00120   <span class="keyword">static</span> <span class="keywordtype">bool</span>   ReadNameIndex(<a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#da7e9e6b9a0767b268cc282a91ff4185">NameIndexType</a>&amp; index, <span class="keyword">const</span> std::string&amp; datafilename,
<a name="l00121"></a>00121                   <a class="code" href="classOpenBabel_1_1OBFormat.shtml" title="Base class for file formats.">OBFormat</a>* pInFormat);
<a name="l00122"></a>00122 
<a name="l00124"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#54e576034bd51c66256aa6a98f81d644">00124</a>   <span class="keyword">const</span> std::type_info&amp; GetType()
<a name="l00125"></a>00125   {
<a name="l00126"></a>00126     <span class="keywordflow">return</span> <span class="keyword">typeid</span>(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>*);
<a name="l00127"></a>00127   }
<a name="l00129"></a>00129 
<a name="l00130"></a>00130 };
<a name="l00131"></a>00131 
<a name="l00132"></a>00132 }
<a name="l00133"></a>00133 <span class="preprocessor">#endif //OB_MOLECULEFORMAT_H</span>
<a name="l00134"></a>00134 <span class="preprocessor"></span>
</pre></div></div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/wiki/">Open Babel</a>, version 2.1.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.sourceforge.net/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Tue Apr 24 18:08:06 2007 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.2.
</div>

</body>
</html>
