<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: std Namespace Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.2 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li class="current"><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="namespaces.shtml"><span>Namespace List</span></a></li>
    <li><a href="namespacemembers.shtml"><span>Namespace&nbsp;Members</span></a></li>
  </ul>
</div>
<h1>std Namespace Reference</h1>STL namespace.  
<a href="#_details">More...</a>
<p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>allocator</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>auto_ptr</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>ios_base</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>basic_ios</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>basic_istream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>basic_ostream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>basic_iostream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>basic_ifstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>basic_ofstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>basic_fstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>basic_istringstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>basic_ostringstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>basic_stringstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>ios</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>wios</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>istream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>wistream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>ostream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>wostream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>ifstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>wifstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>ofstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>wofstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>fstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>wfstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>istringstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>wistringstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>ostringstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>wostringstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>stringstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>wstringstream</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>basic_string</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>string</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>wstring</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>complex</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>bitset</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>deque</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>list</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>map</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>multimap</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>set</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>multiset</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>vector</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>queue</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>priority_queue</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>stack</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>valarray</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>exception</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>bad_alloc</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>bad_cast</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>bad_typeid</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>logic_error</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>runtime_error</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>bad_exception</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>domain_error</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>invalid_argument</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>length_error</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>out_of_range</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>range_error</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>overflow_error</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>underflow_error</b></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">STL class. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
STL namespace. </div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/wiki/">Open Babel</a>, version 2.1.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.sourceforge.net/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Tue Apr 24 18:08:19 2007 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.2.
</div>

</body>
</html>
