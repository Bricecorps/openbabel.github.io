<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBResidue Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.2 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a></div>
<h1>OBResidue Class Reference</h1><!-- doxytag: class="OpenBabel::OBResidue" --><!-- doxytag: inherits="OpenBabel::OBBase" -->Residue information.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="residue_8h-source.shtml">openbabel/residue.h</a>&gt;</code>
<p>
Inheritance diagram for OBResidue:<p><center><img src="classOpenBabel_1_1OBResidue__inherit__graph.png" border="0" usemap="#OBResidue__inherit__map" alt="Inheritance graph"></center>
<map name="OBResidue__inherit__map">
<area shape="rect" href="classOpenBabel_1_1OBBase.shtml" title="Base Class." alt="" coords="17,7,89,34"></map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center><a href="classOpenBabel_1_1OBResidue-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#209fe98baf20de8f3a9fa0e18ab1a397">OBResidue</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#b1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue</a> (const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ef348075604c0cede393f255546b1a17">~OBResidue</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#19156f703dd34221b38ad4a787648771">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#d08955a5355b302e5054fb10239d4d40">AddAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#dcb2b5249a58b4d8f546c3216b86651c">InsertAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#f56cd8bd9860e5f011d802d88dc571c7">RemoveAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#d12fd937da5f4b0c4562888252fe214b">Clear</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#7cf274421c8b6705d6470aa7e57b41ab">SetName</a> (const std::string &amp;resname)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#85b5552b9b6d699aed667f4587b9e94b">SetNum</a> (const unsigned int resnum)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#035ecf9b12c0d62081d0a3e5a9d3c98c">SetChain</a> (const char chain)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#c1cd4d44ddc8e40dad300a43d6288c53">SetChainNum</a> (const unsigned int chainnum)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#1a0264682b159979a57ee478b19111c8">SetIdx</a> (const unsigned int idx)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#d4945233e0066b2b6fbfbe0ed73ae7bc">SetAtomID</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, const std::string &amp;id)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#52f53369a63eabccdc3ecf5f02b9d211">SetHetAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, bool hetatm)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#18a42bad6c8fa5ee0a23cbd292cfe034">SetSerialNum</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, unsigned int sernum)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#2e96306d57a0b29618a90fd2f1eb5f31">GetName</a> (void) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#c2f8da9d9707ce4a42bdc04acb569171">GetNum</a> (void) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#195ecb7e7db319e951f123b8a2097a19">GetNumAtoms</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#79a18754e910a57089b83c0e4598bc99">GetChain</a> (void) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#4d44b719e43894381c15f02c7b07c801">GetChainNum</a> (void) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#2d5d0b2164b4af01e12ae914ebe49c5e">GetIdx</a> (void) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#bf8f05944ae2bf94463ef557fb2f6e97">GetResKey</a> (void) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#f55938feea9c6a504609111583dfdd2a">GetAtoms</a> (void) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#55b3d11326ee365438d9c1cf97d0c51c">GetBonds</a> (bool exterior=true) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#d22f4f066b751f8d6c55f155d380f2bd">GetAtomID</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a3450ea312e3177645be2aff9a63a4cc">GetSerialNum</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#1bee4700366f0455cc64c8f8fe4986eb">GetAminoAcidProperty</a> (int) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#5af8c25998c59898195719eb90dcb226">GetAtomProperty</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a, int) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#0bf504badd0f3f11d537ee9374e37098">GetResidueProperty</a> (int) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#cbf3d5f13bc263f0957a70dedca072c8">IsHetAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#fdd9827904836a3365af1af852fbe0f7">IsResidueType</a> (int) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#c124224e62a72e842a6b61b1e5e3190d">DoTransformations</a> (const std::map&lt; std::string, std::string &gt; *)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">T *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#305f9b75226a0e4d51c769e3a7dd6f13">CastAndClear</a> (bool clear=true)</td></tr>

<tr><td colspan="2"><div class="groupHeader">Iterator methods</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#f5cc46e8aef811b24e105aca712ec7c2">OBAtomIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#e3b07b388e733d5a0e9ee9654a4411a1">BeginAtoms</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#f5cc46e8aef811b24e105aca712ec7c2">OBAtomIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#81afb84c73fe3e57e8edd5a472e175f6">EndAtoms</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#075ad65cbdba2504245591ad25df77ee">BeginAtom</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;::iterator &amp;i)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#f5eea31cca0592139ea68162f211d6b2">NextAtom</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;::iterator &amp;i)</td></tr>

<tr><td colspan="2"><div class="groupHeader">Generic data handling methods (via OBGenericData)</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#86dd58fc1da5652d70e823fa77cc1637">HasData</a> (const std::string &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#01b429ffcaf47cf265acd439ed2faca0">HasData</a> (const char *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#6cb103f12f49d86132ece200000da830">HasData</a> (const unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#797e5b4d20b6233062d2fdba78a08e06">DeleteData</a> (unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#b586df65e3f115b69510820b34098ce9">DeleteData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#af61a3ecb8f2926aaf117299388d43c2">DeleteData</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#db6b0ec89bfea783825b3b466e4dbc00">SetData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#51a30d2024bf4e9474564ca0a5203105">DataSize</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ee672d91b694547fb072fdaa8e03cfe9">GetData</a> (const unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#22f0eade8b5924eec28ad50f0ce2031f">GetData</a> (const std::string &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#483b277678a8ca48998742c80985fd0b">GetData</a> (const char *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#90a551ff0a0ed3fa58745dff0ecacdaa">GetData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a959146c3f7b458009dc04f61b5a2e7f">GetData</a> (<a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a> source)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#d6fa5ee882f2b39a9101861b97267fec">OBDataIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#15b47c65393d46fde62d1f0a19bcf9fa">BeginData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#d6fa5ee882f2b39a9101861b97267fec">OBDataIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#117c836710dd3aaa8748509262a5c280">EndData</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#1219a011a5e0ec59c67a5a873d81986c">_idx</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#bdc35302d8b2ddbbd0cb48de079527eb">_chain</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#d719c79a18fbf14911233bb6e6119370">_aakey</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a09358b69ef09f768b7316011e53af22">_reskey</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#35ca67994cee9230d191ee90d1068072">_resnum</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#e5b2a83968919b021e1189020fe3492a">_resname</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; bool &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#f48bc2090137ce8be5ab8b86125734b7">_hetatm</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; std::string &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#520b293262a31a65c78c69b6177f871c">_atomid</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#bfa0f02c4ad4146e7250fb38a89b9387">_atoms</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; unsigned int &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#51fea0daea9bfeed01133d1a7376523a">_sernum</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#f7811cf8aadbf3b3477c560b0ef2f797">_vdata</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Residue information. 
<p>
The residue information is drawn from PDB or MOL2 files (or similar), which track biomolecule information, and are stored in the <a class="el" href="classOpenBabel_1_1OBResidue.shtml" title="Residue information.">OBResidue</a> class. OBResidues are stored inside the <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> class and <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> classes. The residue information for an atom can be requested in the following way: <div class="fragment"><pre class="fragment">      OBAtom *atom;
      <a class="code" href="classOpenBabel_1_1OBResidue.shtml#209fe98baf20de8f3a9fa0e18ab1a397" title="Constructor.">OBResidue</a> *r;
      atom = mol.GetAtom(1);
      r = atom-&gt;GetResidue();
</pre></div> The residue information for a molecule can be manipulated too: <div class="fragment"><pre class="fragment">      cout &lt;&lt; <span class="stringliteral">"This molecule has "</span> &lt;&lt; mol.NumResidues() &lt;&lt; <span class="stringliteral">" residues."</span> &lt;&lt; endl;
      <a class="code" href="classOpenBabel_1_1OBResidue.shtml#209fe98baf20de8f3a9fa0e18ab1a397" title="Constructor.">OBResidue</a> *r;
      r = mol.GetResidue(1);
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="209fe98baf20de8f3a9fa0e18ab1a397"></a><!-- doxytag: member="OpenBabel::OBResidue::OBResidue" ref="209fe98baf20de8f3a9fa0e18ab1a397" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>

</div>
</div><p>
<a class="anchor" name="b1c75d4e3f23b57af05e7da7ff2a81f1"></a><!-- doxytag: member="OpenBabel::OBResidue::OBResidue" ref="b1c75d4e3f23b57af05e7da7ff2a81f1" args="(const OBResidue &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Copy constructor. 
<p>

</div>
</div><p>
<a class="anchor" name="ef348075604c0cede393f255546b1a17"></a><!-- doxytag: member="OpenBabel::OBResidue::~OBResidue" ref="ef348075604c0cede393f255546b1a17" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="19156f703dd34221b38ad4a787648771"></a><!-- doxytag: member="OpenBabel::OBResidue::operator=" ref="19156f703dd34221b38ad4a787648771" args="(const OBResidue &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp; operator=           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d08955a5355b302e5054fb10239d4d40"></a><!-- doxytag: member="OpenBabel::OBResidue::AddAtom" ref="d08955a5355b302e5054fb10239d4d40" args="(OBAtom *atom)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddAtom           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Add <code>atom</code> to this residue. Updates the atom via <a class="el" href="classOpenBabel_1_1OBAtom.shtml#de786f15ee67979fbb9c48970b22e184" title="Attach an OBResidue res as containing this atom.">OBAtom::SetResidue()</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="dcb2b5249a58b4d8f546c3216b86651c"></a><!-- doxytag: member="OpenBabel::OBResidue::InsertAtom" ref="dcb2b5249a58b4d8f546c3216b86651c" args="(OBAtom *atom)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void InsertAtom           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Add <code>atom</code> to this residue. Updates the atom via <a class="el" href="classOpenBabel_1_1OBAtom.shtml#de786f15ee67979fbb9c48970b22e184" title="Attach an OBResidue res as containing this atom.">OBAtom::SetResidue()</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="f56cd8bd9860e5f011d802d88dc571c7"></a><!-- doxytag: member="OpenBabel::OBResidue::RemoveAtom" ref="f56cd8bd9860e5f011d802d88dc571c7" args="(OBAtom *atom)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RemoveAtom           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Remove <code>atom</code> from this residue and update the atom. 
<p>

</div>
</div><p>
<a class="anchor" name="d12fd937da5f4b0c4562888252fe214b"></a><!-- doxytag: member="OpenBabel::OBResidue::Clear" ref="d12fd937da5f4b0c4562888252fe214b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Clear           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear any and all data associated with this residue. Updates all atoms included in the residue, as well as calling <a class="el" href="classOpenBabel_1_1OBBase.shtml#d12fd937da5f4b0c4562888252fe214b" title="Clear any and all data associated with this object.">OBBase::Clear()</a> for any generic data. <dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether the call was successful. </dd></dl>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBBase.shtml#d12fd937da5f4b0c4562888252fe214b">OBBase</a>.
</div>
</div><p>
<a class="anchor" name="7cf274421c8b6705d6470aa7e57b41ab"></a><!-- doxytag: member="OpenBabel::OBResidue::SetName" ref="7cf274421c8b6705d6470aa7e57b41ab" args="(const std::string &amp;resname)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetName           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>resname</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the name of this residue (e.g., "ALA"). Use 3-char PDB standard names. <a href="http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_79.html">http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_79.html</a> MODRES records for modified residues: <a href="http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_36.html.">http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_36.html.</a> 
<p>

</div>
</div><p>
<a class="anchor" name="85b5552b9b6d699aed667f4587b9e94b"></a><!-- doxytag: member="OpenBabel::OBResidue::SetNum" ref="85b5552b9b6d699aed667f4587b9e94b" args="(const unsigned int resnum)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNum           </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&nbsp;</td>
          <td class="paramname"> <em>resnum</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the residue number (in the sequence). 
<p>

</div>
</div><p>
<a class="anchor" name="035ecf9b12c0d62081d0a3e5a9d3c98c"></a><!-- doxytag: member="OpenBabel::OBResidue::SetChain" ref="035ecf9b12c0d62081d0a3e5a9d3c98c" args="(const char chain)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetChain           </td>
          <td>(</td>
          <td class="paramtype">const char&nbsp;</td>
          <td class="paramname"> <em>chain</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the chain ID for this residue. 
<p>

</div>
</div><p>
<a class="anchor" name="c1cd4d44ddc8e40dad300a43d6288c53"></a><!-- doxytag: member="OpenBabel::OBResidue::SetChainNum" ref="c1cd4d44ddc8e40dad300a43d6288c53" args="(const unsigned int chainnum)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetChainNum           </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&nbsp;</td>
          <td class="paramname"> <em>chainnum</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the chain number for this residue. 
<p>

</div>
</div><p>
<a class="anchor" name="1a0264682b159979a57ee478b19111c8"></a><!-- doxytag: member="OpenBabel::OBResidue::SetIdx" ref="1a0264682b159979a57ee478b19111c8" args="(const unsigned int idx)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetIdx           </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&nbsp;</td>
          <td class="paramname"> <em>idx</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the internal index of this residue in the parent <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>. Intended mostly for internal use 
</div>
</div><p>
<a class="anchor" name="d4945233e0066b2b6fbfbe0ed73ae7bc"></a><!-- doxytag: member="OpenBabel::OBResidue::SetAtomID" ref="d4945233e0066b2b6fbfbe0ed73ae7bc" args="(OBAtom *atom, const std::string &amp;id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAtomID           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>id</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the character code ID for an ATOM record for the supplied atom This does nothing if the supplied atom is not found in the residue 
</div>
</div><p>
<a class="anchor" name="52f53369a63eabccdc3ecf5f02b9d211"></a><!-- doxytag: member="OpenBabel::OBResidue::SetHetAtom" ref="52f53369a63eabccdc3ecf5f02b9d211" args="(OBAtom *atom, bool hetatm)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetHetAtom           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>hetatm</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="18a42bad6c8fa5ee0a23cbd292cfe034"></a><!-- doxytag: member="OpenBabel::OBResidue::SetSerialNum" ref="18a42bad6c8fa5ee0a23cbd292cfe034" args="(OBAtom *atom, unsigned int sernum)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetSerialNum           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>sernum</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the atomic serial number for a given atom (see <a class="el" href="classOpenBabel_1_1OBSerialNums.shtml" title="Defines a map between serial numbers (e.g., in a PDB file) and OBAtom objects inside...">OBSerialNums</a>). 
<p>

</div>
</div><p>
<a class="anchor" name="2e96306d57a0b29618a90fd2f1eb5f31"></a><!-- doxytag: member="OpenBabel::OBResidue::GetName" ref="2e96306d57a0b29618a90fd2f1eb5f31" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string GetName           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The residue name </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="c2f8da9d9707ce4a42bdc04acb569171"></a><!-- doxytag: member="OpenBabel::OBResidue::GetNum" ref="c2f8da9d9707ce4a42bdc04acb569171" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetNum           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The residue number (in the sequence) </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="195ecb7e7db319e951f123b8a2097a19"></a><!-- doxytag: member="OpenBabel::OBResidue::GetNumAtoms" ref="195ecb7e7db319e951f123b8a2097a19" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetNumAtoms           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The number of atoms in this residue </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="79a18754e910a57089b83c0e4598bc99"></a><!-- doxytag: member="OpenBabel::OBResidue::GetChain" ref="79a18754e910a57089b83c0e4598bc99" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char GetChain           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The ID of the chain which includes this residue </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="4d44b719e43894381c15f02c7b07c801"></a><!-- doxytag: member="OpenBabel::OBResidue::GetChainNum" ref="4d44b719e43894381c15f02c7b07c801" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetChainNum           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The number of the chain which includes this residue </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="2d5d0b2164b4af01e12ae914ebe49c5e"></a><!-- doxytag: member="OpenBabel::OBResidue::GetIdx" ref="2d5d0b2164b4af01e12ae914ebe49c5e" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetIdx           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The internal index of this residue in the parent <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="bf8f05944ae2bf94463ef557fb2f6e97"></a><!-- doxytag: member="OpenBabel::OBResidue::GetResKey" ref="bf8f05944ae2bf94463ef557fb2f6e97" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetResKey           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The residue key (i.e., an entry in the <a class="el" href="namespaceOpenBabel_1_1OBResidueIndex.shtml" title="Residue names (index into Residue[] array).">OBResidueIndex</a> namespace) </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="f55938feea9c6a504609111583dfdd2a"></a><!-- doxytag: member="OpenBabel::OBResidue::GetAtoms" ref="f55938feea9c6a504609111583dfdd2a" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt; GetAtoms           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>a vector of all atoms in this residue </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="55b3d11326ee365438d9c1cf97d0c51c"></a><!-- doxytag: member="OpenBabel::OBResidue::GetBonds" ref="55b3d11326ee365438d9c1cf97d0c51c" args="(bool exterior=true) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * &gt; GetBonds           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>exterior</em> = <code>true</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>all bonds in this residue. <code>exterior</code> includes bonds to atoms outside this residue (default is true) </dd></dl>

</div>
</div><p>
<a class="anchor" name="d22f4f066b751f8d6c55f155d380f2bd"></a><!-- doxytag: member="OpenBabel::OBResidue::GetAtomID" ref="d22f4f066b751f8d6c55f155d380f2bd" args="(OBAtom *atom) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string GetAtomID           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the atom ID (character code) for the supplied atom or "" if the atom is not found in this residue </dd></dl>

</div>
</div><p>
<a class="anchor" name="a3450ea312e3177645be2aff9a63a4cc"></a><!-- doxytag: member="OpenBabel::OBResidue::GetSerialNum" ref="a3450ea312e3177645be2aff9a63a4cc" args="(OBAtom *atom) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetSerialNum           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the serial number of the supplied atom (uses <a class="el" href="classOpenBabel_1_1OBSerialNums.shtml" title="Defines a map between serial numbers (e.g., in a PDB file) and OBAtom objects inside...">OBSerialNums</a>) </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="1bee4700366f0455cc64c8f8fe4986eb"></a><!-- doxytag: member="OpenBabel::OBResidue::GetAminoAcidProperty" ref="1bee4700366f0455cc64c8f8fe4986eb" args="(int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetAminoAcidProperty           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether this residue has the supplied amino acid property defined from the <a class="el" href="namespaceOpenBabel_1_1OBAminoAcidProperty.shtml" title="Residue property definitions.">OBAminoAcidProperty</a> namespace </dd></dl>

</div>
</div><p>
<a class="anchor" name="5af8c25998c59898195719eb90dcb226"></a><!-- doxytag: member="OpenBabel::OBResidue::GetAtomProperty" ref="5af8c25998c59898195719eb90dcb226" args="(OBAtom *a, int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetAtomProperty           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether atom <code>a</code> has the supplied residue atom property defined from the <a class="el" href="namespaceOpenBabel_1_1OBResidueAtomProperty.shtml" title="Residue atom properties.">OBResidueAtomProperty</a> namespace </dd></dl>

</div>
</div><p>
<a class="anchor" name="0bf504badd0f3f11d537ee9374e37098"></a><!-- doxytag: member="OpenBabel::OBResidue::GetResidueProperty" ref="0bf504badd0f3f11d537ee9374e37098" args="(int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetResidueProperty           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether this residue has the supplied property defined from the <a class="el" href="namespaceOpenBabel_1_1OBResidueProperty.shtml" title="Residue types.">OBResidueProperty</a> namespace </dd></dl>

</div>
</div><p>
<a class="anchor" name="cbf3d5f13bc263f0957a70dedca072c8"></a><!-- doxytag: member="OpenBabel::OBResidue::IsHetAtom" ref="cbf3d5f13bc263f0957a70dedca072c8" args="(OBAtom *atom) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHetAtom           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>If the given atom is a HETATM record </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="fdd9827904836a3365af1af852fbe0f7"></a><!-- doxytag: member="OpenBabel::OBResidue::IsResidueType" ref="fdd9827904836a3365af1af852fbe0f7" args="(int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsResidueType           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>If this residue matches the supplied <code>restype</code> Set by <a class="el" href="namespaceOpenBabel.shtml#91a8965770cf999c120602edb0c09bcd">SetResidueKeys()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="e3b07b388e733d5a0e9ee9654a4411a1"></a><!-- doxytag: member="OpenBabel::OBResidue::BeginAtoms" ref="e3b07b388e733d5a0e9ee9654a4411a1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#f5cc46e8aef811b24e105aca712ec7c2">OBAtomIterator</a> BeginAtoms           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>An iterator to the beginning of the atom list in this residue </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="81afb84c73fe3e57e8edd5a472e175f6"></a><!-- doxytag: member="OpenBabel::OBResidue::EndAtoms" ref="81afb84c73fe3e57e8edd5a472e175f6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#f5cc46e8aef811b24e105aca712ec7c2">OBAtomIterator</a> EndAtoms           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>An iterator to the end of the atom list in this residue </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="075ad65cbdba2504245591ad25df77ee"></a><!-- doxytag: member="OpenBabel::OBResidue::BeginAtom" ref="075ad65cbdba2504245591ad25df77ee" args="(std::vector&lt; OBAtom * &gt;::iterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * BeginAtom           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the iterator <code>i</code> to the beginning of the atom list in this residue <dl class="return" compact><dt><b>Returns:</b></dt><dd>The first atom (or NULL if none exist) </dd></dl>

</div>
</div><p>
<a class="anchor" name="f5eea31cca0592139ea68162f211d6b2"></a><!-- doxytag: member="OpenBabel::OBResidue::NextAtom" ref="f5eea31cca0592139ea68162f211d6b2" args="(std::vector&lt; OBAtom * &gt;::iterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * NextAtom           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Increment the iterator <code>i</code> <dl class="return" compact><dt><b>Returns:</b></dt><dd>The next atom (or NULL if none exist) </dd></dl>

</div>
</div><p>
<a class="anchor" name="c124224e62a72e842a6b61b1e5e3190d"></a><!-- doxytag: member="OpenBabel::OBResidue::DoTransformations" ref="c124224e62a72e842a6b61b1e5e3190d" args="(const std::map&lt; std::string, std::string &gt; *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* DoTransformations           </td>
          <td>(</td>
          <td class="paramtype">const std::map&lt; std::string, std::string &gt; *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Perform a set of transformations specified by the user<p>
Typically these are program options to filter or modify an object For example, see <a class="el" href="classOpenBabel_1_1OBMol.shtml#035de6b4d4b6834f08d08940911f645d">OBMol::DoTransformations()</a> and <a class="el" href="classOpenBabel_1_1OBMol.shtml#b72bba66cc9e40fb3b657a30d87bbe6d" title="A list of descriptions of command-line options for DoTransformations()">OBMol::ClassDescription()</a> 
<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#035de6b4d4b6834f08d08940911f645d">OBMol</a>.
</div>
</div><p>
<a class="anchor" name="6bb6ed5c064e3957d8dd03aba51e61f7"></a><!-- doxytag: member="OpenBabel::OBResidue::ClassDescription" ref="6bb6ed5c064e3957d8dd03aba51e61f7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static const char* ClassDescription           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, static, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A list of descriptions of command-line options for <a class="el" href="classOpenBabel_1_1OBBase.shtml#c124224e62a72e842a6b61b1e5e3190d">DoTransformations()</a> </dd></dl>

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#b72bba66cc9e40fb3b657a30d87bbe6d">OBMol</a>.
</div>
</div><p>
<a class="anchor" name="305f9b75226a0e4d51c769e3a7dd6f13"></a><!-- doxytag: member="OpenBabel::OBResidue::CastAndClear" ref="305f9b75226a0e4d51c769e3a7dd6f13" args="(bool clear=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">T* CastAndClear           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>clear</em> = <code>true</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
By default clears the object. Called from ReadMolecule of most format classes. 
<p>

</div>
</div><p>
<a class="anchor" name="86dd58fc1da5652d70e823fa77cc1637"></a><!-- doxytag: member="OpenBabel::OBResidue::HasData" ref="86dd58fc1da5652d70e823fa77cc1637" args="(const std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="01b429ffcaf47cf265acd439ed2faca0"></a><!-- doxytag: member="OpenBabel::OBResidue::HasData" ref="01b429ffcaf47cf265acd439ed2faca0" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="6cb103f12f49d86132ece200000da830"></a><!-- doxytag: member="OpenBabel::OBResidue::HasData" ref="6cb103f12f49d86132ece200000da830" args="(const unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists, for a given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="797e5b4d20b6233062d2fdba78a08e06"></a><!-- doxytag: member="OpenBabel::OBResidue::DeleteData" ref="797e5b4d20b6233062d2fdba78a08e06" args="(unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Delete any data matching the given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="b586df65e3f115b69510820b34098ce9"></a><!-- doxytag: member="OpenBabel::OBResidue::DeleteData" ref="b586df65e3f115b69510820b34098ce9" args="(OBGenericData *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Delete the given generic data from this object. 
<p>

</div>
</div><p>
<a class="anchor" name="af61a3ecb8f2926aaf117299388d43c2"></a><!-- doxytag: member="OpenBabel::OBResidue::DeleteData" ref="af61a3ecb8f2926aaf117299388d43c2" args="(std::vector&lt; OBGenericData * &gt; &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Delete all of the given generic data from this object. 
<p>

</div>
</div><p>
<a class="anchor" name="db6b0ec89bfea783825b3b466e4dbc00"></a><!-- doxytag: member="OpenBabel::OBResidue::SetData" ref="db6b0ec89bfea783825b3b466e4dbc00" args="(OBGenericData *d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Adds a data object; does nothing if d==NULL. 
<p>

</div>
</div><p>
<a class="anchor" name="51a30d2024bf4e9474564ca0a5203105"></a><!-- doxytag: member="OpenBabel::OBResidue::DataSize" ref="51a30d2024bf4e9474564ca0a5203105" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int DataSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a> items attached to this molecule. </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="ee672d91b694547fb072fdaa8e03cfe9"></a><!-- doxytag: member="OpenBabel::OBResidue::GetData" ref="ee672d91b694547fb072fdaa8e03cfe9" args="(const unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the first matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> or NULL if nothing matches </dd></dl>

</div>
</div><p>
<a class="anchor" name="22f0eade8b5924eec28ad50f0ce2031f"></a><!-- doxytag: member="OpenBabel::OBResidue::GetData" ref="22f0eade8b5924eec28ad50f0ce2031f" args="(const std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the value given an attribute name </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="483b277678a8ca48998742c80985fd0b"></a><!-- doxytag: member="OpenBabel::OBResidue::GetData" ref="483b277678a8ca48998742c80985fd0b" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the value given an attribute name </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="90a551ff0a0ed3fa58745dff0ecacdaa"></a><!-- doxytag: member="OpenBabel::OBResidue::GetData" ref="90a551ff0a0ed3fa58745dff0ecacdaa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;&amp; GetData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>all data, suitable for iterating </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="a959146c3f7b458009dc04f61b5a2e7f"></a><!-- doxytag: member="OpenBabel::OBResidue::GetData" ref="a959146c3f7b458009dc04f61b5a2e7f" args="(DataOrigin source)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&nbsp;</td>
          <td class="paramname"> <em>source</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>all data with a specific origin, suitable for iterating </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="15b47c65393d46fde62d1f0a19bcf9fa"></a><!-- doxytag: member="OpenBabel::OBResidue::BeginData" ref="15b47c65393d46fde62d1f0a19bcf9fa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#d6fa5ee882f2b39a9101861b97267fec">OBDataIterator</a> BeginData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>An iterator pointing to the beginning of the data </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="117c836710dd3aaa8748509262a5c280"></a><!-- doxytag: member="OpenBabel::OBResidue::EndData" ref="117c836710dd3aaa8748509262a5c280" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#d6fa5ee882f2b39a9101861b97267fec">OBDataIterator</a> EndData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>An iterator pointing to the end of the data </dd></dl>

<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="1219a011a5e0ec59c67a5a873d81986c"></a><!-- doxytag: member="OpenBabel::OBResidue::_idx" ref="1219a011a5e0ec59c67a5a873d81986c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBResidue.shtml#1219a011a5e0ec59c67a5a873d81986c">_idx</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Residue index (i.e., internal index in an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>). 
<p>

</div>
</div><p>
<a class="anchor" name="bdc35302d8b2ddbbd0cb48de079527eb"></a><!-- doxytag: member="OpenBabel::OBResidue::_chain" ref="bdc35302d8b2ddbbd0cb48de079527eb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char <a class="el" href="classOpenBabel_1_1OBResidue.shtml#bdc35302d8b2ddbbd0cb48de079527eb">_chain</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Chain ID. 
<p>

</div>
</div><p>
<a class="anchor" name="d719c79a18fbf14911233bb6e6119370"></a><!-- doxytag: member="OpenBabel::OBResidue::_aakey" ref="d719c79a18fbf14911233bb6e6119370" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBResidue.shtml#d719c79a18fbf14911233bb6e6119370">_aakey</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Amino Acid key ID -- see <a class="el" href="namespaceOpenBabel.shtml#91a8965770cf999c120602edb0c09bcd">SetResidueKeys()</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="a09358b69ef09f768b7316011e53af22"></a><!-- doxytag: member="OpenBabel::OBResidue::_reskey" ref="a09358b69ef09f768b7316011e53af22" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a09358b69ef09f768b7316011e53af22">_reskey</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Residue key ID -- see <a class="el" href="namespaceOpenBabel.shtml#91a8965770cf999c120602edb0c09bcd">SetResidueKeys()</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="35ca67994cee9230d191ee90d1068072"></a><!-- doxytag: member="OpenBabel::OBResidue::_resnum" ref="35ca67994cee9230d191ee90d1068072" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBResidue.shtml#35ca67994cee9230d191ee90d1068072">_resnum</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Residue number (i.e., in file). 
<p>

</div>
</div><p>
<a class="anchor" name="e5b2a83968919b021e1189020fe3492a"></a><!-- doxytag: member="OpenBabel::OBResidue::_resname" ref="e5b2a83968919b021e1189020fe3492a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBResidue.shtml#e5b2a83968919b021e1189020fe3492a">_resname</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Residue text name. 
<p>

</div>
</div><p>
<a class="anchor" name="f48bc2090137ce8be5ab8b86125734b7"></a><!-- doxytag: member="OpenBabel::OBResidue::_hetatm" ref="f48bc2090137ce8be5ab8b86125734b7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;bool&gt; <a class="el" href="classOpenBabel_1_1OBResidue.shtml#f48bc2090137ce8be5ab8b86125734b7">_hetatm</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is a given atom a HETAM. 
<p>

</div>
</div><p>
<a class="anchor" name="520b293262a31a65c78c69b6177f871c"></a><!-- doxytag: member="OpenBabel::OBResidue::_atomid" ref="520b293262a31a65c78c69b6177f871c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; <a class="el" href="classOpenBabel_1_1OBResidue.shtml#520b293262a31a65c78c69b6177f871c">_atomid</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Residue atom text IDs. 
<p>

</div>
</div><p>
<a class="anchor" name="bfa0f02c4ad4146e7250fb38a89b9387"></a><!-- doxytag: member="OpenBabel::OBResidue::_atoms" ref="bfa0f02c4ad4146e7250fb38a89b9387" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>*&gt; <a class="el" href="classOpenBabel_1_1OBResidue.shtml#bfa0f02c4ad4146e7250fb38a89b9387">_atoms</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
List of <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> in this residue. 
<p>

</div>
</div><p>
<a class="anchor" name="51fea0daea9bfeed01133d1a7376523a"></a><!-- doxytag: member="OpenBabel::OBResidue::_sernum" ref="51fea0daea9bfeed01133d1a7376523a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;unsigned int&gt; <a class="el" href="classOpenBabel_1_1OBResidue.shtml#51fea0daea9bfeed01133d1a7376523a">_sernum</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
List of serial numbers. 
<p>

</div>
</div><p>
<a class="anchor" name="f7811cf8aadbf3b3477c560b0ef2f797"></a><!-- doxytag: member="OpenBabel::OBResidue::_vdata" ref="f7811cf8aadbf3b3477c560b0ef2f797" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt; <a class="el" href="classOpenBabel_1_1OBBase.shtml#f7811cf8aadbf3b3477c560b0ef2f797">_vdata</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Custom data. 
<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="residue_8h-source.shtml">residue.h</a><li><a class="el" href="residue_8cpp.shtml">residue.cpp</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/wiki/">Open Babel</a>, version 2.1.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.sourceforge.net/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Tue Apr 24 18:08:18 2007 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.2.
</div>

</body>
</html>
