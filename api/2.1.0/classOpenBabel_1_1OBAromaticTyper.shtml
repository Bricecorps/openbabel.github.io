<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBAromaticTyper Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.2 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml">OBAromaticTyper</a></div>
<h1>OBAromaticTyper Class Reference</h1><!-- doxytag: class="OpenBabel::OBAromaticTyper" --><!-- doxytag: inherits="OpenBabel::OBGlobalDataBase" -->Assigns aromatic typing to atoms and bonds.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="typer_8h-source.shtml">openbabel/typer.h</a>&gt;</code>
<p>
Inheritance diagram for OBAromaticTyper:<p><center><img src="classOpenBabel_1_1OBAromaticTyper__inherit__graph.png" border="0" usemap="#OBAromaticTyper__inherit__map" alt="Inheritance graph"></center>
<map name="OBAromaticTyper__inherit__map">
<area shape="rect" href="classOpenBabel_1_1OBGlobalDataBase.shtml" title="Base data table class, handles reading data files." alt="" coords="7,7,149,34"></map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center><a href="classOpenBabel_1_1OBAromaticTyper-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#ea2f134780d085773f633cd27f1a0916">OBAromaticTyper</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#120c7e77d9c2de69099a705700277b43">~OBAromaticTyper</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#93721b9b970ca9a8160f7b831ae7e9d4">GetSize</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#e59fef8af62e52629bf2576e34a26801">ParseLine</a> (const char *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#5efe4ccada855f2e0c4b0f57614f8607">AssignAromaticFlags</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#ad45f9f1cd93fdef9c658091f034cce5">PropagatePotentialAromatic</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#0c70c9a0eec26db77fb26931fafab63b">SelectRootAtoms</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;, bool avoidInnerRingAtoms=true)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#5230bf1636e0f8f7f3113bb335123558">ExcludeSmallRing</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#52c124d41a6d5324d9ec6eb2c6faab87">CheckAromaticity</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *root, int searchDepth)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#68ba77b0a1443e9e7276e3e97e16893c">TraverseCycle</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *root, <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *prev, std::pair&lt; int, int &gt; &amp;er, int depth)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#1e3b6d38df0786ccf7f938d60e386aae">Init</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#49002f92ad6a1c71d7f9148271770b7a">SetReadDirectory</a> (char *dir)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#2bd0630d27e20f38de4c753ca68e2282">SetEnvironmentVariable</a> (char *var)</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#40756214f69d1c40ad70b64ae9fdc08d">_init</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#45a08560f2b4885250c586c550f2d7af">_dataptr</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#895aefe990ffe9af66bb5cd4e37d3579">_filename</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#2c2f62a9907553e5feb1ecef65c6c386">_dir</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#5d93159b6eee0cb302451621106f61c7">_subdir</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#87d06c3aed77fb9e118b337bed557928">_envvar</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Assigns aromatic typing to atoms and bonds. 
<p>
The <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml" title="Assigns aromatic typing to atoms and bonds.">OBAromaticTyper</a> class is designed to read in a list of aromatic perception rules and apply them to molecules. The code that performs typing is not usually used directly -- it is usually done automatically when their corresponding values are requested of atoms or bonds. <div class="fragment"><pre class="fragment">    atom-&gt;IsAromatic();
    bond-&gt;IsAromatic();
    bond-&gt;IsDouble(); <span class="comment">// needs to check aromaticity and define Kekule structures</span>
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="ea2f134780d085773f633cd27f1a0916"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::OBAromaticTyper" ref="ea2f134780d085773f633cd27f1a0916" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml">OBAromaticTyper</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="120c7e77d9c2de69099a705700277b43"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::~OBAromaticTyper" ref="120c7e77d9c2de69099a705700277b43" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml">OBAromaticTyper</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="93721b9b970ca9a8160f7b831ae7e9d4"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::GetSize" ref="93721b9b970ca9a8160f7b831ae7e9d4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of SMARTS patterns </dd></dl>

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#79821726c4064984b8847a7bba55f6d3">OBGlobalDataBase</a>.
</div>
</div><p>
<a class="anchor" name="e59fef8af62e52629bf2576e34a26801"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::ParseLine" ref="e59fef8af62e52629bf2576e34a26801" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ParseLine           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Specified by particular table classes (parses an individual data line). 
<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#9a84dbfb089769dec48cd6f6eca1057b">OBGlobalDataBase</a>.
</div>
</div><p>
<a class="anchor" name="5efe4ccada855f2e0c4b0f57614f8607"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::AssignAromaticFlags" ref="5efe4ccada855f2e0c4b0f57614f8607" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AssignAromaticFlags           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Assign aromaticity flag to atoms and bonds. 
<p>

</div>
</div><p>
<a class="anchor" name="ad45f9f1cd93fdef9c658091f034cce5"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::PropagatePotentialAromatic" ref="ad45f9f1cd93fdef9c658091f034cce5" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PropagatePotentialAromatic           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
"Anti-alias" potentially aromatic flags around a molecule (aromatic atoms need to have &gt;= 2 neighboring ring atoms) 
</div>
</div><p>
<a class="anchor" name="0c70c9a0eec26db77fb26931fafab63b"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::SelectRootAtoms" ref="0c70c9a0eec26db77fb26931fafab63b" args="(OBMol &amp;, bool avoidInnerRingAtoms=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SelectRootAtoms           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>avoidInnerRingAtoms</em> = <code>true</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Select the root atoms for traversing atoms in rings. 
<p>
Picking only the begin atom of a closure bond can cause difficulties when the selected atom is an inner atom with three neighbour ring atoms. Why ? Because this atom can get trapped by the other atoms when determining aromaticity, because a simple visited flag is used in the <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#68ba77b0a1443e9e7276e3e97e16893c" title="Traverse a potentially aromatic cycle starting at root.">OBAromaticTyper::TraverseCycle()</a> method.<p>
Ported from JOELib, copyright Joerg Wegner, 2003 under the GPL version 2<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mol</em>&nbsp;</td><td>the molecule </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>avoidInnerRingAtoms</em>&nbsp;</td><td>inner closure ring atoms with more than 2 neighbours will be avoided </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="5230bf1636e0f8f7f3113bb335123558"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::ExcludeSmallRing" ref="5230bf1636e0f8f7f3113bb335123558" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ExcludeSmallRing           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Remove 3-member rings from consideration. 
<p>

</div>
</div><p>
<a class="anchor" name="52c124d41a6d5324d9ec6eb2c6faab87"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::CheckAromaticity" ref="52c124d41a6d5324d9ec6eb2c6faab87" args="(OBAtom *root, int searchDepth)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CheckAromaticity           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>searchDepth</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Check aromaticity starting from the root atom, up to a specified depth. 
<p>

</div>
</div><p>
<a class="anchor" name="68ba77b0a1443e9e7276e3e97e16893c"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::TraverseCycle" ref="68ba77b0a1443e9e7276e3e97e16893c" args="(OBAtom *root, OBAtom *atom, OBBond *prev, std::pair&lt; int, int &gt; &amp;er, int depth)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool TraverseCycle           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&nbsp;</td>
          <td class="paramname"> <em>prev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::pair&lt; int, int &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>er</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>depth</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Traverse a potentially aromatic cycle starting at <code>root</code>. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if the cycle is likely aromatic </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>root</em>&nbsp;</td><td>The initial, "root" atom in traversing this ring </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>atom</em>&nbsp;</td><td>The current atom to visit and check </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>prev</em>&nbsp;</td><td>The bond traversed in moving to this <code>atom</code> </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>er</em>&nbsp;</td><td>The min and max number of pi electrons for this ring </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>depth</em>&nbsp;</td><td>The maximum number of atoms to visit in a ring (e.g., 6)</td></tr>
  </table>
</dl>
This method traverses a potentially aromatic ring, adding up the possible pi electrons for each atom. At the end (e.g., when <code>atom</code> == <code>root</code>) the Huekel 4n+2 rule is checked to see if there is a possible electronic configuration which corresponds to aromaticity. 
</div>
</div><p>
<a class="anchor" name="1e3b6d38df0786ccf7f938d60e386aae"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::Init" ref="1e3b6d38df0786ccf7f938d60e386aae" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Init           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Read in the data file, falling back as needed. 
<p>

</div>
</div><p>
<a class="anchor" name="49002f92ad6a1c71d7f9148271770b7a"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::SetReadDirectory" ref="49002f92ad6a1c71d7f9148271770b7a" args="(char *dir)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetReadDirectory           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>dir</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the directory before calling <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#1e3b6d38df0786ccf7f938d60e386aae" title="Read in the data file, falling back as needed.">Init()</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="2bd0630d27e20f38de4c753ca68e2282"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::SetEnvironmentVariable" ref="2bd0630d27e20f38de4c753ca68e2282" args="(char *var)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetEnvironmentVariable           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>var</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the environment variable to use before calling <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#1e3b6d38df0786ccf7f938d60e386aae" title="Read in the data file, falling back as needed.">Init()</a>. 
<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="40756214f69d1c40ad70b64ae9fdc08d"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::_init" ref="40756214f69d1c40ad70b64ae9fdc08d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#40756214f69d1c40ad70b64ae9fdc08d">_init</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Whether the data been read already. 
<p>

</div>
</div><p>
<a class="anchor" name="45a08560f2b4885250c586c550f2d7af"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::_dataptr" ref="45a08560f2b4885250c586c550f2d7af" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#45a08560f2b4885250c586c550f2d7af">_dataptr</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Default data table if file is unreadable. 
<p>

</div>
</div><p>
<a class="anchor" name="895aefe990ffe9af66bb5cd4e37d3579"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::_filename" ref="895aefe990ffe9af66bb5cd4e37d3579" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#895aefe990ffe9af66bb5cd4e37d3579">_filename</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
File to search for. 
<p>

</div>
</div><p>
<a class="anchor" name="2c2f62a9907553e5feb1ecef65c6c386"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::_dir" ref="2c2f62a9907553e5feb1ecef65c6c386" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#2c2f62a9907553e5feb1ecef65c6c386">_dir</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Data directory for file if _envvar fails. 
<p>

</div>
</div><p>
<a class="anchor" name="5d93159b6eee0cb302451621106f61c7"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::_subdir" ref="5d93159b6eee0cb302451621106f61c7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#5d93159b6eee0cb302451621106f61c7">_subdir</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Subdirectory (if using environment variable). 
<p>

</div>
</div><p>
<a class="anchor" name="87d06c3aed77fb9e118b337bed557928"></a><!-- doxytag: member="OpenBabel::OBAromaticTyper::_envvar" ref="87d06c3aed77fb9e118b337bed557928" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#87d06c3aed77fb9e118b337bed557928">_envvar</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Environment variable to check first. 
<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="typer_8h-source.shtml">typer.h</a><li><a class="el" href="typer_8cpp.shtml">typer.cpp</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/wiki/">Open Babel</a>, version 2.1.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.sourceforge.net/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Tue Apr 24 18:08:18 2007 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.2.
</div>

</body>
</html>
