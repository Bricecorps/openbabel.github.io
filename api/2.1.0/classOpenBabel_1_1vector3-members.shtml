<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: Member List</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.2 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<h1>vector3 Member List</h1>This is the complete list of members for <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#1eaa5b3b24423c15c8deb71a0c079707">AsArray</a>() const</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#5b2fe218819d898082c29c21cf962572">CanBeNormalized</a>() const</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#b7ad19aad80b487369bcafe789fd8c04">createOrthoVector</a>(vector3 &amp;v) const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#f0bb15d3c00f3ab71314513fa41fa548">distSq</a>(const vector3 &amp;vv) const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#9345053a16ce83e130dc098fddf9af7a">Get</a>(double *c)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#4eb9ee503a7d695dfac88a993256add0">IsApprox</a>(const vector3 &amp;other, const double &amp;precision) const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#80401d480f15e1418a3274a2b2b51649">length</a>() const</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#47f7e7ecf0a38bc7ef50f21d90ba349b">length_2</a>() const</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#8d0a82a515f8373ee3f174a22f775397">normalize</a>()</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#80e5f1c9af1aa63dfa46b7559bae27bc">operator *=</a>(const double &amp;c)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#98ac93c148a83575867a62d9acc909d9">operator *=</a>(const matrix3x3 &amp;)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#54bc009d3ca567251114c2a86c7753ff">operator!=</a>(const vector3 &amp;other) const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#e0541be714a6305dd3295655eea746d9">operator+=</a>(const vector3 &amp;v)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#506884b50b92a33e92029b43f9b75bc9">operator+=</a>(const double *f)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#c4b4980ccea5aa5184928ce40cf1acee">operator-=</a>(const vector3 &amp;v)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#322635480250ba0c08aa47a125eda3dd">operator-=</a>(const double *f)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#b5a7b18eeff279e5d850a9075d09f8a5">operator/=</a>(const double &amp;c)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#d2eee719d3706b71968f894c1179f4bb">operator=</a>(const vector3 &amp;v)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#fc691b83e01d075402e13b5d05646564">operator==</a>(const vector3 &amp;) const</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#c87721ecdee87050a017daffff96b188">operator[]</a>(unsigned int i)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#f2f4c0b08630beda575c1c8697b8fece">randomUnitVector</a>(OBRandom *oeRand=NULL)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#685349dbc9e2d99a19616763811cbfba">Set</a>(const double inX, const double inY, const double inZ)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#bfcb3c965a12bd0385f1fe1db3f7d3ac">Set</a>(const double *c)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#b7cbeb9d9ec3d0d2714733d8bb4596eb">SetX</a>(const double inX)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#385f2320a91b6c182ecb45d16ffc6332">SetY</a>(const double inY)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#d1ac74f918d5ac48cb47426ca9ba2c09">SetZ</a>(const double inZ)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#28d983d20c9b3b395da7854fafae20f2">vector3</a>(const double inX=0.0, const double inY=0.0, const double inZ=0.0)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#be84fe9749e73b1027baddb505fa189a">vector3</a>(const vector3 &amp;v)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#7b1e56edcce2dfec1f65354c4f55703e">x</a>() const</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#3b195b867437acf8de45f48c83e81932">x</a>()</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#9085cf790064f107bc57185b11ab2eee">y</a>() const</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#d927d9808ded1fc49c05ae9e1a3ed2a6">y</a>()</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#89f6c6d834e9fec20840d1754c06016e">z</a>() const</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#2134ad02d68f29e9c7cd87e4cd4c75b8">z</a>()</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline]</code></td></tr>
</table></div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/wiki/">Open Babel</a>, version 2.1.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.sourceforge.net/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Tue Apr 24 18:08:19 2007 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.2.
</div>

</body>
</html>
