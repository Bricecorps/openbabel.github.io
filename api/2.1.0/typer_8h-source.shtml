<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: typer.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.2 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li><a href="classes.shtml"><span>Classes</span></a></li>
    <li class="current"><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="files.shtml"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.shtml"><span>File&nbsp;Members</span></a></li>
  </ul>
</div>
<h1>typer.h</h1><a href="typer_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">typer.h - Open Babel atom and aromaticity typer.</span>
<a name="l00003"></a>00003 <span class="comment"> </span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span>
<a name="l00005"></a>00005 <span class="comment">Some portions Copyright (C) 2001-2005 by Geoffrey R. Hutchison</span>
<a name="l00006"></a>00006 <span class="comment"> </span>
<a name="l00007"></a>00007 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00008"></a>00008 <span class="comment">For more information, see &lt;http://openbabel.sourceforge.net/&gt;</span>
<a name="l00009"></a>00009 <span class="comment"> </span>
<a name="l00010"></a>00010 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00011"></a>00011 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00012"></a>00012 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00013"></a>00013 <span class="comment"> </span>
<a name="l00014"></a>00014 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00015"></a>00015 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00016"></a>00016 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00017"></a>00017 <span class="comment">GNU General Public License for more details.</span>
<a name="l00018"></a>00018 <span class="comment">***********************************************************************/</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="preprocessor">#ifndef OB_TYPER_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#define OB_TYPER_H</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="parsmart_8h.shtml" title="Daylight SMARTS parser.">openbabel/parsmart.h</a>&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;<a class="code" href="data_8h.shtml" title="Global data and resource file parsers.">openbabel/data.h</a>&gt;</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="keyword">namespace </span>OpenBabel
<a name="l00027"></a>00027 {
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="comment">// class introduction in typer.cpp</span>
<a name="l00030"></a><a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml">00030</a> <span class="keyword">class </span>OBAPI OBAtomTyper : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml" title="Base data table class, handles reading data files.">OBGlobalDataBase</a>
<a name="l00031"></a>00031 {
<a name="l00032"></a>00032   <span class="comment">//    int                                                      _rc;</span>
<a name="l00033"></a>00033   std::vector&lt;std::vector&lt;int&gt; &gt;                           _mlist; 
<a name="l00034"></a>00034   std::vector&lt;std::pair&lt;OBSmartsPattern*,int&gt; &gt;            _vinthyb; 
<a name="l00035"></a>00035   std::vector&lt;std::pair&lt;OBSmartsPattern*,int&gt; &gt;            _vimpval; 
<a name="l00036"></a>00036   std::vector&lt;std::pair&lt;OBSmartsPattern*,std::string&gt; &gt;    _vexttyp; 
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 <span class="keyword">public</span>:
<a name="l00039"></a>00039     OBAtomTyper();
<a name="l00040"></a>00040     ~OBAtomTyper();
<a name="l00041"></a>00041 
<a name="l00042"></a>00042     <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);
<a name="l00044"></a><a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml#93721b9b970ca9a8160f7b831ae7e9d4">00044</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetSize()                 { <span class="keywordflow">return</span> _vimpval.size();}
<a name="l00045"></a>00045 
<a name="l00047"></a>00047     <span class="keywordtype">void</span> AssignHyb(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp;);
<a name="l00049"></a>00049     <span class="keywordtype">void</span> AssignTypes(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp;);
<a name="l00052"></a>00052     <span class="keywordtype">void</span> AssignImplicitValence(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp;);
<a name="l00054"></a>00054     <span class="keywordtype">void</span> CorrectAromaticNitrogens(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp;);
<a name="l00055"></a>00055 };
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 <span class="comment">// class introduction in typer.cpp</span>
<a name="l00058"></a><a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml">00058</a> <span class="keyword">class </span>OBAPI OBAromaticTyper : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml" title="Base data table class, handles reading data files.">OBGlobalDataBase</a>
<a name="l00059"></a>00059 {
<a name="l00060"></a>00060     std::vector&lt;bool&gt;             _vpa;   
<a name="l00061"></a>00061     std::vector&lt;bool&gt;             _visit;
<a name="l00062"></a>00062     std::vector&lt;bool&gt;             _root;
<a name="l00063"></a>00063     std::vector&lt;std::vector&lt;int&gt; &gt;     _mlist;
<a name="l00064"></a>00064     std::vector&lt;OBSmartsPattern*&gt; _vsp;   
<a name="l00065"></a>00065     std::vector&lt;std::pair&lt;int,int&gt; &gt;   _verange; 
<a name="l00066"></a>00066     std::vector&lt;std::pair&lt;int,int&gt; &gt;   _velec;   
<a name="l00067"></a>00067 <span class="keyword">public</span>:
<a name="l00068"></a>00068     OBAromaticTyper();
<a name="l00069"></a>00069     ~OBAromaticTyper();
<a name="l00070"></a>00070 
<a name="l00072"></a><a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml#93721b9b970ca9a8160f7b831ae7e9d4">00072</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetSize()                 { <span class="keywordflow">return</span> _vsp.size();}
<a name="l00073"></a>00073 
<a name="l00074"></a>00074     <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);
<a name="l00076"></a>00076     <span class="keywordtype">void</span> AssignAromaticFlags(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00079"></a>00079     <span class="keywordtype">void</span> PropagatePotentialAromatic(<a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a>*);
<a name="l00080"></a>00080     <span class="comment">// Documentation in typer.cpp</span>
<a name="l00081"></a>00081     <span class="keywordtype">void</span> SelectRootAtoms(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;, <span class="keywordtype">bool</span> avoidInnerRingAtoms = <span class="keyword">true</span>);
<a name="l00083"></a>00083     <span class="keywordtype">void</span> ExcludeSmallRing(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00085"></a>00085     <span class="keywordtype">void</span> CheckAromaticity(<a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *root,<span class="keywordtype">int</span> searchDepth);
<a name="l00086"></a>00086     <span class="comment">// Documentation in typer.cpp</span>
<a name="l00087"></a>00087     <span class="keywordtype">bool</span> TraverseCycle(<a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *root, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *atom, <a class="code" href="classOpenBabel_1_1OBBond.shtml" title="Bond class.">OBBond</a> *prev,
<a name="l00088"></a>00088                        std::pair&lt;int,int&gt; &amp;er,<span class="keywordtype">int</span> depth);
<a name="l00089"></a>00089 };
<a name="l00090"></a>00090 
<a name="l00091"></a>00091 } <span class="comment">//namespace OpenBabel</span>
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 <span class="preprocessor">#endif // OB_TYPER_H</span>
<a name="l00094"></a>00094 <span class="preprocessor"></span>
</pre></div></div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/wiki/">Open Babel</a>, version 2.1.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.sourceforge.net/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Tue Apr 24 18:08:06 2007 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.2.
</div>

</body>
</html>
