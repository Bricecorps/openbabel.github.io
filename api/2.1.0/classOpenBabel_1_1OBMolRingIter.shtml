<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBMolRingIter Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.2 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul>
</div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a></div>
<h1>OBMolRingIter Class Reference</h1><!-- doxytag: class="OpenBabel::OBMolRingIter" -->Iterate over all rings in an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="obiter_8h-source.shtml">openbabel/obiter.h</a>&gt;</code>
<p>
<a href="classOpenBabel_1_1OBMolRingIter-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#4201ae784613cc343f4c85aff073f8b6">OBMolRingIter</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#15547553c4072355819acbcf350dde77">OBMolRingIter</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#22b44f56d902ee546801e1ed709177a7">OBMolRingIter</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#5fbba8ac448491d75c01dc700ab9abbb">OBMolRingIter</a> (const <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;ri)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#1d382621222fab3106bbf62d88d12c16">~OBMolRingIter</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a55f07012153c6567722fd73b52c7ae8">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;ri)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#67b76affb3b5d35fa419ac234144038b">operator bool</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#468d7175593dfa1d0bf6b21d17102611">operator++</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#844ba4085c67152f80a56529ff358a46">operator++</a> (int)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#f19aafb1ac310e24268489943d2b396c">operator-&gt;</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#3c1e4cec708267f47c3f68b1485feaa6">operator *</a> () const</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Iterate over all rings in an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>. 
<p>
<dl class="since" compact><dt><b>Since:</b></dt><dd>version 2.1</dd></dl>
To facilitate iteration through all rings in a molecule, without resorting to ring indexes (which may change in the future) a variety of iterator classes and methods are provided. One word of warning is that these iterator methods automatically call <a class="el" href="classOpenBabel_1_1OBMol.shtml#d4e3eab0d027bd8e503d02e7261ca477" title="Find Smallest Set of Smallest Rings (see OBRing class for more details).">OBMol::FindSSSR()</a> which may involve a significant performance hit on large molecules.<p>
Calling iterator classes has been made significantly easier by a series of macros in the <a class="el" href="obiter_8h.shtml" title="STL-style iterators for Open Babel.">obiter.h</a> header file:<p>
<div class="fragment"><pre class="fragment">      \#define <a class="code" href="obiter_8h.shtml#0297c6de75de6131cc5289475787841a">FOR_RINGS_OF_MOL</a>(r,m)     for( <a class="code" href="classOpenBabel_1_1OBMolRingIter.shtml#4201ae784613cc343f4c85aff073f8b6">OBMolRingIter</a>     r(m); r; ++r )
</pre></div><p>
Here is an example: <div class="fragment"><pre class="fragment"><span class="preprocessor">      #include &lt;<a class="code" href="obiter_8h.shtml" title="STL-style iterators for Open Babel.">openbabel/obiter.h</a>&gt;</span>
<span class="preprocessor">      #include &lt;<a class="code" href="mol_8h.shtml" title="Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header...">openbabel/mol.h</a>&gt;</span>

      OBMol mol;
      <a class="code" href="obiter_8h.shtml#0297c6de75de6131cc5289475787841a">FOR_RINGS_OF_MOL</a>(r, mol)
      {
         <span class="comment">// The variable r behaves like OBRing* when used with -&gt; and * but</span>
         <span class="comment">// but needs to be explicitly converted when appearing as a parameter</span>
         <span class="comment">// in a function call - use &amp;*r</span>

      }
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="4201ae784613cc343f4c85aff073f8b6"></a><!-- doxytag: member="OpenBabel::OBMolRingIter::OBMolRingIter" ref="4201ae784613cc343f4c85aff073f8b6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="15547553c4072355819acbcf350dde77"></a><!-- doxytag: member="OpenBabel::OBMolRingIter::OBMolRingIter" ref="15547553c4072355819acbcf350dde77" args="(OBMol *mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a>           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="22b44f56d902ee546801e1ed709177a7"></a><!-- doxytag: member="OpenBabel::OBMolRingIter::OBMolRingIter" ref="22b44f56d902ee546801e1ed709177a7" args="(OBMol &amp;mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a>           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="5fbba8ac448491d75c01dc700ab9abbb"></a><!-- doxytag: member="OpenBabel::OBMolRingIter::OBMolRingIter" ref="5fbba8ac448491d75c01dc700ab9abbb" args="(const OBMolRingIter &amp;ri)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a>           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>ri</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="1d382621222fab3106bbf62d88d12c16"></a><!-- doxytag: member="OpenBabel::OBMolRingIter::~OBMolRingIter" ref="1d382621222fab3106bbf62d88d12c16" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="a55f07012153c6567722fd73b52c7ae8"></a><!-- doxytag: member="OpenBabel::OBMolRingIter::operator=" ref="a55f07012153c6567722fd73b52c7ae8" args="(const OBMolRingIter &amp;ri)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp; operator=           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>ri</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="67b76affb3b5d35fa419ac234144038b"></a><!-- doxytag: member="OpenBabel::OBMolRingIter::operator bool" ref="67b76affb3b5d35fa419ac234144038b" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">operator bool           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether the iterator can advance (i.e., there are more rings) </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="468d7175593dfa1d0bf6b21d17102611"></a><!-- doxytag: member="OpenBabel::OBMolRingIter::operator++" ref="468d7175593dfa1d0bf6b21d17102611" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp; operator++           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Preincrement -- advance to the next ring (if any) and return. 
<p>

</div>
</div><p>
<a class="anchor" name="844ba4085c67152f80a56529ff358a46"></a><!-- doxytag: member="OpenBabel::OBMolRingIter::operator++" ref="844ba4085c67152f80a56529ff358a46" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> operator++           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Postincrement -- return the current state and advance to the next ring. 
<p>

</div>
</div><p>
<a class="anchor" name="f19aafb1ac310e24268489943d2b396c"></a><!-- doxytag: member="OpenBabel::OBMolRingIter::operator-&gt;" ref="f19aafb1ac310e24268489943d2b396c" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>* operator-&gt;           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A pointer to the current ring (if any) </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="3c1e4cec708267f47c3f68b1485feaa6"></a><!-- doxytag: member="OpenBabel::OBMolRingIter::operator *" ref="3c1e4cec708267f47c3f68b1485feaa6" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>&amp; operator *           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A reference to the current ring (if any) </dd></dl>

<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="obiter_8h-source.shtml">obiter.h</a><li><a class="el" href="obiter_8cpp.shtml">obiter.cpp</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/wiki/">Open Babel</a>, version 2.1.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.sourceforge.net/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Tue Apr 24 18:08:17 2007 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.2.
</div>

</body>
</html>
