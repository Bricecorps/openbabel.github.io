<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBNodeBase Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="dirs.shtml"><span>Directories</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a></div>
<h1>OBNodeBase Class Reference</h1><!-- doxytag: class="OpenBabel::OBNodeBase" --><!-- doxytag: inherits="OpenBabel::OBBase" -->Node Base Class.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="base_8h-source.shtml">base.h</a>&gt;</code>
<p>
Inheritance diagram for OBNodeBase:<p><center><img src="classOpenBabel_1_1OBNodeBase__inherit__graph.png" border="0" usemap="#OBNodeBase__inherit__map" alt="Inheritance graph"></center>
<map name="OBNodeBase__inherit__map">
<area href="classOpenBabel_1_1OBAtom.shtml" shape="rect" coords="24,157,96,184" alt="">
<area href="classOpenBabel_1_1OBBase.shtml" shape="rect" coords="24,8,96,34" alt="">
</map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center><a href="classOpenBabel_1_1OBNodeBase-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#8b24e99e94c5bd5e19f4600edd2952f9">OBNodeBase</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#8b24e99e94c5bd5e19f4600edd2952f9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#10d76187fda772eb7aa8c617102ffb72">~OBNodeBase</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor.  <a href="#10d76187fda772eb7aa8c617102ffb72"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#8e7a42e07b55f9e486bafbbb968bc5e1">GetIdx</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b994a975e39f5c62288f4f972b6f90c9">SetIdx</a> (int idx)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set my unique node number.  <a href="#b994a975e39f5c62288f4f972b6f90c9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#205872bb6f0f1bc7ba69b7264025d4fe">GetParent</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b3a51868ba5353c3272adc612d2105a5">SetParent</a> (<a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set my parent graph.  <a href="#b3a51868ba5353c3272adc612d2105a5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#e5a35d614adf46bcd523bf62de9c81c0">AddEdge</a> (<a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> *b)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Add an edge. Assumes this node is an endpoint of <em>b</em>.  <a href="#e5a35d614adf46bcd523bf62de9c81c0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#15a0f5a268fc6b9105528741e5ab2f4c">GetValence</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">How many edges?  <a href="#15a0f5a268fc6b9105528741e5ab2f4c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#2b2654433045d2c2e81a53c25ad99dc2">BeginNbr</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Iterate over my edges, returning my connected nodes.  <a href="#2b2654433045d2c2e81a53c25ad99dc2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#24f4b273e84be464ec0fa7ea3434f21b">NextNbr</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#a4835a0a7276bc7d5480d02d7b3c74cf">Begin</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Iterate over my edges, returning the edges.  <a href="#a4835a0a7276bc7d5480d02d7b3c74cf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#4b9db8b4ae24b4fddd1991bea5c31479">Next</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#489a19494cf46cb8d21b029568df1b75">IsConnected</a> (<a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is <em>OBNodeBase*</em> a beginning or end of some edge of mine?  <a href="#489a19494cf46cb8d21b029568df1b75"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#035ad93c9b173681b6a1829020ee11ca">Error</a> (int f)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Used to signal erroneously calling some of the nonfunctional members.  <a href="#035ad93c9b173681b6a1829020ee11ca"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#85efd9cd89e1611737080229ec6cc38b">DoTransformations</a> (const std::map&lt; std::string, std::string &gt; *pOptions)</td></tr>

<tr><td colspan="2"><div class="groupHeader">Nonfunctional members</div></td></tr>
<tr><td colspan="2"><div class="groupText">Nonfunctional or unused members of <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OpenBabel::OBNodeBase</a> are to be added by a derived class (e.g., <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OpenBabel::OBAtom</a>) <br><br></div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#4bf501ba9df18879fa9bc371299f014f">GetFormalCharge</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#6141b303b81c1c161ebc740dbdddd5af">ExplicitHydrogenCount</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#49e6bbcbaad4751595a237ccf4a726f7">ImplicitHydrogenCount</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#c510917e32915fe4fcc1b5eec6da59b8">GetImplicitValence</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#3559c2d9e22d0a6614c73662cd872f8b">GetHvyValence</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#84c924914199f9814c2d456b827398a9">KBOSum</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9de09505cf4b48dac1bcee09489d2cfa">GetHyb</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#f92192d67101c6e3c6a28e2c773a38ea">MemberOfRingCount</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b069256061518868c3414ee9adce4060">GetAtomicNum</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#10bf6a8a013d39a410b9103b958eac71">SetMatch</a> (<a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#dd9c2a84d6715cf67f8ff53089d0dbc4">SetAromatic</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#18e68974cbaa19171dfe33026ba8f7b4">IsInRingSize</a> (int) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#c2162768d8f994785a10b3db8f948e2f">IsAromatic</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#a5d38b127e602f58df9d62a21b8cc083">IsInRing</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#675a2d5448e71b736a5e5141911c4250">Eval</a> (<a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *) const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9c4ebfa43ec90acf76520e6227d1a067">GetMatch</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#6368d7673f23186649b2969ade3661d7">Visit</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Used internally by graph traversal algorithms.  <a href="#6368d7673f23186649b2969ade3661d7"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned short int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#891ad63852015fb2ddaed4d177e4a104">_idx</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">What is my unique node index? <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#8e7a42e07b55f9e486bafbbb968bc5e1">GetIdx()</a>, <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b994a975e39f5c62288f4f972b6f90c9">SetIdx(int idx)</a>.  <a href="#891ad63852015fb2ddaed4d177e4a104"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9e9a06b4e445a3cbe5d4e09695620dcb">_parent</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">To which graph do I belong? <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#205872bb6f0f1bc7ba69b7264025d4fe">GetParent()</a>, <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b3a51868ba5353c3272adc612d2105a5">SetParent(OBGraphBase*)</a>.  <a href="#9e9a06b4e445a3cbe5d4e09695620dcb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9c8e30c37e33bb11c5dade3984d71200">_vbond</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">What edges or bonds do I have?  <a href="#9c8e30c37e33bb11c5dade3984d71200"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Node Base Class. 
<p>
The base class for nodes (e.g. atoms) in a graph-theoretical representation. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="8b24e99e94c5bd5e19f4600edd2952f9"></a><!-- doxytag: member="OpenBabel::OBNodeBase::OBNodeBase" ref="8b24e99e94c5bd5e19f4600edd2952f9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>

</div>
</div><p>
<a class="anchor" name="10d76187fda772eb7aa8c617102ffb72"></a><!-- doxytag: member="OpenBabel::OBNodeBase::~OBNodeBase" ref="10d76187fda772eb7aa8c617102ffb72" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="8e7a42e07b55f9e486bafbbb968bc5e1"></a><!-- doxytag: member="OpenBabel::OBNodeBase::GetIdx" ref="8e7a42e07b55f9e486bafbbb968bc5e1" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int GetIdx           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#44b77545e83209582e42f375c8f40474">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="b994a975e39f5c62288f4f972b6f90c9"></a><!-- doxytag: member="OpenBabel::OBNodeBase::SetIdx" ref="b994a975e39f5c62288f4f972b6f90c9" args="(int idx)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetIdx           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>idx</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set my unique node number. 
<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#b994a975e39f5c62288f4f972b6f90c9">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="205872bb6f0f1bc7ba69b7264025d4fe"></a><!-- doxytag: member="OpenBabel::OBNodeBase::GetParent" ref="205872bb6f0f1bc7ba69b7264025d4fe" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a>* GetParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b3a51868ba5353c3272adc612d2105a5"></a><!-- doxytag: member="OpenBabel::OBNodeBase::SetParent" ref="b3a51868ba5353c3272adc612d2105a5" args="(OBGraphBase *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetParent           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set my parent graph. 
<p>

</div>
</div><p>
<a class="anchor" name="e5a35d614adf46bcd523bf62de9c81c0"></a><!-- doxytag: member="OpenBabel::OBNodeBase::AddEdge" ref="e5a35d614adf46bcd523bf62de9c81c0" args="(OBEdgeBase *b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddEdge           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> *&nbsp;</td>
          <td class="paramname"> <em>b</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Add an edge. Assumes this node is an endpoint of <em>b</em>. 
<p>

</div>
</div><p>
<a class="anchor" name="15a0f5a268fc6b9105528741e5ab2f4c"></a><!-- doxytag: member="OpenBabel::OBNodeBase::GetValence" ref="15a0f5a268fc6b9105528741e5ab2f4c" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int GetValence           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
How many edges? 
<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#7bb9aaaed179e592414edfa0331788f6">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="2b2654433045d2c2e81a53c25ad99dc2"></a><!-- doxytag: member="OpenBabel::OBNodeBase::BeginNbr" ref="2b2654433045d2c2e81a53c25ad99dc2" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> * BeginNbr           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Iterate over my edges, returning my connected nodes. 
<p>

</div>
</div><p>
<a class="anchor" name="24f4b273e84be464ec0fa7ea3434f21b"></a><!-- doxytag: member="OpenBabel::OBNodeBase::NextNbr" ref="24f4b273e84be464ec0fa7ea3434f21b" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> * NextNbr           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a4835a0a7276bc7d5480d02d7b3c74cf"></a><!-- doxytag: member="OpenBabel::OBNodeBase::Begin" ref="a4835a0a7276bc7d5480d02d7b3c74cf" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a>* Begin           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Iterate over my edges, returning the edges. 
<p>

</div>
</div><p>
<a class="anchor" name="4b9db8b4ae24b4fddd1991bea5c31479"></a><!-- doxytag: member="OpenBabel::OBNodeBase::Next" ref="4b9db8b4ae24b4fddd1991bea5c31479" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a>* Next           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="489a19494cf46cb8d21b029568df1b75"></a><!-- doxytag: member="OpenBabel::OBNodeBase::IsConnected" ref="489a19494cf46cb8d21b029568df1b75" args="(OBNodeBase *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConnected           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is <em>OBNodeBase*</em> a beginning or end of some edge of mine? 
<p>

</div>
</div><p>
<a class="anchor" name="035ad93c9b173681b6a1829020ee11ca"></a><!-- doxytag: member="OpenBabel::OBNodeBase::Error" ref="035ad93c9b173681b6a1829020ee11ca" args="(int f)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Error           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>f</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Used to signal erroneously calling some of the nonfunctional members. 
<p>

</div>
</div><p>
<a class="anchor" name="4bf501ba9df18879fa9bc371299f014f"></a><!-- doxytag: member="OpenBabel::OBNodeBase::GetFormalCharge" ref="4bf501ba9df18879fa9bc371299f014f" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int GetFormalCharge           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#34d5bb9535dadccfdaaae8b98dab2078">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="6141b303b81c1c161ebc740dbdddd5af"></a><!-- doxytag: member="OpenBabel::OBNodeBase::ExplicitHydrogenCount" ref="6141b303b81c1c161ebc740dbdddd5af" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int ExplicitHydrogenCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a753f5025d80e39518cc50c64c6934d0">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="49e6bbcbaad4751595a237ccf4a726f7"></a><!-- doxytag: member="OpenBabel::OBNodeBase::ImplicitHydrogenCount" ref="49e6bbcbaad4751595a237ccf4a726f7" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int ImplicitHydrogenCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#7f16ab619578cd847cd1fa024f4ee708">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="c510917e32915fe4fcc1b5eec6da59b8"></a><!-- doxytag: member="OpenBabel::OBNodeBase::GetImplicitValence" ref="c510917e32915fe4fcc1b5eec6da59b8" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int GetImplicitValence           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#d9f36aa26768975a23a6c7b819e79cc0">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="3559c2d9e22d0a6614c73662cd872f8b"></a><!-- doxytag: member="OpenBabel::OBNodeBase::GetHvyValence" ref="3559c2d9e22d0a6614c73662cd872f8b" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int GetHvyValence           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a7fc4fb37c3e28286d47d36b812303d9">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="84c924914199f9814c2d456b827398a9"></a><!-- doxytag: member="OpenBabel::OBNodeBase::KBOSum" ref="84c924914199f9814c2d456b827398a9" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int KBOSum           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#c724d08f837518953468665b9dc5ab23">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="9de09505cf4b48dac1bcee09489d2cfa"></a><!-- doxytag: member="OpenBabel::OBNodeBase::GetHyb" ref="9de09505cf4b48dac1bcee09489d2cfa" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int GetHyb           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#5cfb24ccc82420ec902371aafa91d67e">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="f92192d67101c6e3c6a28e2c773a38ea"></a><!-- doxytag: member="OpenBabel::OBNodeBase::MemberOfRingCount" ref="f92192d67101c6e3c6a28e2c773a38ea" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int MemberOfRingCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ef9a302705cda0731e77f82f3b1483a0">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="b069256061518868c3414ee9adce4060"></a><!-- doxytag: member="OpenBabel::OBNodeBase::GetAtomicNum" ref="b069256061518868c3414ee9adce4060" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int GetAtomicNum           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#90250b249ffa0fcb4daa83bde1ff4614">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="10bf6a8a013d39a410b9103b958eac71"></a><!-- doxytag: member="OpenBabel::OBNodeBase::SetMatch" ref="10bf6a8a013d39a410b9103b958eac71" args="(OBNodeBase *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetMatch           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="dd9c2a84d6715cf67f8ff53089d0dbc4"></a><!-- doxytag: member="OpenBabel::OBNodeBase::SetAromatic" ref="dd9c2a84d6715cf67f8ff53089d0dbc4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetAromatic           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#3d29498c15007d9b6729e26784f23a5b">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="18e68974cbaa19171dfe33026ba8f7b4"></a><!-- doxytag: member="OpenBabel::OBNodeBase::IsInRingSize" ref="18e68974cbaa19171dfe33026ba8f7b4" args="(int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool IsInRingSize           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#9ca260c28f84147e45c377cdb2254144">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="c2162768d8f994785a10b3db8f948e2f"></a><!-- doxytag: member="OpenBabel::OBNodeBase::IsAromatic" ref="c2162768d8f994785a10b3db8f948e2f" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool IsAromatic           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#eda62da8823b248654404fb15f314a66">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="a5d38b127e602f58df9d62a21b8cc083"></a><!-- doxytag: member="OpenBabel::OBNodeBase::IsInRing" ref="a5d38b127e602f58df9d62a21b8cc083" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool IsInRing           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#e016e13adf41d7c12a3d22147f0b870e">OBAtom</a>.
</div>
</div><p>
<a class="anchor" name="675a2d5448e71b736a5e5141911c4250"></a><!-- doxytag: member="OpenBabel::OBNodeBase::Eval" ref="675a2d5448e71b736a5e5141911c4250" args="(OBNodeBase *) const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Eval           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="9c4ebfa43ec90acf76520e6227d1a067"></a><!-- doxytag: member="OpenBabel::OBNodeBase::GetMatch" ref="9c4ebfa43ec90acf76520e6227d1a067" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a>* GetMatch           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="85efd9cd89e1611737080229ec6cc38b"></a><!-- doxytag: member="OpenBabel::OBNodeBase::DoTransformations" ref="85efd9cd89e1611737080229ec6cc38b" args="(const std::map&lt; std::string, std::string &gt; *pOptions)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* DoTransformations           </td>
          <td>(</td>
          <td class="paramtype">const std::map&lt; std::string, std::string &gt; *&nbsp;</td>
          <td class="paramname"> <em>pOptions</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#035de6b4d4b6834f08d08940911f645d">OBMol</a>.
</div>
</div><p>
<a class="anchor" name="6bb6ed5c064e3957d8dd03aba51e61f7"></a><!-- doxytag: member="OpenBabel::OBNodeBase::ClassDescription" ref="6bb6ed5c064e3957d8dd03aba51e61f7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static const char* ClassDescription           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, static, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#b72bba66cc9e40fb3b657a30d87bbe6d">OBMol</a>.
</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="891ad63852015fb2ddaed4d177e4a104"></a><!-- doxytag: member="OpenBabel::OBNodeBase::_idx" ref="891ad63852015fb2ddaed4d177e4a104" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short int <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#891ad63852015fb2ddaed4d177e4a104">_idx</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
What is my unique node index? <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#8e7a42e07b55f9e486bafbbb968bc5e1">GetIdx()</a>, <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b994a975e39f5c62288f4f972b6f90c9">SetIdx(int idx)</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="9e9a06b4e445a3cbe5d4e09695620dcb"></a><!-- doxytag: member="OpenBabel::OBNodeBase::_parent" ref="9e9a06b4e445a3cbe5d4e09695620dcb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a>* <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9e9a06b4e445a3cbe5d4e09695620dcb">_parent</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
To which graph do I belong? <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#205872bb6f0f1bc7ba69b7264025d4fe">GetParent()</a>, <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b3a51868ba5353c3272adc612d2105a5">SetParent(OBGraphBase*)</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="9c8e30c37e33bb11c5dade3984d71200"></a><!-- doxytag: member="OpenBabel::OBNodeBase::_vbond" ref="9c8e30c37e33bb11c5dade3984d71200" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a>*&gt; <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9c8e30c37e33bb11c5dade3984d71200">_vbond</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
What edges or bonds do I have? 
<p>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#e5a35d614adf46bcd523bf62de9c81c0">AddEdge()</a>, <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#15a0f5a268fc6b9105528741e5ab2f4c">GetValence()</a>, This node is assumed to be one of the edge endpoints. </dd></dl>

</div>
</div><p>
<a class="anchor" name="6368d7673f23186649b2969ade3661d7"></a><!-- doxytag: member="OpenBabel::OBNodeBase::Visit" ref="6368d7673f23186649b2969ade3661d7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#6368d7673f23186649b2969ade3661d7">Visit</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Used internally by graph traversal algorithms. 
<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="base_8h-source.shtml">base.h</a><li><a class="el" href="base_8cpp.shtml">base.cpp</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/">Open Babel</a>, version 2.0.2.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2005, the <a href="http://openbabel.sourceforge.net/THANKS.shtml">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Nov 30 20:18:03 2006 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1.
</div>

</body>
</html>
