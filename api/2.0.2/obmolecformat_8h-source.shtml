<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: obmolecformat.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li><a href="classes.shtml"><span>Classes</span></a></li>
    <li id="current"><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="dirs.shtml"><span>Directories</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.shtml"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.shtml"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="dir_c2f68d9a8fd140e5f30854dfa045b294.shtml">src</a></div>
<h1>obmolecformat.h</h1><a href="obmolecformat_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">obmolecformat.h - Subclass of OBFormat for conversion of OBMol.</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 2005 Chris Morley</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00007"></a>00007 <span class="comment">For more information, see &lt;http://openbabel.sourceforge.net/&gt;</span>
<a name="l00008"></a>00008 <span class="comment"></span>
<a name="l00009"></a>00009 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00010"></a>00010 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00011"></a>00011 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00012"></a>00012 <span class="comment"></span>
<a name="l00013"></a>00013 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00014"></a>00014 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00015"></a>00015 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00016"></a>00016 <span class="comment">GNU General Public License for more details.</span>
<a name="l00017"></a>00017 <span class="comment">***********************************************************************/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#ifndef OB_MOLECULEFORMAT_H</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span><span class="preprocessor">#define OB_MOLECULEFORMAT_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span>
<a name="l00022"></a>00022 <span class="preprocessor">#include "<a class="code" href="mol_8h.shtml">mol.h</a>"</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include "<a class="code" href="obconversion_8h.shtml">obconversion.h</a>"</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="keyword">namespace </span>OpenBabel {
<a name="l00026"></a>00026 
<a name="l00034"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml">00034</a> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml">OBMoleculeFormat</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a>
<a name="l00035"></a>00035 {
<a name="l00036"></a>00036 <span class="keyword">public</span>:
<a name="l00037"></a>00037 
<a name="l00038"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#73a3969d77031276422cbeb5901ea05a">00038</a>         <a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#73a3969d77031276422cbeb5901ea05a">OBMoleculeFormat</a>()
<a name="l00039"></a>00039         {
<a name="l00040"></a>00040                 <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"b"</span>, <span class="keyword">this</span>, 0, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116291d3d898fa3e1258eef693d56d600d7">OBConversion::INOPTIONS</a>);
<a name="l00041"></a>00041                 <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"s"</span>, <span class="keyword">this</span>, 0, <a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116291d3d898fa3e1258eef693d56d600d7">OBConversion::INOPTIONS</a>);
<a name="l00042"></a>00042                 <span class="comment">//The follow are OBMol options, which should not be in OBConversion.</span>
<a name="l00043"></a>00043                 <span class="comment">//But here isn't entirely appropriate either, since could have</span>
<a name="l00044"></a>00044                 <span class="comment">//OBMol formats loaded but none of them derived from this class.</span>
<a name="l00045"></a>00045                 <span class="comment">//However, this possibility is remote.</span>
<a name="l00046"></a>00046                 <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"s"</span>, NULL, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00047"></a>00047                 <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"v"</span>, NULL, 1,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00048"></a>00048                 <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"h"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00049"></a>00049                 <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"d"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00050"></a>00050                 <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"b"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00051"></a>00051                 <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"c"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00052"></a>00052                 <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"p"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>); 
<a name="l00053"></a>00053                 <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"t"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00054"></a>00054                 <a class="code" href="classOpenBabel_1_1OBConversion.shtml#6a45eddab233711eb4e432ed5657358f">OBConversion::RegisterOptionParam</a>(<span class="stringliteral">"j"</span>, NULL, 0,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>);
<a name="l00055"></a>00055         };
<a name="l00056"></a>00056 
<a name="l00058"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#9acd362b27e30c19a2c870ca71592723">00058</a>         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#9acd362b27e30c19a2c870ca71592723">ReadChemObject</a>(<a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a>* pConv)
<a name="l00059"></a>00059         {
<a name="l00060"></a>00060           std::istream &amp;ifs = *pConv-&gt;<a class="code" href="classOpenBabel_1_1OBConversion.shtml#3d20fbc61e06b34c849384597ba8e0cc">GetInStream</a>();
<a name="l00061"></a>00061           <span class="keywordflow">if</span> (ifs.peek() == EOF || !ifs.good())
<a name="l00062"></a>00062             <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00063"></a>00063 
<a name="l00064"></a>00064                 <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* pmol;
<a name="l00065"></a>00065 
<a name="l00066"></a>00066                     std::string auditMsg = <span class="stringliteral">"OpenBabel::Read molecule "</span>;
<a name="l00067"></a>00067                     std::string description(<a class="code" href="classOpenBabel_1_1OBFormat.shtml#b87525f269e7819d8462f450d30d56a7">Description</a>());
<a name="l00068"></a>00068                     auditMsg += description.substr(0,description.find(<span class="charliteral">'\n'</span>));
<a name="l00069"></a>00069                     <a class="code" href="namespaceOpenBabel.shtml#394eef44b3dd6a9174067715712c2d16">obErrorLog</a>.<a class="code" href="classOpenBabel_1_1OBMessageHandler.shtml#d49e4137a5874763ccaef154a0cdab30">ThrowError</a>(__FUNCTION__,
<a name="l00070"></a>00070                                           auditMsg,
<a name="l00071"></a>00071                                           <a class="code" href="namespaceOpenBabel.shtml#cf195409ac7024002db5c178f20862d9fca370a4ce993c0a266c7d120c3a6310">obAuditMsg</a>);
<a name="l00072"></a>00072 
<a name="l00073"></a>00073                 <span class="comment">//With j option, reuse pmol except for the first mol</span>
<a name="l00074"></a>00074                 <span class="keywordflow">if</span>(!pConv-&gt;<a class="code" href="classOpenBabel_1_1OBConversion.shtml#b3d2674da23d09868ffedf551abbce0c">IsOption</a>(<span class="stringliteral">"j"</span>,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>) || pConv-&gt;<a class="code" href="classOpenBabel_1_1OBConversion.shtml#f5f16d80b577c580920f0c5b8abd5973">IsFirstInput</a>())
<a name="l00075"></a>00075                         pmol = <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>;
<a name="l00076"></a>00076                 
<a name="l00077"></a>00077                 <span class="keywordtype">bool</span> ret=<a class="code" href="classOpenBabel_1_1OBFormat.shtml#1e309febfaef70cc3c8d98afc1540931">ReadMolecule</a>(pmol,pConv);
<a name="l00078"></a>00078                 <span class="keywordflow">if</span>(ret &amp;&amp; pmol-&gt;<a class="code" href="classOpenBabel_1_1OBMol.shtml#2f0695eb7d6ff6321032d88655ae8d25">NumAtoms</a>() &gt; 0) <span class="comment">//Do transformation and return molecule</span>
<a name="l00079"></a>00079                         pConv-&gt;<a class="code" href="classOpenBabel_1_1OBConversion.shtml#342df96ba3cd8751e19758939dbef2f5">AddChemObject</a>(pmol-&gt;<a class="code" href="classOpenBabel_1_1OBMol.shtml#035de6b4d4b6834f08d08940911f645d">DoTransformations</a>(pConv-&gt;<a class="code" href="classOpenBabel_1_1OBConversion.shtml#7da66ef30fd0af867e9d3bd0df15f4a2">GetOptions</a>(<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>)));
<a name="l00080"></a>00080                 <span class="keywordflow">else</span>
<a name="l00081"></a>00081                         pConv-&gt;<a class="code" href="classOpenBabel_1_1OBConversion.shtml#342df96ba3cd8751e19758939dbef2f5">AddChemObject</a>(NULL);
<a name="l00082"></a>00082 
<a name="l00083"></a>00083                 <span class="keywordflow">return</span> ret;
<a name="l00084"></a>00084         };
<a name="l00085"></a>00085         
<a name="l00086"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#39c2aaf250dde6e85d05ff9357d8b003">00086</a>         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#39c2aaf250dde6e85d05ff9357d8b003">WriteChemObject</a>(<a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a>* pConv)
<a name="l00087"></a>00087         {
<a name="l00088"></a>00088                 <span class="comment">//Retrieve the target OBMol</span>
<a name="l00089"></a>00089                 <a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* pOb = pConv-&gt;<a class="code" href="classOpenBabel_1_1OBConversion.shtml#17bfbe7570517993bcfcb1916bd437d0">GetChemObject</a>();
<a name="l00090"></a>00090                 <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* pmol = dynamic_cast&lt;OBMol*&gt; (pOb);
<a name="l00091"></a>00091                 <span class="keywordtype">bool</span> ret=<span class="keyword">false</span>;
<a name="l00092"></a>00092                 <span class="keywordflow">if</span>(pmol)
<a name="l00093"></a>00093                 {       
<a name="l00094"></a>00094                         <span class="keywordflow">if</span>(pmol-&gt;<a class="code" href="classOpenBabel_1_1OBMol.shtml#2f0695eb7d6ff6321032d88655ae8d25">NumAtoms</a>()==0)
<a name="l00095"></a>00095                         {
<a name="l00096"></a>00096                                 std::string auditMsg = <span class="stringliteral">"OpenBabel::Molecule "</span>;
<a name="l00097"></a>00097                                 auditMsg += pmol-&gt;<a class="code" href="classOpenBabel_1_1OBMol.shtml#d4281d49a1f2b0228e4fdaff01762375">GetTitle</a>();
<a name="l00098"></a>00098                                 auditMsg += <span class="stringliteral">" has 0 atoms"</span>;
<a name="l00099"></a>00099                                 <a class="code" href="namespaceOpenBabel.shtml#394eef44b3dd6a9174067715712c2d16">obErrorLog</a>.<a class="code" href="classOpenBabel_1_1OBMessageHandler.shtml#d49e4137a5874763ccaef154a0cdab30">ThrowError</a>(__FUNCTION__,
<a name="l00100"></a>00100                                                 auditMsg,
<a name="l00101"></a>00101                                                 <a class="code" href="namespaceOpenBabel.shtml#cf195409ac7024002db5c178f20862d98239e6e8daa5c812be192e6447979814">obInfo</a>);
<a name="l00102"></a>00102                         }
<a name="l00103"></a>00103                         ret=<span class="keyword">true</span>;
<a name="l00104"></a>00104 
<a name="l00105"></a>00105                         std::string auditMsg = <span class="stringliteral">"OpenBabel::Write molecule "</span>;
<a name="l00106"></a>00106                         std::string description(<a class="code" href="classOpenBabel_1_1OBFormat.shtml#b87525f269e7819d8462f450d30d56a7">Description</a>());
<a name="l00107"></a>00107                         auditMsg += description.substr(0,description.find(<span class="charliteral">'\n'</span>));
<a name="l00108"></a>00108                         <a class="code" href="namespaceOpenBabel.shtml#394eef44b3dd6a9174067715712c2d16">obErrorLog</a>.<a class="code" href="classOpenBabel_1_1OBMessageHandler.shtml#d49e4137a5874763ccaef154a0cdab30">ThrowError</a>(__FUNCTION__,
<a name="l00109"></a>00109                                               auditMsg,
<a name="l00110"></a>00110                                               <a class="code" href="namespaceOpenBabel.shtml#cf195409ac7024002db5c178f20862d9fca370a4ce993c0a266c7d120c3a6310">obAuditMsg</a>);
<a name="l00111"></a>00111 
<a name="l00112"></a>00112                         <span class="keywordflow">if</span>(!pConv-&gt;<a class="code" href="classOpenBabel_1_1OBConversion.shtml#b3d2674da23d09868ffedf551abbce0c">IsOption</a>(<span class="stringliteral">"j"</span>,<a class="code" href="classOpenBabel_1_1OBConversion.shtml#a5c5a0aac29d9e705d9b7b7b8aeb8116cfa24b0443c8420ac7fdf5eb009352b6">OBConversion::GENOPTIONS</a>) || pConv-&gt;<a class="code" href="classOpenBabel_1_1OBConversion.shtml#0cc38e7988805424c15d68f5444a2a5d">IsLast</a>()) <span class="comment">//With j option, output only at end</span>
<a name="l00113"></a>00113                         {
<a name="l00114"></a>00114                                 ret=<a class="code" href="classOpenBabel_1_1OBFormat.shtml#663171ec9788e2d1621d374848b3888b">WriteMolecule</a>(pmol,pConv);
<a name="l00115"></a>00115                                 <span class="keyword">delete</span> pOb;
<a name="l00116"></a>00116                         }
<a name="l00117"></a>00117                 }
<a name="l00118"></a>00118                 <span class="keywordflow">return</span> ret;
<a name="l00119"></a>00119         };
<a name="l00120"></a>00120 
<a name="l00121"></a><a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#54e576034bd51c66256aa6a98f81d644">00121</a>         <span class="keyword">const</span> std::type_info&amp; <a class="code" href="classOpenBabel_1_1OBMoleculeFormat.shtml#54e576034bd51c66256aa6a98f81d644">GetType</a>()
<a name="l00122"></a>00122         {
<a name="l00123"></a>00123                 <span class="keywordflow">return</span> <span class="keyword">typeid</span>(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>*);
<a name="l00124"></a>00124         };
<a name="l00125"></a>00125 
<a name="l00126"></a>00126 };
<a name="l00127"></a>00127 
<a name="l00128"></a>00128 }
<a name="l00129"></a>00129 <span class="preprocessor">#endif //OB_MOLECULEFORMAT_H</span>
<a name="l00130"></a>00130 <span class="preprocessor"></span>
</pre></div></div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/">Open Babel</a>, version 2.0.2.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2005, the <a href="http://openbabel.sourceforge.net/THANKS.shtml">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Nov 30 20:18:01 2006 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1.
</div>

</body>
</html>
