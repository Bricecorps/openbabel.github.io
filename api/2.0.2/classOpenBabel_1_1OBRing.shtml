<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBRing Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="dirs.shtml"><span>Directories</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a></div>
<h1>OBRing Class Reference</h1><!-- doxytag: class="OpenBabel::OBRing" -->Stores information on rings in a molecule from SSSR perception.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="ring_8h-source.shtml">ring.h</a>&gt;</code>
<p>
<a href="classOpenBabel_1_1OBRing-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#2e91c040e3659233748563f119aa77da">findCenterAndNormal</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;center, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;norm1, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;norm2)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#ca37bf71481749f6555e916555d9e7a2">OBRing</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#14fd438f17aa2a1a1efb06b148728057">OBRing</a> (std::vector&lt; int &gt; &amp;, int)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#23338e172a6e54349b089741494a4562">OBRing</a> (const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;src)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> copy constructor.  <a href="#23338e172a6e54349b089741494a4562"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#651c293bb5cfd688a358cf47d596c9c7">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;src)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> assignment operator.  <a href="#651c293bb5cfd688a358cf47d596c9c7"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#24926108b770033792d015cb86aeffb3">Size</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#0524371fb8d3859ad2f9b4cd3f5a4f69">PathSize</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#30bcd8070ca5df7d8f9c665e22666d2e">IsMember</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#cf3841f44863af6030c02f54a10ba635">IsMember</a> (<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *b)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#1c74fed3a281f591495387ec5fb0a050">IsAromatic</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#87c9cc8c92936bd191dca74f78fb84cb">IsInRing</a> (int i)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#82ba3a4d5db75e9f11d3ea8dd5ef32b8">SetParent</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *m)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#d8480b61159bc6cb861b17341dc2b29a">GetParent</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; int &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#86d1b14f3c439c5be01e0f6c9dc60a1d">_path</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#babc3e7a7e660eba9b2dfa3b2bc28782">_pathset</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Stores information on rings in a molecule from SSSR perception. 
<p>
Ring information beyond atom and bond membership is usually not necessary, but more information can be had about the rings in a molecule. The <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> class is used to store the information from a Smallest Set of Smallest Rings (SSSR) perception of a molecule. The <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> member function <a class="el" href="classOpenBabel_1_1OBMol.shtml#0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a> stores the information it perceives in a vector&lt;OBRing*&gt; inside the molecule. Perception is only done once for a molecule unless the connection table is modified. The following code demonstrates how to extract the SSSR information: <div class="fragment"><pre class="fragment">OBMol mol;

vector&lt;OBRing*&gt; vr;
vr = mol.GetSSSR();
</pre></div> OBRings store the atom numbers of the atoms in each of the smallest set of smallest rings in both a vector&lt;int&gt; and an <a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>. An example of how to print out the atom numbers present in all SSSR rings is show below: <div class="fragment"><pre class="fragment">vector&lt;OBRing*&gt;::iterator i;
vector&lt;int&gt;::iterator j;
vector&lt;OBRing*&gt; *rlist = (vector&lt;OBRing*&gt;*)mol.GetData(<span class="stringliteral">"RingList"</span>);
<span class="keywordflow">for</span> (i = rlist-&gt;begin();i != rlist-&gt;end();i++)
{
<span class="keywordflow">for</span>(j = (*i)-&gt;_path.begin();j != (*i)-&gt;_path.end();j++)
    cout &lt;&lt; *j &lt;&lt; ` `;
cout &lt;&lt; endl;
}
</pre></div> will produce something like the following output for benzene: <div class="fragment"><pre class="fragment">1 2 3 4 5 6
</pre></div> Ring information is automatically deleted from an <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> when it goes out of scope or the Clear() member function is called.<p>
Implements <a href="http://qsar.sourceforge.net/dicts/blue-obelisk/index.xhtml#findSmallestSetOfSmallestRings">blue-obelisk:findSmallestSetOfSmallestRings</a>. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="ca37bf71481749f6555e916555d9e7a2"></a><!-- doxytag: member="OpenBabel::OBRing::OBRing" ref="ca37bf71481749f6555e916555d9e7a2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="14fd438f17aa2a1a1efb06b148728057"></a><!-- doxytag: member="OpenBabel::OBRing::OBRing" ref="14fd438f17aa2a1a1efb06b148728057" args="(std::vector&lt; int &gt; &amp;, int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; int &gt; &amp;&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="23338e172a6e54349b089741494a4562"></a><!-- doxytag: member="OpenBabel::OBRing::OBRing" ref="23338e172a6e54349b089741494a4562" args="(const OBRing &amp;src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>src</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> copy constructor. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>src</em>&nbsp;</td><td>reference to original <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> object (rhs) </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="2e91c040e3659233748563f119aa77da"></a><!-- doxytag: member="OpenBabel::OBRing::findCenterAndNormal" ref="2e91c040e3659233748563f119aa77da" args="(vector3 &amp;center, vector3 &amp;norm1, vector3 &amp;norm2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool findCenterAndNormal           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>norm1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>norm2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="651c293bb5cfd688a358cf47d596c9c7"></a><!-- doxytag: member="OpenBabel::OBRing::operator=" ref="651c293bb5cfd688a358cf47d596c9c7" args="(const OBRing &amp;src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp; operator=           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>src</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> assignment operator. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>src</em>&nbsp;</td><td>reference to original <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> object (rhs) </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>reference to modified <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> object (lhs) </dd></dl>

</div>
</div><p>
<a class="anchor" name="24926108b770033792d015cb86aeffb3"></a><!-- doxytag: member="OpenBabel::OBRing::Size" ref="24926108b770033792d015cb86aeffb3" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int Size           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="0524371fb8d3859ad2f9b4cd3f5a4f69"></a><!-- doxytag: member="OpenBabel::OBRing::PathSize" ref="0524371fb8d3859ad2f9b4cd3f5a4f69" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int PathSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="30bcd8070ca5df7d8f9c665e22666d2e"></a><!-- doxytag: member="OpenBabel::OBRing::IsMember" ref="30bcd8070ca5df7d8f9c665e22666d2e" args="(OBAtom *a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMember           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="cf3841f44863af6030c02f54a10ba635"></a><!-- doxytag: member="OpenBabel::OBRing::IsMember" ref="cf3841f44863af6030c02f54a10ba635" args="(OBBond *b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMember           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&nbsp;</td>
          <td class="paramname"> <em>b</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="1c74fed3a281f591495387ec5fb0a050"></a><!-- doxytag: member="OpenBabel::OBRing::IsAromatic" ref="1c74fed3a281f591495387ec5fb0a050" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAromatic           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="87c9cc8c92936bd191dca74f78fb84cb"></a><!-- doxytag: member="OpenBabel::OBRing::IsInRing" ref="87c9cc8c92936bd191dca74f78fb84cb" args="(int i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInRing           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="82ba3a4d5db75e9f11d3ea8dd5ef32b8"></a><!-- doxytag: member="OpenBabel::OBRing::SetParent" ref="82ba3a4d5db75e9f11d3ea8dd5ef32b8" args="(OBMol *m)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetParent           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&nbsp;</td>
          <td class="paramname"> <em>m</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d8480b61159bc6cb861b17341dc2b29a"></a><!-- doxytag: member="OpenBabel::OBRing::GetParent" ref="d8480b61159bc6cb861b17341dc2b29a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* GetParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="86d1b14f3c439c5be01e0f6c9dc60a1d"></a><!-- doxytag: member="OpenBabel::OBRing::_path" ref="86d1b14f3c439c5be01e0f6c9dc60a1d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int&gt; <a class="el" href="classOpenBabel_1_1OBRing.shtml#86d1b14f3c439c5be01e0f6c9dc60a1d">_path</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="babc3e7a7e660eba9b2dfa3b2bc28782"></a><!-- doxytag: member="OpenBabel::OBRing::_pathset" ref="babc3e7a7e660eba9b2dfa3b2bc28782" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> <a class="el" href="classOpenBabel_1_1OBRing.shtml#babc3e7a7e660eba9b2dfa3b2bc28782">_pathset</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="ring_8h-source.shtml">ring.h</a><li><a class="el" href="ring_8cpp.shtml">ring.cpp</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/">Open Babel</a>, version 2.0.2.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2005, the <a href="http://openbabel.sourceforge.net/THANKS.shtml">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Nov 30 20:18:12 2006 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1.
</div>

</body>
</html>
