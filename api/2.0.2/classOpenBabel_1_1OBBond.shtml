<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBBond Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="dirs.shtml"><span>Directories</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a></div>
<h1>OBBond Class Reference</h1><!-- doxytag: class="OpenBabel::OBBond" --><!-- doxytag: inherits="OpenBabel::OBEdgeBase" -->Bond class.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="mol_8h-source.shtml">mol.h</a>&gt;</code>
<p>
Inheritance diagram for OBBond:<p><center><img src="classOpenBabel_1_1OBBond__inherit__graph.png" border="0" usemap="#OBBond__inherit__map" alt="Inheritance graph"></center>
<map name="OBBond__inherit__map">
<area href="classOpenBabel_1_1OBEdgeBase.shtml" shape="rect" coords="8,82,112,109" alt="">
<area href="classOpenBabel_1_1OBBase.shtml" shape="rect" coords="24,8,96,34" alt="">
</map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center><a href="classOpenBabel_1_1OBBond-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#61559abfacb167bad8bb124d1f899b87">OBBond</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#61559abfacb167bad8bb124d1f899b87"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#f3978005314074b4383b10d497b55003">~OBBond</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor.  <a href="#f3978005314074b4383b10d497b55003"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#205872bb6f0f1bc7ba69b7264025d4fe">GetParent</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#b3a51868ba5353c3272adc612d2105a5">SetParent</a> (<a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#a2c7ad30f78e489d19549acd0d0f56e6">GetIdx</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#68b67df27b5d4333da806fe81b9a9aa5">SetBgn</a> (<a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *n)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#a57da819e34f00190ce2a5920bf1873f">SetEnd</a> (<a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *n)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#146205b1cc9ff426896d81bb311501a5">SwapEnds</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#972811763a2cb54bf216ae5a58386d33">GetBgn</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#14e039be5793f80142b33daab9d2cde0">GetEnd</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#035ad93c9b173681b6a1829020ee11ca">Error</a> (int f)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#85efd9cd89e1611737080229ec6cc38b">DoTransformations</a> (const std::map&lt; std::string, std::string &gt; *pOptions)</td></tr>

<tr><td colspan="2"><div class="groupHeader">Bond modification methods</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#b994a975e39f5c62288f4f972b6f90c9">SetIdx</a> (int idx)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#3b00183cecf8df500db30888b4f83e70">SetBO</a> (int order)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#3c443bcf96eac155aa058b69cc59aa4e">SetBegin</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *begin)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#9bcf1c90715c368ce2896acae75235c4">SetEnd</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *end)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#e604daa18955e6b589d07d7d6e605cfc">SetLength</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *, double)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#8e012a09a90625dd0b4f1da7a00a71b0">Set</a> (int, <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *, <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *, int, int)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#cb95632fbaba13a5aa138725a20f2c0b">SetKSingle</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#2372682111abb0a7d49ba2f6caa7f51f">SetKDouble</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#068e086977f8e15b07d3c3d32f622ead">SetKTriple</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#3d29498c15007d9b6729e26784f23a5b">SetAromatic</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#25f82438018e969b4feda4a25042c608">SetHash</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#ac63169d5f12da96ad067cc8194c8cdb">SetWedge</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#1b06560e0e01a806b92c2386220d0b57">SetUp</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#7690859a81831984dbc0fa73313d44b3">SetDown</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#e6a016e7f67cf564e5f80254c425f65c">SetInRing</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#b499793fc98aadbaa192756b8327016d">SetClosure</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#2fcf3bf429f36281a43c879e40e75f34">UnsetAromatic</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#512e7b122631a29f1ef8c679704632cd">UnsetKekule</a> ()</td></tr>

<tr><td colspan="2"><div class="groupHeader">bond data request methods</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#7d9f4e277b24001cf1d7d9ef072724e6">GetBO</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#d4ae2f349fa9fe34dea5f5e69378fbf7">GetBondOrder</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#d2ed50e039de387fb517a9f7832de06f">GetFlags</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#e11a8ddd132109c3a14328bb7676d9f7">GetBeginAtomIdx</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#38f53ed138507e197a36be75e58a24da">GetEndAtomIdx</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#fdda9b904cabc9ce0335a665988ab143">GetBeginAtom</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#ee593e9cc14031b07e3dc63a003c345f">GetEndAtom</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#30735471b108fe43965fd2d0a9fe86a0">GetNbrAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#474a91cde7ace2b85e3ac44b8d9cc94b">GetEquibLength</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#6cc6a14c4251a7c9180003258522adc1">GetLength</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#63c9645e049629bac7c445413c60ba82">GetNbrAtomIdx</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *ptr)</td></tr>

<tr><td colspan="2"><div class="groupHeader">property request methods</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#eda62da8823b248654404fb15f314a66">IsAromatic</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#e016e13adf41d7c12a3d22147f0b870e">IsInRing</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#0919315f7a2fd68937c561186be76e44">IsRotor</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#86eb2acbb9c5811e645df18b8b0bacf7">IsAmide</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#8d59ca837068a807d393dab30cf72775">IsPrimaryAmide</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#38f8ea65888a454fa07b77cdd4aa41ca">IsSecondaryAmide</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#783023d0c499c732c067d566c90b67ae">IsEster</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#0b3a46209d5f71fd8b5717a81dce7dd1">IsCarbonyl</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#a7c514e18d5bbe2873dc223a02df526e">IsSingle</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#66926118e966d8cdb17a6ae23f2e89f4">IsDouble</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#e763d876fdca6bb00dd7d97574c9c1d0">IsTriple</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#3dcf63c2cdd597361fe1f140501fb4e7">IsKSingle</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#1293d36d6ef65f89892ed57092aeb157">IsKDouble</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#d2ccb49198384c9d22b47ac7d0c4de90">IsKTriple</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#b91f9d866c216bcb3ffc5aa0774b5177">IsClosure</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#1733c541422f1bec76b19733d5f6f046">IsUp</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#4ff4d4e51ec0a91f7b8174265de188e7">IsDown</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#70910881ff95404e96c9b40d33e0db76">IsWedge</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#b5e8e371f621ba037c843f6da7fe6bdb">IsHash</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#ed0dfa6939f68b337f13fbcf4e0f3da7">IsDoubleBondGeometry</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><dl class="return" compact><dt><b>Returns:</b></dt><dd>whether the geometry around this bond looks unsaturated </dd></dl>
 <a href="#ed0dfa6939f68b337f13fbcf4e0f3da7"></a><br></td></tr>
<tr><td colspan="2"><div class="groupHeader">Methods for handling generic data</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#1e0f46181273107bdbf5b22ca78755ab">HasData</a> (std::string &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#01b429ffcaf47cf265acd439ed2faca0">HasData</a> (const char *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#54e7fef374c6403d539d4ae484d3024c">HasData</a> (unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#797e5b4d20b6233062d2fdba78a08e06">DeleteData</a> (unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#b586df65e3f115b69510820b34098ce9">DeleteData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#af61a3ecb8f2926aaf117299388d43c2">DeleteData</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#db6b0ec89bfea783825b3b466e4dbc00">SetData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#fd4740dfd6a433f49aff61f30a143e2b">DataSize</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> items attached to this bond </dd></dl>
 <a href="#fd4740dfd6a433f49aff61f30a143e2b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#ff0af110d6024838f92e367927ac4a69">GetData</a> (unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#f129944bef0a7bce21f2232108fec39a">GetData</a> (std::string &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#483b277678a8ca48998742c80985fd0b">GetData</a> (const char *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#90a551ff0a0ed3fa58745dff0ecacdaa">GetData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> <br>
* &gt;::iterator&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#a53a73875031660f8d63e963a248df9f">BeginData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> <br>
* &gt;::iterator&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#23b691092f712f20cf57065f54d2357a">EndData</a> ()</td></tr>

<tr><td colspan="2"><div class="groupHeader">Nonfunctional members</div></td></tr>
<tr><td colspan="2"><div class="groupText">Nonfunctional or unused members of <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OpenBabel::OBEdgeBase</a> are to be added by a derived class (e.g., <a class="el" href="classOpenBabel_1_1OBBond.shtml">OpenBabel::OBBond</a>) <br><br></div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#659eb5765ac99f43e03e545ea60147e5">Eval</a> (<a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> *)</td></tr>

<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#6368d7673f23186649b2969ade3661d7">Visit</a></td></tr>

<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#3a1dc0419a66d2e7288214342de43b7a">HasFlag</a> (int flag)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#dcdab8f96dc4fdc2940749e527087245">SetFlag</a> (int flag)</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#3db9d8d4a032ad98c3cc9139bff39a49">_order</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Bond order (1, 2, 3, 5=aromatic).  <a href="#3db9d8d4a032ad98c3cc9139bff39a49"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned short int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#ec57dcfb24a8b5496b6319fa1172fa5e">_flags</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Any flags for this bond.  <a href="#ec57dcfb24a8b5496b6319fa1172fa5e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBond.shtml#f7811cf8aadbf3b3477c560b0ef2f797">_vdata</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Generic data for custom information.  <a href="#f7811cf8aadbf3b3477c560b0ef2f797"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned short int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#891ad63852015fb2ddaed4d177e4a104">_idx</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">What is my unique edge index? <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#a2c7ad30f78e489d19549acd0d0f56e6">GetIdx()</a>, <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#b994a975e39f5c62288f4f972b6f90c9">SetIdx(int idx)</a>.  <a href="#891ad63852015fb2ddaed4d177e4a104"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#7105fc6ae12fcc1a59cfdaa4f21ec457">_bgn</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">I connect one node.  <a href="#7105fc6ae12fcc1a59cfdaa4f21ec457"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#7fc178365db79d69aa75a47f778e39cb">_end</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#9e9a06b4e445a3cbe5d4e09695620dcb">_parent</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">To which graph do I belong? <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#205872bb6f0f1bc7ba69b7264025d4fe">GetParent()</a>, <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#b3a51868ba5353c3272adc612d2105a5">SetParent(OBGraphBase*)</a>.  <a href="#9e9a06b4e445a3cbe5d4e09695620dcb"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Bond class. 
<p>
The <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> class is straightforward in its data access and modification methods. OBBonds store pointers to the atoms on each end of the bond. In storing pointers to atoms instead of integer indices, the necessity of having to reorder bonds when atoms are shuffled, added, or delete is obviated. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="61559abfacb167bad8bb124d1f899b87"></a><!-- doxytag: member="OpenBabel::OBBond::OBBond" ref="61559abfacb167bad8bb124d1f899b87" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>

</div>
</div><p>
<a class="anchor" name="f3978005314074b4383b10d497b55003"></a><!-- doxytag: member="OpenBabel::OBBond::~OBBond" ref="f3978005314074b4383b10d497b55003" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="3a1dc0419a66d2e7288214342de43b7a"></a><!-- doxytag: member="OpenBabel::OBBond::HasFlag" ref="3a1dc0419a66d2e7288214342de43b7a" args="(int flag)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasFlag           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flag</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="dcdab8f96dc4fdc2940749e527087245"></a><!-- doxytag: member="OpenBabel::OBBond::SetFlag" ref="dcdab8f96dc4fdc2940749e527087245" args="(int flag)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFlag           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flag</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b994a975e39f5c62288f4f972b6f90c9"></a><!-- doxytag: member="OpenBabel::OBBond::SetIdx" ref="b994a975e39f5c62288f4f972b6f90c9" args="(int idx)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetIdx           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>idx</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#b994a975e39f5c62288f4f972b6f90c9">OBEdgeBase</a>.
</div>
</div><p>
<a class="anchor" name="3b00183cecf8df500db30888b4f83e70"></a><!-- doxytag: member="OpenBabel::OBBond::SetBO" ref="3b00183cecf8df500db30888b4f83e70" args="(int order)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetBO           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>order</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3c443bcf96eac155aa058b69cc59aa4e"></a><!-- doxytag: member="OpenBabel::OBBond::SetBegin" ref="3c443bcf96eac155aa058b69cc59aa4e" args="(OBAtom *begin)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetBegin           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>begin</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="9bcf1c90715c368ce2896acae75235c4"></a><!-- doxytag: member="OpenBabel::OBBond::SetEnd" ref="9bcf1c90715c368ce2896acae75235c4" args="(OBAtom *end)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetEnd           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>end</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e604daa18955e6b589d07d7d6e605cfc"></a><!-- doxytag: member="OpenBabel::OBBond::SetLength" ref="e604daa18955e6b589d07d7d6e605cfc" args="(OBAtom *, double)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetLength           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="8e012a09a90625dd0b4f1da7a00a71b0"></a><!-- doxytag: member="OpenBabel::OBBond::Set" ref="8e012a09a90625dd0b4f1da7a00a71b0" args="(int, OBAtom *, OBAtom *, int, int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Set           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="cb95632fbaba13a5aa138725a20f2c0b"></a><!-- doxytag: member="OpenBabel::OBBond::SetKSingle" ref="cb95632fbaba13a5aa138725a20f2c0b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetKSingle           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="2372682111abb0a7d49ba2f6caa7f51f"></a><!-- doxytag: member="OpenBabel::OBBond::SetKDouble" ref="2372682111abb0a7d49ba2f6caa7f51f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetKDouble           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="068e086977f8e15b07d3c3d32f622ead"></a><!-- doxytag: member="OpenBabel::OBBond::SetKTriple" ref="068e086977f8e15b07d3c3d32f622ead" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetKTriple           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3d29498c15007d9b6729e26784f23a5b"></a><!-- doxytag: member="OpenBabel::OBBond::SetAromatic" ref="3d29498c15007d9b6729e26784f23a5b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAromatic           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="25f82438018e969b4feda4a25042c608"></a><!-- doxytag: member="OpenBabel::OBBond::SetHash" ref="25f82438018e969b4feda4a25042c608" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetHash           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ac63169d5f12da96ad067cc8194c8cdb"></a><!-- doxytag: member="OpenBabel::OBBond::SetWedge" ref="ac63169d5f12da96ad067cc8194c8cdb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetWedge           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="1b06560e0e01a806b92c2386220d0b57"></a><!-- doxytag: member="OpenBabel::OBBond::SetUp" ref="1b06560e0e01a806b92c2386220d0b57" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetUp           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="7690859a81831984dbc0fa73313d44b3"></a><!-- doxytag: member="OpenBabel::OBBond::SetDown" ref="7690859a81831984dbc0fa73313d44b3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetDown           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e6a016e7f67cf564e5f80254c425f65c"></a><!-- doxytag: member="OpenBabel::OBBond::SetInRing" ref="e6a016e7f67cf564e5f80254c425f65c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetInRing           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b499793fc98aadbaa192756b8327016d"></a><!-- doxytag: member="OpenBabel::OBBond::SetClosure" ref="b499793fc98aadbaa192756b8327016d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetClosure           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#0fda5b90ae8edbf5caf727ff3f7af108">OBEdgeBase</a>.
</div>
</div><p>
<a class="anchor" name="2fcf3bf429f36281a43c879e40e75f34"></a><!-- doxytag: member="OpenBabel::OBBond::UnsetAromatic" ref="2fcf3bf429f36281a43c879e40e75f34" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void UnsetAromatic           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="512e7b122631a29f1ef8c679704632cd"></a><!-- doxytag: member="OpenBabel::OBBond::UnsetKekule" ref="512e7b122631a29f1ef8c679704632cd" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void UnsetKekule           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="7d9f4e277b24001cf1d7d9ef072724e6"></a><!-- doxytag: member="OpenBabel::OBBond::GetBO" ref="7d9f4e277b24001cf1d7d9ef072724e6" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetBO           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#b6d2a99ec1887fb1d60f3d7ee31e56a3">OBEdgeBase</a>.
</div>
</div><p>
<a class="anchor" name="d4ae2f349fa9fe34dea5f5e69378fbf7"></a><!-- doxytag: member="OpenBabel::OBBond::GetBondOrder" ref="d4ae2f349fa9fe34dea5f5e69378fbf7" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetBondOrder           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d2ed50e039de387fb517a9f7832de06f"></a><!-- doxytag: member="OpenBabel::OBBond::GetFlags" ref="d2ed50e039de387fb517a9f7832de06f" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetFlags           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e11a8ddd132109c3a14328bb7676d9f7"></a><!-- doxytag: member="OpenBabel::OBBond::GetBeginAtomIdx" ref="e11a8ddd132109c3a14328bb7676d9f7" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetBeginAtomIdx           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="38f53ed138507e197a36be75e58a24da"></a><!-- doxytag: member="OpenBabel::OBBond::GetEndAtomIdx" ref="38f53ed138507e197a36be75e58a24da" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetEndAtomIdx           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="fdda9b904cabc9ce0335a665988ab143"></a><!-- doxytag: member="OpenBabel::OBBond::GetBeginAtom" ref="fdda9b904cabc9ce0335a665988ab143" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>* GetBeginAtom           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ee593e9cc14031b07e3dc63a003c345f"></a><!-- doxytag: member="OpenBabel::OBBond::GetEndAtom" ref="ee593e9cc14031b07e3dc63a003c345f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>* GetEndAtom           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="30735471b108fe43965fd2d0a9fe86a0"></a><!-- doxytag: member="OpenBabel::OBBond::GetNbrAtom" ref="30735471b108fe43965fd2d0a9fe86a0" args="(OBAtom *ptr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>* GetNbrAtom           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>ptr</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="474a91cde7ace2b85e3ac44b8d9cc94b"></a><!-- doxytag: member="OpenBabel::OBBond::GetEquibLength" ref="474a91cde7ace2b85e3ac44b8d9cc94b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetEquibLength           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="6cc6a14c4251a7c9180003258522adc1"></a><!-- doxytag: member="OpenBabel::OBBond::GetLength" ref="6cc6a14c4251a7c9180003258522adc1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetLength           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="63c9645e049629bac7c445413c60ba82"></a><!-- doxytag: member="OpenBabel::OBBond::GetNbrAtomIdx" ref="63c9645e049629bac7c445413c60ba82" args="(OBAtom *ptr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetNbrAtomIdx           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>ptr</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="eda62da8823b248654404fb15f314a66"></a><!-- doxytag: member="OpenBabel::OBBond::IsAromatic" ref="eda62da8823b248654404fb15f314a66" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAromatic           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#c2162768d8f994785a10b3db8f948e2f">OBEdgeBase</a>.
</div>
</div><p>
<a class="anchor" name="e016e13adf41d7c12a3d22147f0b870e"></a><!-- doxytag: member="OpenBabel::OBBond::IsInRing" ref="e016e13adf41d7c12a3d22147f0b870e" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInRing           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#a5d38b127e602f58df9d62a21b8cc083">OBEdgeBase</a>.
</div>
</div><p>
<a class="anchor" name="0919315f7a2fd68937c561186be76e44"></a><!-- doxytag: member="OpenBabel::OBBond::IsRotor" ref="0919315f7a2fd68937c561186be76e44" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsRotor           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is the bond a rotatable bond? Currently, this function classifies any bond with at least one heavy atom, no sp-hybrid atoms (e.g., a triple bond somewhere) not in a ring as a potential rotor. No other bond typing is attempted. 
</div>
</div><p>
<a class="anchor" name="86eb2acbb9c5811e645df18b8b0bacf7"></a><!-- doxytag: member="OpenBabel::OBBond::IsAmide" ref="86eb2acbb9c5811e645df18b8b0bacf7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAmide           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="8d59ca837068a807d393dab30cf72775"></a><!-- doxytag: member="OpenBabel::OBBond::IsPrimaryAmide" ref="8d59ca837068a807d393dab30cf72775" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPrimaryAmide           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="38f8ea65888a454fa07b77cdd4aa41ca"></a><!-- doxytag: member="OpenBabel::OBBond::IsSecondaryAmide" ref="38f8ea65888a454fa07b77cdd4aa41ca" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSecondaryAmide           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="todo.shtml#_todo000001">Todo:</a></b></dt><dd>Implement this properly -- currently always returns false </dd></dl>

</div>
</div><p>
<a class="anchor" name="783023d0c499c732c067d566c90b67ae"></a><!-- doxytag: member="OpenBabel::OBBond::IsEster" ref="783023d0c499c732c067d566c90b67ae" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsEster           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="0b3a46209d5f71fd8b5717a81dce7dd1"></a><!-- doxytag: member="OpenBabel::OBBond::IsCarbonyl" ref="0b3a46209d5f71fd8b5717a81dce7dd1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsCarbonyl           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a7c514e18d5bbe2873dc223a02df526e"></a><!-- doxytag: member="OpenBabel::OBBond::IsSingle" ref="a7c514e18d5bbe2873dc223a02df526e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSingle           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="66926118e966d8cdb17a6ae23f2e89f4"></a><!-- doxytag: member="OpenBabel::OBBond::IsDouble" ref="66926118e966d8cdb17a6ae23f2e89f4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDouble           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e763d876fdca6bb00dd7d97574c9c1d0"></a><!-- doxytag: member="OpenBabel::OBBond::IsTriple" ref="e763d876fdca6bb00dd7d97574c9c1d0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsTriple           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3dcf63c2cdd597361fe1f140501fb4e7"></a><!-- doxytag: member="OpenBabel::OBBond::IsKSingle" ref="3dcf63c2cdd597361fe1f140501fb4e7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsKSingle           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="1293d36d6ef65f89892ed57092aeb157"></a><!-- doxytag: member="OpenBabel::OBBond::IsKDouble" ref="1293d36d6ef65f89892ed57092aeb157" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsKDouble           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d2ccb49198384c9d22b47ac7d0c4de90"></a><!-- doxytag: member="OpenBabel::OBBond::IsKTriple" ref="d2ccb49198384c9d22b47ac7d0c4de90" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsKTriple           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b91f9d866c216bcb3ffc5aa0774b5177"></a><!-- doxytag: member="OpenBabel::OBBond::IsClosure" ref="b91f9d866c216bcb3ffc5aa0774b5177" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsClosure           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#fcd83b68c6187de29a8213a8ceab91cc">OBEdgeBase</a>.
</div>
</div><p>
<a class="anchor" name="1733c541422f1bec76b19733d5f6f046"></a><!-- doxytag: member="OpenBabel::OBBond::IsUp" ref="1733c541422f1bec76b19733d5f6f046" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsUp           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether this is the "upper" bond in a double bond cis/trans isomer (i.e., "/" in SMILES) </dd></dl>

</div>
</div><p>
<a class="anchor" name="4ff4d4e51ec0a91f7b8174265de188e7"></a><!-- doxytag: member="OpenBabel::OBBond::IsDown" ref="4ff4d4e51ec0a91f7b8174265de188e7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDown           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether this is the "lower" bond in a double bond cis/trans isomer (i.e., "\" in SMILES) </dd></dl>

</div>
</div><p>
<a class="anchor" name="70910881ff95404e96c9b40d33e0db76"></a><!-- doxytag: member="OpenBabel::OBBond::IsWedge" ref="70910881ff95404e96c9b40d33e0db76" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsWedge           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b5e8e371f621ba037c843f6da7fe6bdb"></a><!-- doxytag: member="OpenBabel::OBBond::IsHash" ref="b5e8e371f621ba037c843f6da7fe6bdb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHash           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ed0dfa6939f68b337f13fbcf4e0f3da7"></a><!-- doxytag: member="OpenBabel::OBBond::IsDoubleBondGeometry" ref="ed0dfa6939f68b337f13fbcf4e0f3da7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDoubleBondGeometry           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether the geometry around this bond looks unsaturated </dd></dl>

<p>
This method checks if the geometry around this bond looks unsaturated by measuring the torsion angles formed by all connected atoms X-start=end-Y and checking that they are close to 0 or 180 degrees 
</div>
</div><p>
<a class="anchor" name="1e0f46181273107bdbf5b22ca78755ab"></a><!-- doxytag: member="OpenBabel::OBBond::HasData" ref="1e0f46181273107bdbf5b22ca78755ab" args="(std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="01b429ffcaf47cf265acd439ed2faca0"></a><!-- doxytag: member="OpenBabel::OBBond::HasData" ref="01b429ffcaf47cf265acd439ed2faca0" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="54e7fef374c6403d539d4ae484d3024c"></a><!-- doxytag: member="OpenBabel::OBBond::HasData" ref="54e7fef374c6403d539d4ae484d3024c" args="(unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="797e5b4d20b6233062d2fdba78a08e06"></a><!-- doxytag: member="OpenBabel::OBBond::DeleteData" ref="797e5b4d20b6233062d2fdba78a08e06" args="(unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b586df65e3f115b69510820b34098ce9"></a><!-- doxytag: member="OpenBabel::OBBond::DeleteData" ref="b586df65e3f115b69510820b34098ce9" args="(OBGenericData *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="af61a3ecb8f2926aaf117299388d43c2"></a><!-- doxytag: member="OpenBabel::OBBond::DeleteData" ref="af61a3ecb8f2926aaf117299388d43c2" args="(std::vector&lt; OBGenericData * &gt; &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="db6b0ec89bfea783825b3b466e4dbc00"></a><!-- doxytag: member="OpenBabel::OBBond::SetData" ref="db6b0ec89bfea783825b3b466e4dbc00" args="(OBGenericData *d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="fd4740dfd6a433f49aff61f30a143e2b"></a><!-- doxytag: member="OpenBabel::OBBond::DataSize" ref="fd4740dfd6a433f49aff61f30a143e2b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int DataSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> items attached to this bond </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="ff0af110d6024838f92e367927ac4a69"></a><!-- doxytag: member="OpenBabel::OBBond::GetData" ref="ff0af110d6024838f92e367927ac4a69" args="(unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f129944bef0a7bce21f2232108fec39a"></a><!-- doxytag: member="OpenBabel::OBBond::GetData" ref="f129944bef0a7bce21f2232108fec39a" args="(std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="483b277678a8ca48998742c80985fd0b"></a><!-- doxytag: member="OpenBabel::OBBond::GetData" ref="483b277678a8ca48998742c80985fd0b" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="90a551ff0a0ed3fa58745dff0ecacdaa"></a><!-- doxytag: member="OpenBabel::OBBond::GetData" ref="90a551ff0a0ed3fa58745dff0ecacdaa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;&amp; GetData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a53a73875031660f8d63e963a248df9f"></a><!-- doxytag: member="OpenBabel::OBBond::BeginData" ref="a53a73875031660f8d63e963a248df9f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;::iterator BeginData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="23b691092f712f20cf57065f54d2357a"></a><!-- doxytag: member="OpenBabel::OBBond::EndData" ref="23b691092f712f20cf57065f54d2357a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;::iterator EndData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="205872bb6f0f1bc7ba69b7264025d4fe"></a><!-- doxytag: member="OpenBabel::OBBond::GetParent" ref="205872bb6f0f1bc7ba69b7264025d4fe" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a>* GetParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b3a51868ba5353c3272adc612d2105a5"></a><!-- doxytag: member="OpenBabel::OBBond::SetParent" ref="b3a51868ba5353c3272adc612d2105a5" args="(OBGraphBase *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetParent           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a2c7ad30f78e489d19549acd0d0f56e6"></a><!-- doxytag: member="OpenBabel::OBBond::GetIdx" ref="a2c7ad30f78e489d19549acd0d0f56e6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetIdx           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="68b67df27b5d4333da806fe81b9a9aa5"></a><!-- doxytag: member="OpenBabel::OBBond::SetBgn" ref="68b67df27b5d4333da806fe81b9a9aa5" args="(OBNodeBase *n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetBgn           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td>
          <td class="paramname"> <em>n</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a57da819e34f00190ce2a5920bf1873f"></a><!-- doxytag: member="OpenBabel::OBBond::SetEnd" ref="a57da819e34f00190ce2a5920bf1873f" args="(OBNodeBase *n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetEnd           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td>
          <td class="paramname"> <em>n</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="146205b1cc9ff426896d81bb311501a5"></a><!-- doxytag: member="OpenBabel::OBBond::SwapEnds" ref="146205b1cc9ff426896d81bb311501a5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SwapEnds           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="972811763a2cb54bf216ae5a58386d33"></a><!-- doxytag: member="OpenBabel::OBBond::GetBgn" ref="972811763a2cb54bf216ae5a58386d33" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a>* GetBgn           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="14e039be5793f80142b33daab9d2cde0"></a><!-- doxytag: member="OpenBabel::OBBond::GetEnd" ref="14e039be5793f80142b33daab9d2cde0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a>* GetEnd           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="035ad93c9b173681b6a1829020ee11ca"></a><!-- doxytag: member="OpenBabel::OBBond::Error" ref="035ad93c9b173681b6a1829020ee11ca" args="(int f)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Error           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>f</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="659eb5765ac99f43e03e545ea60147e5"></a><!-- doxytag: member="OpenBabel::OBBond::Eval" ref="659eb5765ac99f43e03e545ea60147e5" args="(OBEdgeBase *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Eval           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="85efd9cd89e1611737080229ec6cc38b"></a><!-- doxytag: member="OpenBabel::OBBond::DoTransformations" ref="85efd9cd89e1611737080229ec6cc38b" args="(const std::map&lt; std::string, std::string &gt; *pOptions)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* DoTransformations           </td>
          <td>(</td>
          <td class="paramtype">const std::map&lt; std::string, std::string &gt; *&nbsp;</td>
          <td class="paramname"> <em>pOptions</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#035de6b4d4b6834f08d08940911f645d">OBMol</a>.
</div>
</div><p>
<a class="anchor" name="6bb6ed5c064e3957d8dd03aba51e61f7"></a><!-- doxytag: member="OpenBabel::OBBond::ClassDescription" ref="6bb6ed5c064e3957d8dd03aba51e61f7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static const char* ClassDescription           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, static, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#b72bba66cc9e40fb3b657a30d87bbe6d">OBMol</a>.
</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="3db9d8d4a032ad98c3cc9139bff39a49"></a><!-- doxytag: member="OpenBabel::OBBond::_order" ref="3db9d8d4a032ad98c3cc9139bff39a49" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char <a class="el" href="classOpenBabel_1_1OBBond.shtml#3db9d8d4a032ad98c3cc9139bff39a49">_order</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Bond order (1, 2, 3, 5=aromatic). 
<p>

</div>
</div><p>
<a class="anchor" name="ec57dcfb24a8b5496b6319fa1172fa5e"></a><!-- doxytag: member="OpenBabel::OBBond::_flags" ref="ec57dcfb24a8b5496b6319fa1172fa5e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short int <a class="el" href="classOpenBabel_1_1OBBond.shtml#ec57dcfb24a8b5496b6319fa1172fa5e">_flags</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Any flags for this bond. 
<p>

</div>
</div><p>
<a class="anchor" name="f7811cf8aadbf3b3477c560b0ef2f797"></a><!-- doxytag: member="OpenBabel::OBBond::_vdata" ref="f7811cf8aadbf3b3477c560b0ef2f797" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt; <a class="el" href="classOpenBabel_1_1OBBond.shtml#f7811cf8aadbf3b3477c560b0ef2f797">_vdata</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Generic data for custom information. 
<p>

</div>
</div><p>
<a class="anchor" name="891ad63852015fb2ddaed4d177e4a104"></a><!-- doxytag: member="OpenBabel::OBBond::_idx" ref="891ad63852015fb2ddaed4d177e4a104" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short int <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#891ad63852015fb2ddaed4d177e4a104">_idx</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
What is my unique edge index? <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#a2c7ad30f78e489d19549acd0d0f56e6">GetIdx()</a>, <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#b994a975e39f5c62288f4f972b6f90c9">SetIdx(int idx)</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="7105fc6ae12fcc1a59cfdaa4f21ec457"></a><!-- doxytag: member="OpenBabel::OBBond::_bgn" ref="7105fc6ae12fcc1a59cfdaa4f21ec457" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a>* <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#7105fc6ae12fcc1a59cfdaa4f21ec457">_bgn</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
I connect one node. 
<p>

</div>
</div><p>
<a class="anchor" name="7fc178365db79d69aa75a47f778e39cb"></a><!-- doxytag: member="OpenBabel::OBBond::_end" ref="7fc178365db79d69aa75a47f778e39cb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a>* <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#7fc178365db79d69aa75a47f778e39cb">_end</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
to another node 
</div>
</div><p>
<a class="anchor" name="9e9a06b4e445a3cbe5d4e09695620dcb"></a><!-- doxytag: member="OpenBabel::OBBond::_parent" ref="9e9a06b4e445a3cbe5d4e09695620dcb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a>* <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#9e9a06b4e445a3cbe5d4e09695620dcb">_parent</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
To which graph do I belong? <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#205872bb6f0f1bc7ba69b7264025d4fe">GetParent()</a>, <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#b3a51868ba5353c3272adc612d2105a5">SetParent(OBGraphBase*)</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="6368d7673f23186649b2969ade3661d7"></a><!-- doxytag: member="OpenBabel::OBBond::Visit" ref="6368d7673f23186649b2969ade3661d7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml#6368d7673f23186649b2969ade3661d7">Visit</a><code> [inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="mol_8h-source.shtml">mol.h</a><li><a class="el" href="bond_8cpp.shtml">bond.cpp</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/">Open Babel</a>, version 2.0.2.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2005, the <a href="http://openbabel.sourceforge.net/THANKS.shtml">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Nov 30 20:18:10 2006 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1.
</div>

</body>
</html>
