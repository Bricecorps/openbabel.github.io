<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBGenericData Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="dirs.shtml"><span>Directories</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div>
<h1>OBGenericData Class Reference</h1><!-- doxytag: class="OpenBabel::OBGenericData" -->Base class for generic data.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="generic_8h-source.shtml">generic.h</a>&gt;</code>
<p>
Inheritance diagram for OBGenericData:<p><center><img src="classOpenBabel_1_1OBGenericData__inherit__graph.png" border="0" usemap="#OBGenericData__inherit__map" alt="Inheritance graph"></center>
<map name="OBGenericData__inherit__map">
<area href="classOpenBabel_1_1OBAngleData.shtml" shape="rect" coords="201,8,305,34" alt="">
<area href="classOpenBabel_1_1OBChiralData.shtml" shape="rect" coords="200,58,306,85" alt="">
<area href="classOpenBabel_1_1OBCommentData.shtml" shape="rect" coords="189,109,317,136" alt="">
<area href="classOpenBabel_1_1OBConformerData.shtml" shape="rect" coords="185,160,321,186" alt="">
<area href="classOpenBabel_1_1OBExternalBondData.shtml" shape="rect" coords="177,210,329,237" alt="">
<area href="classOpenBabel_1_1OBPairData.shtml" shape="rect" coords="206,261,300,288" alt="">
<area href="classOpenBabel_1_1OBRingData.shtml" shape="rect" coords="204,312,302,338" alt="">
<area href="classOpenBabel_1_1OBRotamerList.shtml" shape="rect" coords="196,362,310,389" alt="">
<area href="classOpenBabel_1_1OBSerialNums.shtml" shape="rect" coords="197,413,309,440" alt="">
<area href="classOpenBabel_1_1OBSymmetryData.shtml" shape="rect" coords="188,464,318,490" alt="">
<area href="classOpenBabel_1_1OBTorsionData.shtml" shape="rect" coords="194,514,312,541" alt="">
<area href="classOpenBabel_1_1OBUnitCell.shtml" shape="rect" coords="209,565,297,592" alt="">
<area href="classOpenBabel_1_1OBVirtualBond.shtml" shape="rect" coords="197,616,309,642" alt="">
</map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center><a href="classOpenBabel_1_1OBGenericData-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#eba6abbff4785f53f7c07fc44e449ad8">OBGenericData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#7085bde2b169f57336528f51ae045f77">OBGenericData</a> (const <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#cb834533508953a264ed93b74fddad8d">~OBGenericData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#18605bb9f5869ea2fa88bf9e366aef09">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> &amp;src)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ae3d15983201a2a115701b2c538fef77">SetAttribute</a> (const std::string &amp;v)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const std::string &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#c61fc66ef692e79290d6eaf7231db92c">GetAttribute</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#91834e24b299c63cdf2cb77795298446">GetDataType</a> () const</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#dceb77134f15418a66cf1124dcef1b51">_attr</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">attribute tag (e.g., "UnitCell", "Comment" or "Author")  <a href="#dceb77134f15418a66cf1124dcef1b51"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#31291823d487a4a47f24aae5870505ef">_type</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">attribute type -- declared for each subclass  <a href="#31291823d487a4a47f24aae5870505ef"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Base class for generic data. 
<p>
<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> is an abstract base class which defines an interface for storage, retrieval, and indexing of arbitrary generic data. Subclasses of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> can be used to store custom data on a per-atom, per-bond, per-molecule, or per-residue basis. Open Babel currently supports a small subset of chemical functionality as <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> types, which will expand over time to support additional interconversion (e.g., spectroscopy, dynamics, surfaces...)<p>
For your own custom data, either define a custom subclass using an id from the <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#fe4267ab37cf325e5ac9286852497009">OBGenericDataType::CustomData0</a> to <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#03d161aae9e02389f5244bbd1a1ade8f">OBGenericDataType::CustomData15</a> slots, or store your data as a string and use <a class="el" href="classOpenBabel_1_1OBPairData.shtml">OBPairData</a> for key/value access. The latter is <b>highly</b> recommended for various text descriptors e.g., in QSAR, atom or bond labels, or other textual data.<p>
Example code using <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a><p>
<div class="fragment"><pre class="fragment">    <span class="keywordflow">if</span> (mol.HasData(<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#baed60580659cc04903745f0db5d8fad">OBGenericDataType::UnitCell</a>))
    {
        uc = (OBUnitCell*)mol.GetData(<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#baed60580659cc04903745f0db5d8fad">OBGenericDataType::UnitCell</a>);
        sprintf(buffer,
                <span class="stringliteral">"%10.5f%10.5f%10.5f%10.5f%10.5f%10.5f"</span>,
                uc-&gt;GetA(), uc-&gt;GetB(), uc-&gt;GetC(),
                uc-&gt;GetAlpha() , uc-&gt;GetBeta(), uc-&gt;GetGamma());
        ofs &lt;&lt; buffer &lt;&lt; endl;
    }

...

  vector&lt;OBGenericData*&gt;::iterator k;
  vector&lt;OBGenericData*&gt; vdata = mol.GetData();
  <span class="keywordflow">for</span> (k = vdata.begin();k != vdata.end();k++)
     <span class="keywordflow">if</span> ((*k)-&gt;GetDataType() == <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#ab5cbd1af8318315c397fc2a309f4233">OBGenericDataType::PairData</a>)
          {
                  ofs &lt;&lt; <span class="stringliteral">"&gt;  &lt;"</span> &lt;&lt; (*k)-&gt;GetAttribute() &lt;&lt; <span class="stringliteral">"&gt;"</span> &lt;&lt; endl;
                  ofs &lt;&lt; ((OBPairData*)(*k))-&gt;GetValue() &lt;&lt; endl &lt;&lt; endl;
          }
</pre></div><p>
Similar code also works for <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> stored in an <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> or <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> (or <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>).<p>
<div class="fragment"><pre class="fragment">    <span class="keywordflow">if</span> (!atom.HasData(<span class="stringliteral">"UserLabel"</span>)) <span class="comment">// stored textual data as an OBPairData</span>
      {
         OBPairData *label = <span class="keyword">new</span> OBPairData;
         label-&gt;SetAttribute(<span class="stringliteral">"UserLabel"</span>);
         label-&gt;SetValue(userInput);

         atom.SetData(label);
      }

...

    <span class="keywordflow">if</span> (bond.HasData(<span class="stringliteral">"DisplayType"</span>)) <span class="comment">// e.g. in a visualization tool</span>
      {
        OBPairData *display = dynamic_cast&lt;OBPairData *&gt; bond.GetData(<span class="stringliteral">"DisplayType"</span>);
        <span class="keywordflow">if</span> (display-&gt;GetValue() == <span class="stringliteral">"wireframe"</span>)
          {
           ... <span class="comment">// display a wireframe view</span>
          }
      }
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="eba6abbff4785f53f7c07fc44e449ad8"></a><!-- doxytag: member="OpenBabel::OBGenericData::OBGenericData" ref="eba6abbff4785f53f7c07fc44e449ad8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="7085bde2b169f57336528f51ae045f77"></a><!-- doxytag: member="OpenBabel::OBGenericData::OBGenericData" ref="7085bde2b169f57336528f51ae045f77" args="(const OBGenericData &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="cb834533508953a264ed93b74fddad8d"></a><!-- doxytag: member="OpenBabel::OBGenericData::~OBGenericData" ref="cb834533508953a264ed93b74fddad8d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="18605bb9f5869ea2fa88bf9e366aef09"></a><!-- doxytag: member="OpenBabel::OBGenericData::operator=" ref="18605bb9f5869ea2fa88bf9e366aef09" args="(const OBGenericData &amp;src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> &amp; operator=           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>src</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ae3d15983201a2a115701b2c538fef77"></a><!-- doxytag: member="OpenBabel::OBGenericData::SetAttribute" ref="ae3d15983201a2a115701b2c538fef77" args="(const std::string &amp;v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAttribute           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="c61fc66ef692e79290d6eaf7231db92c"></a><!-- doxytag: member="OpenBabel::OBGenericData::GetAttribute" ref="c61fc66ef692e79290d6eaf7231db92c" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetAttribute           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="91834e24b299c63cdf2cb77795298446"></a><!-- doxytag: member="OpenBabel::OBGenericData::GetDataType" ref="91834e24b299c63cdf2cb77795298446" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetDataType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="dceb77134f15418a66cf1124dcef1b51"></a><!-- doxytag: member="OpenBabel::OBGenericData::_attr" ref="dceb77134f15418a66cf1124dcef1b51" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#dceb77134f15418a66cf1124dcef1b51">_attr</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
attribute tag (e.g., "UnitCell", "Comment" or "Author") 
<p>

</div>
</div><p>
<a class="anchor" name="31291823d487a4a47f24aae5870505ef"></a><!-- doxytag: member="OpenBabel::OBGenericData::_type" ref="31291823d487a4a47f24aae5870505ef" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#31291823d487a4a47f24aae5870505ef">_type</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
attribute type -- declared for each subclass 
<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="generic_8h-source.shtml">generic.h</a><li><a class="el" href="generic_8cpp.shtml">generic.cpp</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/">Open Babel</a>, version 2.0.2.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2005, the <a href="http://openbabel.sourceforge.net/THANKS.shtml">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Nov 30 20:18:05 2006 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1.
</div>

</body>
</html>
