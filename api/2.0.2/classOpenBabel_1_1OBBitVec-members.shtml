<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: Member List</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="dirs.shtml"><span>Directories</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<h1>OBBitVec Member List</h1>This is the complete list of members for <a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#d03f0ecf79c8ce72b389b44c2f446ccc">BitIsOn</a>(int bit)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#7551155bb4901aa0f8f0a1d5bcb2cd90">BitIsSet</a>(int bit)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#666736fbd0ebb8dc7e6ff3392423d6c0">Clear</a>(void)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#15dd9131b350b3a9bfb3b24d0cd1910d">CountBits</a>()</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#31d1053aee208079bcc3c5e1884774df">Empty</a>()</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#cc637b2c1aa0b73dc4ba8c53d6577e6c">EndBit</a>()</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#58f0f4d74f4694b12bc9a57334e3ec93">FirstBit</a>(int)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a9f4a8b5d11859b60bad6d9d42f4ce2e">Fold</a>(int)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#1a0b0c574fd88c8be9a3ce14962b2674">FromString</a>(std::string &amp;, int)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#38ffc49bb220d21bf7f45461b8bdf4f5">FromVecInt</a>(std::vector&lt; int &gt; &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a4907b035ab197f57102411e48b2cfc0">GetSize</a>() const</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#54f0ed8405b1e3645b59d03a0d85a2dc">GetWords</a>(std::vector&lt; unsigned int &gt; &amp;vec)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#357657ded604ecb97b76251146f7ac75">IsEmpty</a>()</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#00e05e1bb6f3185b1a40728679be5274">Negate</a>()</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#93cd1b1207419c6b7f02301ec0591e36">NextBit</a>(int)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#f0100bd07b2642e38b29dc8e74ff765b">OBBitVec</a>()</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#903d892e56acd7c79cb54f4a4abab4a7">OBBitVec</a>(int bits)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#9f1019820beb14b3385e188d167acf39">OBBitVec</a>(const OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#261439802dffcabf2681460cee40e1cf">operator &amp;</a>(OBBitVec &amp;, OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#226310992fad5d40582380c81e0ee802">operator &amp;=</a>(OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#07fc8ffce0ba8b307b4b0bf6ba698c7e">operator+=</a>(OBBitVec &amp;bv)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#232f7b34bfe886deb8ae3cfc3614fabd">operator-</a>(OBBitVec &amp;, OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#4425a967ca68d0a8f8a20136c1755c27">operator-=</a>(OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#0837e790711a84a5fe63642ae8cbc251">operator&lt;&lt;</a>(std::ostream &amp;, const OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#2078e020dc0758924d0e3b957e9cca19">operator=</a>(const OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#2b67f7c94adde4ba0684989a75496ae4">operator==</a>(const OBBitVec &amp;, const OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#668ed4123846d5435b110f73651d20c7">operator&gt;&gt;</a>(std::istream &amp;, OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#19166f24e947aa600dcbaf68acec7f1f">operator[]</a>(int bit)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a85c794e5d98f75aa34038e39b1ed9e7">operator^</a>(OBBitVec &amp;, OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#148109e447bdabfad27f61a208948d16">operator^=</a>(OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#c7fecce9a4c6a83f1a2914ff2cb70e60">operator|</a>(OBBitVec &amp;, OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#1a12e51b1f77c8cb7dd9cd850fcf2061">operator|=</a>(OBBitVec &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#67cbe6495b3010f637aa153c3f124eda">operator|=</a>(const int i)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#edb03d58645f1ca7f1b3a7f2fe5f3389">Resize</a>(int maxbits)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#f9c5981937a900ba6f109cd8a0918620">SetBitOff</a>(int)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#9e0550f60fe927d5152a195a632446da">SetBitOn</a>(int)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#b74924cb4a56499b37730428a46a67ce">SetRangeOff</a>(int, int)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#d8ca349a92a1e48586b310af948c52ec">SetRangeOn</a>(int, int)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#d60e249d58b55cf50e8fb1fbe66e5e00">ToVecInt</a>(std::vector&lt; int &gt; &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
</table></div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/">Open Babel</a>, version 2.0.2.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2005, the <a href="http://openbabel.sourceforge.net/THANKS.shtml">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Nov 30 20:18:04 2006 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1.
</div>

</body>
</html>
