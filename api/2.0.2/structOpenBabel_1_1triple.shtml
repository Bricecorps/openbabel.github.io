<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: triple Struct Template Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="dirs.shtml"><span>Directories</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="structOpenBabel_1_1triple.shtml">triple</a></div>
<h1>triple Struct Template Reference</h1><!-- doxytag: class="OpenBabel::triple" -->A 3-element templated, based on the design of the STL pair&lt;&gt;.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="obutil_8h-source.shtml">obutil.h</a>&gt;</code>
<p>
<a href="structOpenBabel_1_1triple-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef T1&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1triple.shtml#2ff1057d713f47338b9b6c4a60e5ab87">first_type</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef T2&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1triple.shtml#75b41637f35c1f6bbf8ec5c0ebb79728">second_type</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef T3&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1triple.shtml#32442a804e500a7dc9ecb4a3feeb143d">third_type</a></td></tr>

<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1triple.shtml#87aa95191f543f716183080f7bfcbfd0">triple</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1triple.shtml#a519d64ebe02cf77be9fce8401bbfc59">triple</a> (const T1 &amp;a, const T2 &amp;b, const T3 &amp;c)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor for 3 values.  <a href="#a519d64ebe02cf77be9fce8401bbfc59"></a><br></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class U, class V, class W&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1triple.shtml#ad33c815591f3f00892a727ee9bec59b">triple</a> (const <a class="el" href="structOpenBabel_1_1triple.shtml">triple</a>&lt; U, V, W &gt; &amp;t)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Copy constructor with implicit conversions.  <a href="#ad33c815591f3f00892a727ee9bec59b"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">T1&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1triple.shtml#e885a6822c40e26649c9dd8b476942f8">first</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">T2&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1triple.shtml#9a8a97f32d498c09c0f1f82c8a67bd6f">second</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">T3&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1triple.shtml#b02b336e2ad870f773affd07b0f68ef8">third</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<h3>template&lt;class T1, class T2, class T3&gt;<br>
 struct OpenBabel::triple&lt; T1, T2, T3 &gt;</h3>

A 3-element templated, based on the design of the STL pair&lt;&gt;. 
<p>
<hr><h2>Member Typedef Documentation</h2>
<a class="anchor" name="2ff1057d713f47338b9b6c4a60e5ab87"></a><!-- doxytag: member="OpenBabel::triple::first_type" ref="2ff1057d713f47338b9b6c4a60e5ab87" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef T1 <a class="el" href="structOpenBabel_1_1triple.shtml#2ff1057d713f47338b9b6c4a60e5ab87">first_type</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="75b41637f35c1f6bbf8ec5c0ebb79728"></a><!-- doxytag: member="OpenBabel::triple::second_type" ref="75b41637f35c1f6bbf8ec5c0ebb79728" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef T2 <a class="el" href="structOpenBabel_1_1triple.shtml#75b41637f35c1f6bbf8ec5c0ebb79728">second_type</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="32442a804e500a7dc9ecb4a3feeb143d"></a><!-- doxytag: member="OpenBabel::triple::third_type" ref="32442a804e500a7dc9ecb4a3feeb143d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef T3 <a class="el" href="structOpenBabel_1_1triple.shtml#32442a804e500a7dc9ecb4a3feeb143d">third_type</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="87aa95191f543f716183080f7bfcbfd0"></a><!-- doxytag: member="OpenBabel::triple::triple" ref="87aa95191f543f716183080f7bfcbfd0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1triple.shtml">triple</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Default constructor T1() and T2() and T3() force initialization for built in types 
</div>
</div><p>
<a class="anchor" name="a519d64ebe02cf77be9fce8401bbfc59"></a><!-- doxytag: member="OpenBabel::triple::triple" ref="a519d64ebe02cf77be9fce8401bbfc59" args="(const T1 &amp;a, const T2 &amp;b, const T3 &amp;c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1triple.shtml">triple</a>           </td>
          <td>(</td>
          <td class="paramtype">const T1 &amp;&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T2 &amp;&nbsp;</td>
          <td class="paramname"> <em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T3 &amp;&nbsp;</td>
          <td class="paramname"> <em>c</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor for 3 values. 
<p>

</div>
</div><p>
<a class="anchor" name="ad33c815591f3f00892a727ee9bec59b"></a><!-- doxytag: member="OpenBabel::triple::triple" ref="ad33c815591f3f00892a727ee9bec59b" args="(const triple&lt; U, V, W &gt; &amp;t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1triple.shtml">triple</a>           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1triple.shtml">triple</a>&lt; U, V, W &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>t</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Copy constructor with implicit conversions. 
<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="e885a6822c40e26649c9dd8b476942f8"></a><!-- doxytag: member="OpenBabel::triple::first" ref="e885a6822c40e26649c9dd8b476942f8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">T1 <a class="el" href="structOpenBabel_1_1triple.shtml#e885a6822c40e26649c9dd8b476942f8">first</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="9a8a97f32d498c09c0f1f82c8a67bd6f"></a><!-- doxytag: member="OpenBabel::triple::second" ref="9a8a97f32d498c09c0f1f82c8a67bd6f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">T2 <a class="el" href="structOpenBabel_1_1triple.shtml#9a8a97f32d498c09c0f1f82c8a67bd6f">second</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b02b336e2ad870f773affd07b0f68ef8"></a><!-- doxytag: member="OpenBabel::triple::third" ref="b02b336e2ad870f773affd07b0f68ef8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">T3 <a class="el" href="structOpenBabel_1_1triple.shtml#b02b336e2ad870f773affd07b0f68ef8">third</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="obutil_8h-source.shtml">obutil.h</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/">Open Babel</a>, version 2.0.2.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2005, the <a href="http://openbabel.sourceforge.net/THANKS.shtml">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Nov 30 20:18:11 2006 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1.
</div>

</body>
</html>
