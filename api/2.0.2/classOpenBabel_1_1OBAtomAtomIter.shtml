<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBAtomAtomIter Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="dirs.shtml"><span>Directories</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a></div>
<h1>OBAtomAtomIter Class Reference</h1><!-- doxytag: class="OpenBabel::OBAtomAtomIter" -->Iterate over all neighboring atoms to an <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="obiter_8h-source.shtml">obiter.h</a>&gt;</code>
<p>
<a href="classOpenBabel_1_1OBAtomAtomIter-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml#f8a4eb72f4e027a2f7d2649b01b847f1">OBAtomAtomIter</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml#9001f5dde4cd8a725f4cbbf1b3e0a6a6">OBAtomAtomIter</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atm)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml#cbe793562d040011f3b9614043b91b28">OBAtomAtomIter</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;atm)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml#cbafa4b74965993f492cf5673b3e39e1">OBAtomAtomIter</a> (const <a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a> &amp;ai)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml#00796444d36ff096663132f62df5b483">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a> &amp;ai)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml#67b76affb3b5d35fa419ac234144038b">operator bool</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml#f63cddf5d1c62789ea2da95dad37093f">operator++</a> (int)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml#227568f5015b62dce6f62b9eca4c90bb">operator-&gt;</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml#8e0b41342bcfcc7f327acc7a5ddd8438">operator *</a> () const</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Iterate over all neighboring atoms to an <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>. 
<p>
To facilitate iteration through all neighbors of an atom, without resorting to bond indexes (which may change in the future) or the <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#2b2654433045d2c2e81a53c25ad99dc2">OBAtom::BeginNbr()</a> and <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#24f4b273e84be464ec0fa7ea3434f21b">OBAtom::NextNbr()</a> methods which may be deprecated in the future.<p>
This has been made significantly easier by a series of macros in the <a class="el" href="obiter_8h.shtml">obiter.h</a> header file:<p>
<div class="fragment"><pre class="fragment">    \#define <a class="code" href="obiter_8h.shtml#18326b3c74bff171f5807ce9725e0c47">FOR_NBORS_OF_ATOM</a>(a,p)     for( <a class="code" href="classOpenBabel_1_1OBAtomAtomIter.shtml#f8a4eb72f4e027a2f7d2649b01b847f1">OBAtomAtomIter</a>     a(p); a; a++ )
</pre></div><p>
Here is an example: <div class="fragment"><pre class="fragment"><span class="preprocessor">   #include "<a class="code" href="obiter_8h.shtml">obiter.h</a>"</span>
<span class="preprocessor">   #include "<a class="code" href="mol_8h.shtml">mol.h</a>"</span>

   OBMol mol;
   <a class="code" href="obiter_8h.shtml#fb051cb17b46d381998c24fc41db2a79">FOR_ATOMS_OF_MOL</a>(a, mol)
   {
  <span class="comment">// The variable a behaves like OBAtom* when used with -&gt; and * but</span>
  <span class="comment">// but needs to be explicitly converted when appearing as a parameter</span>
  <span class="comment">// in a function call - use &amp;*a</span>
  <a class="code" href="obiter_8h.shtml#18326b3c74bff171f5807ce9725e0c47">FOR_NBORS_OF_ATOM</a>(b, &amp;*a)
      {
         ...
      }
   }
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="f8a4eb72f4e027a2f7d2649b01b847f1"></a><!-- doxytag: member="OpenBabel::OBAtomAtomIter::OBAtomAtomIter" ref="f8a4eb72f4e027a2f7d2649b01b847f1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="9001f5dde4cd8a725f4cbbf1b3e0a6a6"></a><!-- doxytag: member="OpenBabel::OBAtomAtomIter::OBAtomAtomIter" ref="9001f5dde4cd8a725f4cbbf1b3e0a6a6" args="(OBAtom *atm)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a>           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atm</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="cbe793562d040011f3b9614043b91b28"></a><!-- doxytag: member="OpenBabel::OBAtomAtomIter::OBAtomAtomIter" ref="cbe793562d040011f3b9614043b91b28" args="(OBAtom &amp;atm)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a>           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>atm</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="cbafa4b74965993f492cf5673b3e39e1"></a><!-- doxytag: member="OpenBabel::OBAtomAtomIter::OBAtomAtomIter" ref="cbafa4b74965993f492cf5673b3e39e1" args="(const OBAtomAtomIter &amp;ai)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a>           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>ai</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="00796444d36ff096663132f62df5b483"></a><!-- doxytag: member="OpenBabel::OBAtomAtomIter::operator=" ref="00796444d36ff096663132f62df5b483" args="(const OBAtomAtomIter &amp;ai)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a> &amp; operator=           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>ai</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="67b76affb3b5d35fa419ac234144038b"></a><!-- doxytag: member="OpenBabel::OBAtomAtomIter::operator bool" ref="67b76affb3b5d35fa419ac234144038b" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">operator bool           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f63cddf5d1c62789ea2da95dad37093f"></a><!-- doxytag: member="OpenBabel::OBAtomAtomIter::operator++" ref="f63cddf5d1c62789ea2da95dad37093f" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a> operator++           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="227568f5015b62dce6f62b9eca4c90bb"></a><!-- doxytag: member="OpenBabel::OBAtomAtomIter::operator-&gt;" ref="227568f5015b62dce6f62b9eca4c90bb" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>* operator-&gt;           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="8e0b41342bcfcc7f327acc7a5ddd8438"></a><!-- doxytag: member="OpenBabel::OBAtomAtomIter::operator *" ref="8e0b41342bcfcc7f327acc7a5ddd8438" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>&amp; operator *           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="obiter_8h-source.shtml">obiter.h</a><li><a class="el" href="obiter_8cpp.shtml">obiter.cpp</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/">Open Babel</a>, version 2.0.2.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2005, the <a href="http://openbabel.sourceforge.net/THANKS.shtml">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Nov 30 20:18:11 2006 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1.
</div>

</body>
</html>
