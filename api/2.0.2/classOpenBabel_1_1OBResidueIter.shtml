<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBResidueIter Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="dirs.shtml"><span>Directories</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a></div>
<h1>OBResidueIter Class Reference</h1><!-- doxytag: class="OpenBabel::OBResidueIter" -->Iterate over all residues in an <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="obiter_8h-source.shtml">obiter.h</a>&gt;</code>
<p>
<a href="classOpenBabel_1_1OBResidueIter-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml#222f27c41a5414c4fb612d260c21a5fc">OBResidueIter</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml#0801e9aa4fb67ccecfb66998108bf2c1">OBResidueIter</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml#f7e8bb1dd715e2aca43ab0c59229a755">OBResidueIter</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml#5cf308d7c72dfe7da5fe91dc2bc69650">OBResidueIter</a> (const <a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a> &amp;ri)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml#4f46d1328c26bdd0b4ef3bf1158367db">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a> &amp;ri)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml#67b76affb3b5d35fa419ac234144038b">operator bool</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml#827c7d04dab8bc4533c411f0caf5620f">operator++</a> (int)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml#7e04dfb68e7cea085c06bc0dc993dacb">operator-&gt;</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml#b95d7e81ca1ae249b476c1bfee809ab9">operator *</a> () const</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Iterate over all residues in an <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>. 
<p>
To facilitate iteration through all residues in a molecule, without resorting to residue indexes (which may change in the future) or the <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac98c1df75d7d01ae934d1871ec6501b">OBMol::BeginResidue()</a> and <a class="el" href="classOpenBabel_1_1OBMol.shtml#8b0f9378c39b849144e6ec701677d978">OBMol::NextResidue()</a> methods which may be deprecated in the future.<p>
This has been made significantly easier by a series of macros in the <a class="el" href="obiter_8h.shtml">obiter.h</a> header file:<p>
<div class="fragment"><pre class="fragment">    \#define <a class="code" href="obiter_8h.shtml#483bbcfb9673a775c47ab6adf8e53451">FOR_RESIDUES_OF_MOL</a>(a,m)     for( <a class="code" href="classOpenBabel_1_1OBResidueIter.shtml#222f27c41a5414c4fb612d260c21a5fc">OBResidueIter</a>     a(m); a; a++ )
</pre></div><p>
Here is an example: <div class="fragment"><pre class="fragment"><span class="preprocessor">   #include "<a class="code" href="obiter_8h.shtml">obiter.h</a>"</span>
<span class="preprocessor">   #include "<a class="code" href="mol_8h.shtml">mol.h</a>"</span>

   OBMol mol;
   <a class="code" href="obiter_8h.shtml#483bbcfb9673a775c47ab6adf8e53451">FOR_RESIDUES_OF_MOL</a>(r, mol)
   {
  <span class="comment">// The variable r behaves like OBResidue* when used with -&gt; and * but</span>
  <span class="comment">// but needs to be explicitly converted when appearing as a parameter</span>
  <span class="comment">// in a function call - use &amp;*r</span>

     <span class="keywordflow">if</span> (r-&gt;GetName() == resname &amp;&amp; r-&gt;GetNum() == rnum) 
     {
       <span class="comment">// got a match, let's go to work</span>
       ...
     }
   }
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="222f27c41a5414c4fb612d260c21a5fc"></a><!-- doxytag: member="OpenBabel::OBResidueIter::OBResidueIter" ref="222f27c41a5414c4fb612d260c21a5fc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="0801e9aa4fb67ccecfb66998108bf2c1"></a><!-- doxytag: member="OpenBabel::OBResidueIter::OBResidueIter" ref="0801e9aa4fb67ccecfb66998108bf2c1" args="(OBMol *mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a>           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f7e8bb1dd715e2aca43ab0c59229a755"></a><!-- doxytag: member="OpenBabel::OBResidueIter::OBResidueIter" ref="f7e8bb1dd715e2aca43ab0c59229a755" args="(OBMol &amp;mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a>           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="5cf308d7c72dfe7da5fe91dc2bc69650"></a><!-- doxytag: member="OpenBabel::OBResidueIter::OBResidueIter" ref="5cf308d7c72dfe7da5fe91dc2bc69650" args="(const OBResidueIter &amp;ri)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a>           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>ri</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="4f46d1328c26bdd0b4ef3bf1158367db"></a><!-- doxytag: member="OpenBabel::OBResidueIter::operator=" ref="4f46d1328c26bdd0b4ef3bf1158367db" args="(const OBResidueIter &amp;ri)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a> &amp; operator=           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>ri</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="67b76affb3b5d35fa419ac234144038b"></a><!-- doxytag: member="OpenBabel::OBResidueIter::operator bool" ref="67b76affb3b5d35fa419ac234144038b" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">operator bool           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="827c7d04dab8bc4533c411f0caf5620f"></a><!-- doxytag: member="OpenBabel::OBResidueIter::operator++" ref="827c7d04dab8bc4533c411f0caf5620f" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a> operator++           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="7e04dfb68e7cea085c06bc0dc993dacb"></a><!-- doxytag: member="OpenBabel::OBResidueIter::operator-&gt;" ref="7e04dfb68e7cea085c06bc0dc993dacb" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>* operator-&gt;           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b95d7e81ca1ae249b476c1bfee809ab9"></a><!-- doxytag: member="OpenBabel::OBResidueIter::operator *" ref="b95d7e81ca1ae249b476c1bfee809ab9" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>&amp; operator *           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="obiter_8h-source.shtml">obiter.h</a><li><a class="el" href="obiter_8cpp.shtml">obiter.cpp</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/">Open Babel</a>, version 2.0.2.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2005, the <a href="http://openbabel.sourceforge.net/THANKS.shtml">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Nov 30 20:18:11 2006 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1.
</div>

</body>
</html>
