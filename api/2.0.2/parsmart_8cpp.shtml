<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: parsmart.cpp File Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li><a href="classes.shtml"><span>Classes</span></a></li>
    <li id="current"><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="dirs.shtml"><span>Directories</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.shtml"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.shtml"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="dir_c2f68d9a8fd140e5f30854dfa045b294.shtml">src</a></div>
<h1>parsmart.cpp File Reference</h1>Implementation of Daylight SMARTS parser. <a href="#_details">More...</a>
<p>
<code>#include &lt;ctype.h&gt;</code><br>
<code>#include &lt;iostream&gt;</code><br>
<code>#include &lt;iomanip&gt;</code><br>
<code>#include &quot;<a class="el" href="mol_8h-source.shtml">mol.h</a>&quot;</code><br>
<code>#include &quot;<a class="el" href="bitvec_8h-source.shtml">bitvec.h</a>&quot;</code><br>
<code>#include &quot;<a class="el" href="parsmart_8h-source.shtml">parsmart.h</a>&quot;</code><br>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Namespaces</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">namespace &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></td></tr>

<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#dd3ca9eefe3b5b754426f51d3043e579">True</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#306ebd41c0cd1303b1372c6153f0caf8">False</a>&nbsp;&nbsp;&nbsp;0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#42f8c497a1968074f38bf5055c650dca">VERBOSE</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#170531342624a42d223dc2f643d1b98d">UnusedArgument</a>(x)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#cc00e1c836a2e05fb0d26ea95893b28f">ELEMMAX</a>&nbsp;&nbsp;&nbsp;104</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#faf970ec3469dd85c5e72f56d6c8cd33">ATOMEXPRPOOL</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#0e53f7b51636e38ababdc60356b967a2">BONDEXPRPOOL</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#8bb0896d9b2cfa4099cfc0ed4d8c059c">ATOMPOOL</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#2133f987d425f686b0be7a2fd2fecc5c">BONDPOOL</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#cf24e5480cde9a5a56b5005ccd07ae73">BF_NONRINGUNSPEC</a>&nbsp;&nbsp;&nbsp;0x0001</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#dd18a812f24456bde91bc0cde4ef6096">BF_NONRINGDOWN</a>&nbsp;&nbsp;&nbsp;0x0002</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#295450b49bbf0334e11a3170729123ae">BF_NONRINGUP</a>&nbsp;&nbsp;&nbsp;0x0004</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#81072fa5de58c2349cf6af1a8034befc">BF_NONRINGDOUBLE</a>&nbsp;&nbsp;&nbsp;0x0008</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#483264ef39b9ad3e4275b0174a45b4b6">BF_NONRINGTRIPLE</a>&nbsp;&nbsp;&nbsp;0x0010</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#255292b8a26643df8c8ceb5c8d2033da">BF_RINGUNSPEC</a>&nbsp;&nbsp;&nbsp;0x0020</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#5f660916576cfdd1a80e5bc3d6bec9e9">BF_RINGDOWN</a>&nbsp;&nbsp;&nbsp;0x0040</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#ee39ef1f4a0ee5c7082a6dd8741d6a9f">BF_RINGUP</a>&nbsp;&nbsp;&nbsp;0x0080</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#6242fe0d42609a079bf0d9270920d885">BF_RINGAROM</a>&nbsp;&nbsp;&nbsp;0x0100</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#68aaf771a20314a0dbfd03fb19b7e86b">BF_RINGDOUBLE</a>&nbsp;&nbsp;&nbsp;0x0200</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#99d392578b38f68d005dbfa56d1997a9">BF_RINGTRIPLE</a>&nbsp;&nbsp;&nbsp;0x0400</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#ecd5a2d313d128d7bddf72a941c38661">BS_ALL</a>&nbsp;&nbsp;&nbsp;0x07FF</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#926acba2a0011df40b7b3d18bb8e25dd">BS_SINGLE</a>&nbsp;&nbsp;&nbsp;0x00E7</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#25e0b0fb7400c28b64cef72dca3d5b1e">BS_DOUBLE</a>&nbsp;&nbsp;&nbsp;0x0208</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#284a45a8662d999d5304daeeea2a235a">BS_TRIPLE</a>&nbsp;&nbsp;&nbsp;0x0410</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#9f0faf6ed68c1278b537db54e1e5a7a5">BS_AROM</a>&nbsp;&nbsp;&nbsp;0x0100</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#afb2457ef0332ac86bd7d69c7278c7de">BS_UP</a>&nbsp;&nbsp;&nbsp;0x0084</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#407ce6b09bc7c249f029dc733c8d515c">BS_DOWN</a>&nbsp;&nbsp;&nbsp;0x0042</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#fdaf6a02cc24882ebb9ef6ee04f1083b">BS_UPUNSPEC</a>&nbsp;&nbsp;&nbsp;0x00A5</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#816ed6318904ccdd7e477d9362fa8a36">BS_DOWNUNSPEC</a>&nbsp;&nbsp;&nbsp;0x0063</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#d196c5a4a83b706187f63f4f8d738cb1">BS_RING</a>&nbsp;&nbsp;&nbsp;0x07E0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#217c1292f08e156efcde7a42ed531a55">BS_DEFAULT</a>&nbsp;&nbsp;&nbsp;0x01E7</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#a893c2c75e0d3d0258e09fbd136ffaed">BUFMAX</a>&nbsp;&nbsp;&nbsp;1024</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#026d3a595081ea26440aef3e527382b8">OB_EVAL_STACKSIZE</a>&nbsp;&nbsp;&nbsp;40</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="parsmart_8cpp.shtml#3212f3e7a4bdeb6d56ceac3c602fbf2a">RECURSIVE</a></td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#35936bb63b733842d0c671cd895c83e4">match</a> (OBMol &amp;mol, Pattern *pat, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;mlist, bool single=false)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#b4a0d92e86679641956c11c5b6c24366">EvalAtomExpr</a> (AtomExpr *expr, OBAtom *atom)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#1e110eb63b05e4092efea843872a3152">EvalBondExpr</a> (BondExpr *expr, OBBond *bond)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#4bc7dc392771810667924051fd54b031">GetVectorBinding</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#5ef07c8230811964a209e423abea11d2">CreateAtom</a> (Pattern *, AtomExpr *, int, int vb=0)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a43d0c163d486db98bf0c3db5faf72c5">FatalAllocationError</a> (char *ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#dda2fb3f1a00bdee06b36a3a56ecab0a">FreePattern</a> (Pattern *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static Pattern *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#1fea358f643e1a4c2969fe9fc367372b">CopyPattern</a> (Pattern *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a06090c65ac9acea8044a078064142d6">AllocAtomExpr</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#c86a92f114ff5ab6ee7357352682922c">CopyAtomExpr</a> (AtomExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#e445247649429e110f031d235bc4d465">FreeAtomExpr</a> (AtomExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#9cf9b8eaac01d8b3edecdc32e0d73512">BuildAtomLeaf</a> (int prop, int val)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#03cacdaa8b1851aa9f927a8108b9e3ea">BuildAtomNot</a> (AtomExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#61fd91da70225bf05011639396d23b10">BuildAtomBin</a> (int op, AtomExpr *lft, AtomExpr *rgt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#2c7a4877081dd4f7ab5966e1cb506895">BuildAtomRecurs</a> (Pattern *pat)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#7d8b74f86bd19e5c64c5cfafbc0f5fc8">GenerateElement</a> (int elem)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#df5c0e4e485dfa0a5b9854063d0e75be">GenerateAromElem</a> (int elem, int flag)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#8d298e86b8ff500e158a8410aa5aa732">IsInvalidAtom</a> (AtomExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static BondExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#c80b9ed98f3d3d577e051b6dd2870cef">AllocBondExpr</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static BondExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#308583e0ca7df091c7a7e3b9fb321805">CopyBondExpr</a> (BondExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#62e1c3bdf62c95fbff1b64cb4996eccb">EquivalentBondExpr</a> (BondExpr *expr1, BondExpr *expr2)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#ec5ad77869a83b4b1f65bcfcb065d98f">FreeBondExpr</a> (BondExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static BondExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#b0f9c1d3ab7ba35f0083c342db724359">BuildBondLeaf</a> (int prop, int val)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static BondExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#558423c98a7710dccb8d9234a8c0d2cc">BuildBondNot</a> (BondExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static BondExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#6fc2b0b41adf46651940ca2c9410ed0d">BuildBondBin</a> (int op, BondExpr *lft, BondExpr *rgt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static BondExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#d1d85b6d3bd9953ffd9a3ffc5545bcfc">GenerateDefaultBond</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static Pattern *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#17874fdfb56af286f64cbf9471772daa">AllocPattern</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#0dc584d0582e8f76b7c9873dc1ccf569">CreateBond</a> (Pattern *pat, BondExpr *expr, int src, int dst)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static Pattern *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#c59e6e611cd53496ba95a90a48d1425d">ParseSMARTSPattern</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static Pattern *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a4cf9d88ceaac2b4e4fcc9ecb649acab">ParseSMARTSPart</a> (Pattern *, int)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static Pattern *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#1fa34f6508dd267438166db49b36a440">SMARTSError</a> (Pattern *pat)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#4af6bd742fd5fca5352f8b30c40861da">ParseSimpleAtomPrimitive</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#c1e19307ea3994d3cac92d0f959fecb8">ParseComplexAtomPrimitive</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#5048662d463319b746f598a337efdd3e">ParseAtomExpr</a> (int level)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static BondExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#4cfae9196d472762835bf290c64ed7d8">ParseBondPrimitive</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static BondExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a1f0768e8f6c5310297e66aac6bd9feb">ParseBondExpr</a> (int level)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static Pattern *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#8187c4db4baa4338bf24a11ef5d18533">ParseSMARTSError</a> (Pattern *pat, BondExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static Pattern *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#2e04d082f6b656801096b30962949238">SMARTSParser</a> (Pattern *pat, ParseState *stat, int prev, int part)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#c16aac0b5b4c8698863437383b747a5c">MarkGrowBonds</a> (Pattern *pat)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#308bf98f43b9e6d709f17b2e83617d6f">GetChiralFlag</a> (AtomExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static Pattern *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#4248ca82ac0af4e768f1ae8ccedb9535">ParseSMARTSString</a> (char *ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">Pattern *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#3c435d3b70fc9784a4f0079e6fa8158f">ParseSMARTSRecord</a> (char *ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#2bd45607819b8a55aae877d1b4e6e919">TraverseSMARTS</a> (Pattern *pat, int i)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#67a769d9ce95278983a65764b363188c">NotAtomExpr</a> (AtomExpr *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a31643b98610c21a70246529ae43a3c0">AndAtomExpr</a> (AtomExpr *, AtomExpr *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#ecadd7da4b4879ed4274e628fc440f4f">OrAtomExpr</a> (AtomExpr *, AtomExpr *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#c613f2b30f871cd23e63b8573372b2a4">IsBooleanAtomLeaf</a> (AtomExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#93043bdcf295c9daa7efb45bc31182ce">IsNegatingAtomLeaf</a> (AtomExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#19b1b9103d86b579bb44d777db593c73">EqualAtomExpr</a> (AtomExpr *lft, AtomExpr *rgt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#40de5efd81cb1bca8ff737a1507deeb0">OrderAtomExpr</a> (AtomExpr *lft, AtomExpr *rgt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#58b602c6be0aa88f69fbaecd71a82b7a">AtomLeafConflict</a> (AtomExpr *lft, AtomExpr *rgt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#6419b054750512355f620886990ae725">AtomExprConflict</a> (AtomExpr *lft, AtomExpr *rgt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#fe1606ae8fc8753791a06f48e1beaf4f">AtomLeafImplies</a> (AtomExpr *lft, AtomExpr *rgt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#53bb1c96f3be289fbe52bdb65afe3b13">AtomExprImplied</a> (AtomExpr *lft, AtomExpr *rgt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#5efeaba0de04686b85e1cd11296bb76f">AtomExprImplies</a> (AtomExpr *lft, AtomExpr *rgt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#ec3b3cd6bc1ab563427c7a03d52d7c0c">AndAtomExprLeaf</a> (AtomExpr *lft, AtomExpr *rgt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#afea7a59ad4cbb9bda87187210befbc5">ConstrainRecursion</a> (AtomExpr *recur, AtomExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static AtomExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#44c137e83dc2832887a5db79ceb19dbf">OrAtomExprLeaf</a> (AtomExpr *lft, AtomExpr *rgt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#cad25a1857223a2e76c6c122821320e8">GetBondLeafIndex</a> (BondExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#c8bb61cff2335d3f1e6b9956d3044071">GetBondExprIndex</a> (BondExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static BondExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#9f566dc44824213b954c864f36cf0bea">NotBondExpr</a> (BondExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static BondExpr *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#9d3a8296fef0c62168f18827b8a74e31">TransformBondExpr</a> (BondExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#320206d402c913055e4b9391af74ac72">SetupAtomMatchTable</a> (std::vector&lt; std::vector&lt; bool &gt; &gt; &amp;ttab, Pattern *pat, OBMol &amp;mol)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#7d5f2f720799ac68c463094c368f299a">FastSingleMatch</a> (OBMol &amp;mol, Pattern *pat, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;mlist)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#cc7a90098a2f71e1480986f513426244">GetExprOrder</a> (BondExpr *expr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#1be5369686428b6311fc8f79baf855c5">SmartsLexReplace</a> (std::string &amp;s, std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt; &amp;vlex)</td></tr>

<tr><td colspan="2"><br><h2>Variables</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; std::pair&lt; Pattern *,<br>
 std::vector&lt; bool &gt; &gt; &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#e89648d7638bd2299f581267f41badca">RSCACHE</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#2860b525fbfe4f29b416c37f8b13f561">MainPtr</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#24f5f7e6d2d4aeccecabdbbf89719bc5">LexPtr</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#9d7048d0658df11d0d0d760df86308e2">Buffer</a> [BUFMAX]</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#2c982581984b8ec596674fb8385c58d9">Descr</a> [BUFMAX]</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Implementation of Daylight SMARTS parser. 
<p>
<hr><h2>Define Documentation</h2>
<a class="anchor" name="dd3ca9eefe3b5b754426f51d3043e579"></a><!-- doxytag: member="parsmart.cpp::True" ref="dd3ca9eefe3b5b754426f51d3043e579" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define True&nbsp;&nbsp;&nbsp;1          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="306ebd41c0cd1303b1372c6153f0caf8"></a><!-- doxytag: member="parsmart.cpp::False" ref="306ebd41c0cd1303b1372c6153f0caf8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define False&nbsp;&nbsp;&nbsp;0          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="42f8c497a1968074f38bf5055c650dca"></a><!-- doxytag: member="parsmart.cpp::VERBOSE" ref="42f8c497a1968074f38bf5055c650dca" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VERBOSE          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="170531342624a42d223dc2f643d1b98d"></a><!-- doxytag: member="parsmart.cpp::UnusedArgument" ref="170531342624a42d223dc2f643d1b98d" args="(x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UnusedArgument          </td>
          <td>(</td>
          <td class="paramtype">x&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="cc00e1c836a2e05fb0d26ea95893b28f"></a><!-- doxytag: member="parsmart.cpp::ELEMMAX" ref="cc00e1c836a2e05fb0d26ea95893b28f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ELEMMAX&nbsp;&nbsp;&nbsp;104          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="faf970ec3469dd85c5e72f56d6c8cd33"></a><!-- doxytag: member="parsmart.cpp::ATOMEXPRPOOL" ref="faf970ec3469dd85c5e72f56d6c8cd33" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ATOMEXPRPOOL&nbsp;&nbsp;&nbsp;1          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="0e53f7b51636e38ababdc60356b967a2"></a><!-- doxytag: member="parsmart.cpp::BONDEXPRPOOL" ref="0e53f7b51636e38ababdc60356b967a2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BONDEXPRPOOL&nbsp;&nbsp;&nbsp;1          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="8bb0896d9b2cfa4099cfc0ed4d8c059c"></a><!-- doxytag: member="parsmart.cpp::ATOMPOOL" ref="8bb0896d9b2cfa4099cfc0ed4d8c059c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ATOMPOOL&nbsp;&nbsp;&nbsp;1          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="2133f987d425f686b0be7a2fd2fecc5c"></a><!-- doxytag: member="parsmart.cpp::BONDPOOL" ref="2133f987d425f686b0be7a2fd2fecc5c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BONDPOOL&nbsp;&nbsp;&nbsp;1          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="cf24e5480cde9a5a56b5005ccd07ae73"></a><!-- doxytag: member="parsmart.cpp::BF_NONRINGUNSPEC" ref="cf24e5480cde9a5a56b5005ccd07ae73" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BF_NONRINGUNSPEC&nbsp;&nbsp;&nbsp;0x0001          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="dd18a812f24456bde91bc0cde4ef6096"></a><!-- doxytag: member="parsmart.cpp::BF_NONRINGDOWN" ref="dd18a812f24456bde91bc0cde4ef6096" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BF_NONRINGDOWN&nbsp;&nbsp;&nbsp;0x0002          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="295450b49bbf0334e11a3170729123ae"></a><!-- doxytag: member="parsmart.cpp::BF_NONRINGUP" ref="295450b49bbf0334e11a3170729123ae" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BF_NONRINGUP&nbsp;&nbsp;&nbsp;0x0004          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="81072fa5de58c2349cf6af1a8034befc"></a><!-- doxytag: member="parsmart.cpp::BF_NONRINGDOUBLE" ref="81072fa5de58c2349cf6af1a8034befc" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BF_NONRINGDOUBLE&nbsp;&nbsp;&nbsp;0x0008          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="483264ef39b9ad3e4275b0174a45b4b6"></a><!-- doxytag: member="parsmart.cpp::BF_NONRINGTRIPLE" ref="483264ef39b9ad3e4275b0174a45b4b6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BF_NONRINGTRIPLE&nbsp;&nbsp;&nbsp;0x0010          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="255292b8a26643df8c8ceb5c8d2033da"></a><!-- doxytag: member="parsmart.cpp::BF_RINGUNSPEC" ref="255292b8a26643df8c8ceb5c8d2033da" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BF_RINGUNSPEC&nbsp;&nbsp;&nbsp;0x0020          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="5f660916576cfdd1a80e5bc3d6bec9e9"></a><!-- doxytag: member="parsmart.cpp::BF_RINGDOWN" ref="5f660916576cfdd1a80e5bc3d6bec9e9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BF_RINGDOWN&nbsp;&nbsp;&nbsp;0x0040          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ee39ef1f4a0ee5c7082a6dd8741d6a9f"></a><!-- doxytag: member="parsmart.cpp::BF_RINGUP" ref="ee39ef1f4a0ee5c7082a6dd8741d6a9f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BF_RINGUP&nbsp;&nbsp;&nbsp;0x0080          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="6242fe0d42609a079bf0d9270920d885"></a><!-- doxytag: member="parsmart.cpp::BF_RINGAROM" ref="6242fe0d42609a079bf0d9270920d885" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BF_RINGAROM&nbsp;&nbsp;&nbsp;0x0100          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="68aaf771a20314a0dbfd03fb19b7e86b"></a><!-- doxytag: member="parsmart.cpp::BF_RINGDOUBLE" ref="68aaf771a20314a0dbfd03fb19b7e86b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BF_RINGDOUBLE&nbsp;&nbsp;&nbsp;0x0200          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="99d392578b38f68d005dbfa56d1997a9"></a><!-- doxytag: member="parsmart.cpp::BF_RINGTRIPLE" ref="99d392578b38f68d005dbfa56d1997a9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BF_RINGTRIPLE&nbsp;&nbsp;&nbsp;0x0400          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ecd5a2d313d128d7bddf72a941c38661"></a><!-- doxytag: member="parsmart.cpp::BS_ALL" ref="ecd5a2d313d128d7bddf72a941c38661" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BS_ALL&nbsp;&nbsp;&nbsp;0x07FF          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="926acba2a0011df40b7b3d18bb8e25dd"></a><!-- doxytag: member="parsmart.cpp::BS_SINGLE" ref="926acba2a0011df40b7b3d18bb8e25dd" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BS_SINGLE&nbsp;&nbsp;&nbsp;0x00E7          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="25e0b0fb7400c28b64cef72dca3d5b1e"></a><!-- doxytag: member="parsmart.cpp::BS_DOUBLE" ref="25e0b0fb7400c28b64cef72dca3d5b1e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BS_DOUBLE&nbsp;&nbsp;&nbsp;0x0208          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="284a45a8662d999d5304daeeea2a235a"></a><!-- doxytag: member="parsmart.cpp::BS_TRIPLE" ref="284a45a8662d999d5304daeeea2a235a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BS_TRIPLE&nbsp;&nbsp;&nbsp;0x0410          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="9f0faf6ed68c1278b537db54e1e5a7a5"></a><!-- doxytag: member="parsmart.cpp::BS_AROM" ref="9f0faf6ed68c1278b537db54e1e5a7a5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BS_AROM&nbsp;&nbsp;&nbsp;0x0100          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="afb2457ef0332ac86bd7d69c7278c7de"></a><!-- doxytag: member="parsmart.cpp::BS_UP" ref="afb2457ef0332ac86bd7d69c7278c7de" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BS_UP&nbsp;&nbsp;&nbsp;0x0084          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="407ce6b09bc7c249f029dc733c8d515c"></a><!-- doxytag: member="parsmart.cpp::BS_DOWN" ref="407ce6b09bc7c249f029dc733c8d515c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BS_DOWN&nbsp;&nbsp;&nbsp;0x0042          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="fdaf6a02cc24882ebb9ef6ee04f1083b"></a><!-- doxytag: member="parsmart.cpp::BS_UPUNSPEC" ref="fdaf6a02cc24882ebb9ef6ee04f1083b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BS_UPUNSPEC&nbsp;&nbsp;&nbsp;0x00A5          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="816ed6318904ccdd7e477d9362fa8a36"></a><!-- doxytag: member="parsmart.cpp::BS_DOWNUNSPEC" ref="816ed6318904ccdd7e477d9362fa8a36" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BS_DOWNUNSPEC&nbsp;&nbsp;&nbsp;0x0063          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d196c5a4a83b706187f63f4f8d738cb1"></a><!-- doxytag: member="parsmart.cpp::BS_RING" ref="d196c5a4a83b706187f63f4f8d738cb1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BS_RING&nbsp;&nbsp;&nbsp;0x07E0          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="217c1292f08e156efcde7a42ed531a55"></a><!-- doxytag: member="parsmart.cpp::BS_DEFAULT" ref="217c1292f08e156efcde7a42ed531a55" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BS_DEFAULT&nbsp;&nbsp;&nbsp;0x01E7          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a893c2c75e0d3d0258e09fbd136ffaed"></a><!-- doxytag: member="parsmart.cpp::BUFMAX" ref="a893c2c75e0d3d0258e09fbd136ffaed" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BUFMAX&nbsp;&nbsp;&nbsp;1024          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="026d3a595081ea26440aef3e527382b8"></a><!-- doxytag: member="parsmart.cpp::OB_EVAL_STACKSIZE" ref="026d3a595081ea26440aef3e527382b8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OB_EVAL_STACKSIZE&nbsp;&nbsp;&nbsp;40          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3212f3e7a4bdeb6d56ceac3c602fbf2a"></a><!-- doxytag: member="parsmart.cpp::RECURSIVE" ref="3212f3e7a4bdeb6d56ceac3c602fbf2a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RECURSIVE          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/">Open Babel</a>, version 2.0.2.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2005, the <a href="http://openbabel.sourceforge.net/THANKS.shtml">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Nov 30 20:18:02 2006 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1.
</div>

</body>
</html>
