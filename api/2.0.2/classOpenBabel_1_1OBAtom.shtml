<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBAtom Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.shtml"><span>Classes</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
    <li><a href="dirs.shtml"><span>Directories</span></a></li>
    <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a></div>
<h1>OBAtom Class Reference</h1><!-- doxytag: class="OpenBabel::OBAtom" --><!-- doxytag: inherits="OpenBabel::OBNodeBase" -->Atom class.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="mol_8h-source.shtml">mol.h</a>&gt;</code>
<p>
Inheritance diagram for OBAtom:<p><center><img src="classOpenBabel_1_1OBAtom__inherit__graph.png" border="0" usemap="#OBAtom__inherit__map" alt="Inheritance graph"></center>
<map name="OBAtom__inherit__map">
<area href="classOpenBabel_1_1OBNodeBase.shtml" shape="rect" coords="8,82,112,109" alt="">
<area href="classOpenBabel_1_1OBBase.shtml" shape="rect" coords="24,8,96,34" alt="">
</map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center><a href="classOpenBabel_1_1OBAtom-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#d5b5ccb4d16c9ce269b65ccc4e7fa1ae">OBAtom</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#d5b5ccb4d16c9ce269b65ccc4e7fa1ae"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#52876d92719e68259ca43bf5cd19349a">~OBAtom</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor.  <a href="#52876d92719e68259ca43bf5cd19349a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#3fa1416db7f7f223cb5d77cc7a916f2e">operator=</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Assignment.  <a href="#3fa1416db7f7f223cb5d77cc7a916f2e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a71d36872f416feaa853788a7a7a7ef8">Clear</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Clear all data.  <a href="#a71d36872f416feaa853788a7a7a7ef8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e93c2ea0464618c797ae509fb3f3f455">GetDistance</a> (int index)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><dl class="return" compact><dt><b>Returns:</b></dt><dd>the distance to the atom defined by <a class="el" href="classOpenBabel_1_1OBMol.shtml#400c1ca5057984dd7e6b1a92be27c441">OBMol::GetAtom()</a> </dd></dl>
 <a href="#e93c2ea0464618c797ae509fb3f3f455"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#c2a0e52810ad157f41a9ecbbae90ee48">GetDistance</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><dl class="return" compact><dt><b>Returns:</b></dt><dd>the distance to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> </dd></dl>
 <a href="#c2a0e52810ad157f41a9ecbbae90ee48"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#02dada3ad01505b2d4ddcbe7b9f006c8">GetAngle</a> (int b, int c)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><dl class="return" compact><dt><b>Returns:</b></dt><dd>the angle defined by this atom -&gt; b (vertex) -&gt; c </dd></dl>
 <a href="#02dada3ad01505b2d4ddcbe7b9f006c8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#6d6d9bdda3f480d358c14b2010034d41">GetAngle</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *b, <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *c)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><dl class="return" compact><dt><b>Returns:</b></dt><dd>the angle defined by this atom -&gt; b (vertex) -&gt; c </dd></dl>
 <a href="#6d6d9bdda3f480d358c14b2010034d41"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#205872bb6f0f1bc7ba69b7264025d4fe">GetParent</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b3a51868ba5353c3272adc612d2105a5">SetParent</a> (<a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set my parent graph.  <a href="#b3a51868ba5353c3272adc612d2105a5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#e5a35d614adf46bcd523bf62de9c81c0">AddEdge</a> (<a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> *b)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Add an edge. Assumes this node is an endpoint of <em>b</em>.  <a href="#e5a35d614adf46bcd523bf62de9c81c0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#2b2654433045d2c2e81a53c25ad99dc2">BeginNbr</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Iterate over my edges, returning my connected nodes.  <a href="#2b2654433045d2c2e81a53c25ad99dc2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#24f4b273e84be464ec0fa7ea3434f21b">NextNbr</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#a4835a0a7276bc7d5480d02d7b3c74cf">Begin</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Iterate over my edges, returning the edges.  <a href="#a4835a0a7276bc7d5480d02d7b3c74cf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#4b9db8b4ae24b4fddd1991bea5c31479">Next</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#489a19494cf46cb8d21b029568df1b75">IsConnected</a> (<a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is <em>OBNodeBase*</em> a beginning or end of some edge of mine?  <a href="#489a19494cf46cb8d21b029568df1b75"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#035ad93c9b173681b6a1829020ee11ca">Error</a> (int f)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Used to signal erroneously calling some of the nonfunctional members.  <a href="#035ad93c9b173681b6a1829020ee11ca"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#85efd9cd89e1611737080229ec6cc38b">DoTransformations</a> (const std::map&lt; std::string, std::string &gt; *pOptions)</td></tr>

<tr><td colspan="2"><div class="groupHeader">Methods to set atomic information</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#b994a975e39f5c62288f4f972b6f90c9">SetIdx</a> (int idx)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set atom index (i.e., in an <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>).  <a href="#b994a975e39f5c62288f4f972b6f90c9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#9ca5228f1b568f7076cd930ad0902a83">SetHyb</a> (int hyb)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set atom hybridization (i.e., 1 = sp, 2 = sp2, 3 = sp3 ...).  <a href="#9ca5228f1b568f7076cd930ad0902a83"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#573a9f96a971854938ab2db5eb4d4851">SetAtomicNum</a> (int atomicnum)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set atomic number.  <a href="#573a9f96a971854938ab2db5eb4d4851"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#90b69b7f0259fe3dcbde073f36ebf1c8">SetIsotope</a> (unsigned int iso)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set isotope number (actual atomic weight is tabulated automatically, 0 = most abundant).  <a href="#90b69b7f0259fe3dcbde073f36ebf1c8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#4ebf98749415a00a56fdbc77f87fdc87">SetImplicitValence</a> (int val)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e048690c14e9258cc653231a56d5dfda">IncrementImplicitValence</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#7acb91a903a31d698dc25d296b988f7f">DecrementImplicitValence</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a1d084182d025e6fa000b928807d7689">SetFormalCharge</a> (int fcharge)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#299285ee1effd21803b3c042a376e149">SetSpinMultiplicity</a> (short spin)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#945b912388c54c9e48c36f11b270b2ce">SetType</a> (char *type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ef1d0a90f7d5dd118380188a882a2480">SetType</a> (std::string &amp;type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#963851351ab3c084233a82d367f15607">SetPartialCharge</a> (double pcharge)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e0293153b661377ffe2028699d2cb652">SetVector</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#d69e26aebea5d59b5d79ccd514631297">SetVector</a> (const double x, const double y, const double z)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#eff361260a8a4e9ea703d5d38f5fc671">SetCoordPtr</a> (double **c)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the position of this atom from a pointer-driven array of coordinates.  <a href="#eff361260a8a4e9ea703d5d38f5fc671"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#5f11d9c7a42f6be6e4b6272526f3ad09">SetVector</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the position of this atom based on the internal pointer array (i.e. from <a class="el" href="classOpenBabel_1_1OBAtom.shtml#eff361260a8a4e9ea703d5d38f5fc671">SetCoordPtr()</a> ).  <a href="#5f11d9c7a42f6be6e4b6272526f3ad09"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#de786f15ee67979fbb9c48970b22e184">SetResidue</a> (<a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *res)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#3d29498c15007d9b6729e26784f23a5b">SetAromatic</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#2fcf3bf429f36281a43c879e40e75f34">UnsetAromatic</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#df069c94123595712cb7fa847b87e449">SetClockwiseStereo</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Mark atom as having SMILES clockwise stereochemistry (i.e., "@@").  <a href="#df069c94123595712cb7fa847b87e449"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#f328f0aa99465103074b1d336c393919">SetAntiClockwiseStereo</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Mark atom as having SMILES anticlockwise stereochemistry (i.e., "@").  <a href="#f328f0aa99465103074b1d336c393919"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#6ddbbbc5f8e185c43e634a0425311275">SetPositiveStereo</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Mark an atom as having + chiral volume.  <a href="#6ddbbbc5f8e185c43e634a0425311275"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ea322d9d450ee48fb2e89a4f7c34deda">SetNegativeStereo</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Mark an atom as having - chiral volume.  <a href="#ea322d9d450ee48fb2e89a4f7c34deda"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#fdf42f73fe8a0cec0db3c3e544830fcc">UnsetStereo</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Clear all stereochemistry information.  <a href="#fdf42f73fe8a0cec0db3c3e544830fcc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e6a016e7f67cf564e5f80254c425f65c">SetInRing</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Mark an atom as belonging to at least one ring.  <a href="#e6a016e7f67cf564e5f80254c425f65c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#d4e5a4c67101743f644b047b632d058b">SetChiral</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Mark an atom as being chiral with unknown stereochemistry.  <a href="#d4e5a4c67101743f644b047b632d058b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#3fa3634d92a924e5af69208768e839a5">ClearCoordPtr</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Clear the internal coordinate pointer.  <a href="#3fa3634d92a924e5af69208768e839a5"></a><br></td></tr>
<tr><td colspan="2"><div class="groupHeader">Methods to retrieve atomic information</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#34d5bb9535dadccfdaaae8b98dab2078">GetFormalCharge</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#90250b249ffa0fcb4daa83bde1ff4614">GetAtomicNum</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned short int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#d61d9e7b9ecdf9ac58a7f0a65a50b066">GetIsotope</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#546f896e98331fe14e5746c53a4a543f">GetSpinMultiplicity</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#2c881c14b105f45a8d7f555aedc12964">GetAtomicMass</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The atomic mass of this atom given by standard IUPAC average molar mass.  <a href="#2c881c14b105f45a8d7f555aedc12964"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#b36dd05b9bb678077bbfd52a952ca72a">GetExactMass</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The atomic mass of given by the isotope (default of 0 s most abundant isotope).  <a href="#b36dd05b9bb678077bbfd52a952ca72a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#44b77545e83209582e42f375c8f40474">GetIdx</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#534869887e7780bf59a97b9c7e38cac9">GetCoordinateIdx</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#036023769d4fee171548943838fa0df1">GetCIdx</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#7bb9aaaed179e592414edfa0331788f6">GetValence</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The current number of explicit connections.  <a href="#7bb9aaaed179e592414edfa0331788f6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#5cfb24ccc82420ec902371aafa91d67e">GetHyb</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The hybridization of this atom (i.e. 1 for sp, 2 for sp2, 3 for sp3).  <a href="#5cfb24ccc82420ec902371aafa91d67e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#d9f36aa26768975a23a6c7b819e79cc0">GetImplicitValence</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The implicit valence of this atom type (i.e. maximum number of connections expected).  <a href="#d9f36aa26768975a23a6c7b819e79cc0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a7fc4fb37c3e28286d47d36b812303d9">GetHvyValence</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The number of non-hydrogens connected to this atom.  <a href="#a7fc4fb37c3e28286d47d36b812303d9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#03272525cd445da2a6ec5507c62fdbda">GetHeteroValence</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The number of heteroatoms connected to an atom.  <a href="#03272525cd445da2a6ec5507c62fdbda"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#7f02f5442f2ed3aa2045587d3319ab7e">GetType</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#9fa6ce00a437dcb7c438cdf669a35fe6">GetX</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The x coordinate.  <a href="#9fa6ce00a437dcb7c438cdf669a35fe6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#6f947fc048c388c2ae724147a2e74ea2">GetY</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The y coordinate.  <a href="#6f947fc048c388c2ae724147a2e74ea2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#2917f1fdbf033388ba0f3b37f5a23303">GetZ</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The z coordinate.  <a href="#2917f1fdbf033388ba0f3b37f5a23303"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#1d181ea8ec179ff8046ef6cf2a8aa232">x</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#52c7eae49e9d0d75c6cc38f61ed526f2">y</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#2d651524c446d89c995be7682931a249">z</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#f9dd6c6924f23479933e0b8779a4bec2">GetCoordinate</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><dl class="return" compact><dt><b>Returns:</b></dt><dd>the coordinates as a double* </dd></dl>
 <a href="#f9dd6c6924f23479933e0b8779a4bec2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#d15ec0c7f87cea35b02269fd53be159c">GetVector</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><dl class="return" compact><dt><b>Returns:</b></dt><dd>the coordinates as a <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> object </dd></dl>
 <a href="#d15ec0c7f87cea35b02269fd53be159c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#eccf78db112723467e7756a5734c82b9">GetPartialCharge</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><dl class="return" compact><dt><b>Returns:</b></dt><dd>the partial charge of this atom, calculating a Gasteiger charge if needed </dd></dl>
 <a href="#eccf78db112723467e7756a5734c82b9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e8533afa0177a165ca51941872f85aee">GetResidue</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#818650a1b97f10bbc2204520ef65ad27">GetNewBondVector</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v, double length)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Create a vector for a new bond from this atom, with length given by the supplied parameter.  <a href="#818650a1b97f10bbc2204520ef65ad27"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ed271572fc66bbef1751cac6ccf3cade">GetBond</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#d3bbdba4326cf884eeb110b02f7caef7">GetNextAtom</a> ()</td></tr>

<tr><td colspan="2"><div class="groupHeader">Iterator methods</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> <br>
* &gt;::iterator&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#0013eaafafe9c56f296b5df105c9c5db">BeginBonds</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> <br>
* &gt;::iterator&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#edc59d43a9b1456aaf55b8286aff33ef">EndBonds</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#5f49793fba8a21464f530dda058765d2">BeginBond</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;i)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#7e5f04807d937ecd9c9eb2274b49f3fc">NextBond</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;i)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#689e8beefe8b7dbcfb1f3f9a75116c49">BeginNbrAtom</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#13e1c4493d4d473725732dc228608ce8">NextNbrAtom</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;)</td></tr>

<tr><td colspan="2"><div class="groupHeader">Addition of residue/bond info. for an atom</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#616b5aac27eec22be5be998bc15d6349">NewResidue</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#85fa173a3c3f488fc691a11eaad81439">DeleteResidue</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#5abeab08afbd305a51b9a9b5bd8fe356">AddBond</a> (<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#05af92c3b1b8ead965d09ce3eeb766df">InsertBond</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;i, <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#1d6c2cf6e5b8ccca827ea3cb0c42db33">DeleteBond</a> (<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#03fe71c8266435b7a76682e5c1472894">ClearBond</a> ()</td></tr>

<tr><td colspan="2"><div class="groupHeader">Requests for atomic property information</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#3be22bbc7a222c8f7255a6f79d937cb4">CountFreeOxygens</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The number of oxygen atoms connected that only have one heavy valence.  <a href="#3be22bbc7a222c8f7255a6f79d937cb4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#7f16ab619578cd847cd1fa024f4ee708">ImplicitHydrogenCount</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The number of hydrogens needed to fill the implicit valence of this atom.  <a href="#7f16ab619578cd847cd1fa024f4ee708"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a753f5025d80e39518cc50c64c6934d0">ExplicitHydrogenCount</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The number of hydrogens explicitly bound to this atom currently.  <a href="#a753f5025d80e39518cc50c64c6934d0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ef9a302705cda0731e77f82f3b1483a0">MemberOfRingCount</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The number of rings that contain this atom.  <a href="#ef9a302705cda0731e77f82f3b1483a0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#f4a516c81946e3a8c0ca80420358dbe2">MemberOfRingSize</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The size of the smallest ring that contains this atom (0 if not in a ring).  <a href="#f4a516c81946e3a8c0ca80420358dbe2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#83db73f33e51b011f21358bd5a0463ff">SmallestBondAngle</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The smallest angle of bonds to this atom.  <a href="#83db73f33e51b011f21358bd5a0463ff"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e9468871377da00c7b949b20d6d17f3d">AverageBondAngle</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The average angle of bonds to this atom.  <a href="#e9468871377da00c7b949b20d6d17f3d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#437ef8d4fce62b10898a074ec147c8c5">BOSum</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The sum of the bond orders of the bonds to the atom (i.e. double bond = 2...).  <a href="#437ef8d4fce62b10898a074ec147c8c5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#c724d08f837518953468665b9dc5ab23">KBOSum</a> () const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The sum of the bond orders of bonds to the atom, considering only KDouble, KTriple bonds.  <a href="#c724d08f837518953468665b9dc5ab23"></a><br></td></tr>
<tr><td colspan="2"><div class="groupHeader">Builder utilities</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#51618686d8ad1b5f66ff2fc2c607493e">HtoMethyl</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">If this is a hydrogen atom, transform into a methyl group.  <a href="#51618686d8ad1b5f66ff2fc2c607493e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#f7a144a4ef755d5cc31e0d2e47a2e84a">SetHybAndGeom</a> (int)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Change the hybridization of this atom and modify the geometry accordingly.  <a href="#f7a144a4ef755d5cc31e0d2e47a2e84a"></a><br></td></tr>
<tr><td colspan="2"><div class="groupHeader">Property information</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e3177d9e8b583d3cda02b90c141894c5">HasResidue</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is there any residue information?  <a href="#e3177d9e8b583d3cda02b90c141894c5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#b633bc0f8f40dfcedf42940ab8a5316c">IsHydrogen</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#1f0a167775136e911cd349cdd8923b24">IsCarbon</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#acb82bc548922e4f1276a255f212f143">IsNitrogen</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#f7e8030ce19d79c9ad0b3cfbf116dc59">IsOxygen</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a71152591d5cc51fc2f3701ff7de7dfd">IsSulfur</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#b8c7f052f9380b98eef3b83da640eba3">IsPhosphorus</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#eda62da8823b248654404fb15f314a66">IsAromatic</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e016e13adf41d7c12a3d22147f0b870e">IsInRing</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#9ca260c28f84147e45c377cdb2254144">IsInRingSize</a> (int) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#d89058fb178a4b056a0786a5ddc8e162">IsHeteroatom</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom an element in the 15th or 16th main groups (i.e., N, O, P, S ...) ?  <a href="#d89058fb178a4b056a0786a5ddc8e162"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#5d150980792220d4929ac312bfce1636">IsNotCorH</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom any element except carbon or hydrogen?  <a href="#5d150980792220d4929ac312bfce1636"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#35892bf1255c1b8824c870e5460fd641">IsConnected</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom connected to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>?  <a href="#35892bf1255c1b8824c870e5460fd641"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#895cbd0d89d126571465b59ee0a3b79a">IsOneThree</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom related to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> in a 1,3 bonding pattern?  <a href="#895cbd0d89d126571465b59ee0a3b79a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#d1b5c7353abc13edd81339fc58206a3b">IsOneFour</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom related to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> in a 1,4 bonding pattern?  <a href="#d1b5c7353abc13edd81339fc58206a3b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#b7dd88da6d7a1e72f636c50586d5551d">IsCarboxylOxygen</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom an oxygen in a carboxyl (-CO2 or CO2H) group?  <a href="#b7dd88da6d7a1e72f636c50586d5551d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#5b1d4c9a297629beacb66c0ef04070e9">IsPhosphateOxygen</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom an oxygen in a phosphate (R-PO3) group?  <a href="#5b1d4c9a297629beacb66c0ef04070e9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#76ecda2fd4bf9207310088f25f526ea8">IsSulfateOxygen</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom an oxygen in a sulfate (-SO3) group?  <a href="#76ecda2fd4bf9207310088f25f526ea8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#256fca254282407b1342875266769463">IsNitroOxygen</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom an oxygen in a nitro (-NO2) group?  <a href="#256fca254282407b1342875266769463"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#c8299dd769242a441864a7ad2fcb92b6">IsAmideNitrogen</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if nitrogen is part of an amide.  <a href="#c8299dd769242a441864a7ad2fcb92b6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#6da4cfc5bbc2e4c9b358bccd5d97e51f">IsPolarHydrogen</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e519982c28911c0906e9181c46d7bdbc">IsNonPolarHydrogen</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#d651ae188decc15fa8ec3907860e585e">IsAromaticNOxide</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#63258442848bd8e29e0d5224e145ad83">IsChiral</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom chiral?  <a href="#63258442848bd8e29e0d5224e145ad83"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#fca1f93ec35d38ad6b7e8eb634bd5d45">IsAxial</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#4d1f38bbe03483629778078dcc4e75a0">IsClockwise</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Does this atom have SMILES-specified clockwise "@@" stereochemistry?  <a href="#4d1f38bbe03483629778078dcc4e75a0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#f3abb70d4f818b9c3e416928afa2e844">IsAntiClockwise</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Does this atom have SMILES-specified anticlockwise "@" stereochemistry?  <a href="#f3abb70d4f818b9c3e416928afa2e844"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#9880a080dd0bce244291bde514b67d20">IsPositiveStereo</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Does this atom have a positive chiral volume?  <a href="#9880a080dd0bce244291bde514b67d20"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#61e5344c34c172e9b889e59255aff6de">IsNegativeStereo</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Does this atom have a negative chiral volume?  <a href="#61e5344c34c172e9b889e59255aff6de"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#8844e382c76003229ee5fdd0341aacee">HasChiralitySpecified</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Does this atom have SMILES-specified stereochemistry?  <a href="#8844e382c76003229ee5fdd0341aacee"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#63911efd550113b275239d322670986d">HasChiralVolume</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Does this atom have a specified chiral volume?  <a href="#63911efd550113b275239d322670986d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#63e02252214e540d56815820715f1ae3">IsHbondAcceptor</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom a hydrogen-bond acceptor (receptor)?  <a href="#63e02252214e540d56815820715f1ae3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#71e3c9571430e3d6587f7b80ee8fb926">IsHbondDonor</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this atom a hydrogen-bond donor?  <a href="#71e3c9571430e3d6587f7b80ee8fb926"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#135d08515315b5daa95e6081dc104a38">IsHbondDonorH</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Is this a hydrogen atom attached to a hydrogen-bond donor?  <a href="#135d08515315b5daa95e6081dc104a38"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#4f5a47b31d2c120928f77dad66e655cc">HasAlphaBetaUnsat</a> (bool includePandS=true)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#301ac695f397cc29112b7ed23bbeaf19">HasBondOfOrder</a> (unsigned int)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#c426597b481468abd4aa5876b87f93b7">CountBondsOfOrder</a> (unsigned int)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e3d85200b00bf0ad59725175d606acfe">HasNonSingleBond</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#f347b80d156587c2287754345606c78d">HasSingleBond</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#0cb35a21cc08897bc7f9b01ae4561e50">HasDoubleBond</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#11bf8aa7f79e9b9bdef2602808bb794d">HasAromaticBond</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#bfdefac42d3c895920f1f715f0d710a5">MatchesSMARTS</a> (const char *)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Determines if this atom matches the first atom in a given SMARTS pattern.  <a href="#bfdefac42d3c895920f1f715f0d710a5"></a><br></td></tr>
<tr><td colspan="2"><div class="groupHeader">Methods for handling generic data</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#1e0f46181273107bdbf5b22ca78755ab">HasData</a> (std::string &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#01b429ffcaf47cf265acd439ed2faca0">HasData</a> (const char *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#54e7fef374c6403d539d4ae484d3024c">HasData</a> (unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#797e5b4d20b6233062d2fdba78a08e06">DeleteData</a> (unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#b586df65e3f115b69510820b34098ce9">DeleteData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af61a3ecb8f2926aaf117299388d43c2">DeleteData</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#db6b0ec89bfea783825b3b466e4dbc00">SetData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#fd4740dfd6a433f49aff61f30a143e2b">DataSize</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> items attached to this atom </dd></dl>
 <a href="#fd4740dfd6a433f49aff61f30a143e2b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ff0af110d6024838f92e367927ac4a69">GetData</a> (unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#f129944bef0a7bce21f2232108fec39a">GetData</a> (std::string &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#483b277678a8ca48998742c80985fd0b">GetData</a> (const char *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#90a551ff0a0ed3fa58745dff0ecacdaa">GetData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> <br>
* &gt;::iterator&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a53a73875031660f8d63e963a248df9f">BeginData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> <br>
* &gt;::iterator&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#23b691092f712f20cf57065f54d2357a">EndData</a> ()</td></tr>

<tr><td colspan="2"><div class="groupHeader">Nonfunctional members</div></td></tr>
<tr><td colspan="2"><div class="groupText">Nonfunctional or unused members of <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OpenBabel::OBNodeBase</a> are to be added by a derived class (e.g., <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OpenBabel::OBAtom</a>) <br><br></div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#10bf6a8a013d39a410b9103b958eac71">SetMatch</a> (<a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#675a2d5448e71b736a5e5141911c4250">Eval</a> (<a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *) const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9c4ebfa43ec90acf76520e6227d1a067">GetMatch</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#6368d7673f23186649b2969ade3661d7">Visit</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Used internally by graph traversal algorithms.  <a href="#6368d7673f23186649b2969ade3661d7"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#cc0aec564b42e181709de3699656f5b1">GetFlag</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#dcdab8f96dc4fdc2940749e527087245">SetFlag</a> (int flag)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#3a1dc0419a66d2e7288214342de43b7a">HasFlag</a> (int flag)</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#28c35937d84aeb0e06ba2705d6cc65fd">_ele</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">atomic number (type char to minimize space -- allows for 0..255 elements)  <a href="#28c35937d84aeb0e06ba2705d6cc65fd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#b3e028e65ae7c0dac55997f2cb7281ce">_impval</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">implicit valence  <a href="#b3e028e65ae7c0dac55997f2cb7281ce"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e34265581460024d37fb0ff25d97f110">_type</a> [6]</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">atomic type  <a href="#e34265581460024d37fb0ff25d97f110"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#6e636025c5db07bf67523b31a55f6327">_fcharge</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">formal charge  <a href="#6e636025c5db07bf67523b31a55f6327"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#d60f474b9381f875e4b6e3f5df457c9a">_isotope</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">isotope (0 = most abundant)  <a href="#d60f474b9381f875e4b6e3f5df457c9a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ec3b74d938a5e47bc6a6627f64d86e27">_spinmultiplicity</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">atomic spin, e.g., 2 for radical 1 or 3 for carbene  <a href="#ec3b74d938a5e47bc6a6627f64d86e27"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#784425337c2c8e7c7116c6b1998162e6">_cidx</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">index into coordinate array  <a href="#784425337c2c8e7c7116c6b1998162e6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#5d400386667c899017669303bdec09cd">_hyb</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">hybridization  <a href="#5d400386667c899017669303bdec09cd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#5cc9f88f4cc5fda10e7932cd59a87f16">_flags</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">bitwise flags (e.g. aromaticity)  <a href="#5cc9f88f4cc5fda10e7932cd59a87f16"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e4b9cf0b2f94fc6befff220367fccd0a">_pcharge</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">partial charge  <a href="#e4b9cf0b2f94fc6befff220367fccd0a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">double **&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#91a32f6c060e12e4d188974db5b111d3">_c</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">coordinate array in double*  <a href="#91a32f6c060e12e4d188974db5b111d3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#e8dcade9402fad862f0391488350ea3e">_v</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">coordinate vector  <a href="#e8dcade9402fad862f0391488350ea3e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#c26545dc3d68694f0a7b6f4a776f7a17">_residue</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">parent residue (if applicable)  <a href="#c26545dc3d68694f0a7b6f4a776f7a17"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#f7811cf8aadbf3b3477c560b0ef2f797">_vdata</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">custom data  <a href="#f7811cf8aadbf3b3477c560b0ef2f797"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned short int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#891ad63852015fb2ddaed4d177e4a104">_idx</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">What is my unique node index? <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#8e7a42e07b55f9e486bafbbb968bc5e1">GetIdx()</a>, <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b994a975e39f5c62288f4f972b6f90c9">SetIdx(int idx)</a>.  <a href="#891ad63852015fb2ddaed4d177e4a104"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9e9a06b4e445a3cbe5d4e09695620dcb">_parent</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">To which graph do I belong? <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#205872bb6f0f1bc7ba69b7264025d4fe">GetParent()</a>, <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b3a51868ba5353c3272adc612d2105a5">SetParent(OBGraphBase*)</a>.  <a href="#9e9a06b4e445a3cbe5d4e09695620dcb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9c8e30c37e33bb11c5dade3984d71200">_vbond</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">What edges or bonds do I have?  <a href="#9c8e30c37e33bb11c5dade3984d71200"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Atom class. 
<p>
To understand the <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> class it is important to state a key decision on which the design was based. In OBabel the atom class existed, but it was only a data container. All data access and modification of atoms was done through the molecule. The result was a molecule class that was very large an unwieldy. So the <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> class was made smarter, and many of the atom-specific routines were separated into the <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> thereby decentralizing and shrinking the <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> class. As a result the <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> class not only holds data, but facilitates extraction of data perceived from both the atom and the molecule.<p>
A number of data extraction methods perform what is called <a href="http://en.wikipedia.org/wiki/Lazy_evaluation">`Lazy Evaluation,'</a> which is essentially on-the-fly evaluation. For example, when an atom is queried as to whether it is cyclic or what it's hybridization state is the information is perceived automatically. The perception of a particular trait is actually performed on the entire molecule the first time it is requested of an atom or bond, and stored for subsequent requests for the same trait of additional atoms or bonds.The <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> class is similar to <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> and the whole of Open Babel in that data access and modification is done through Get and Set methods.<p>
The following code demonstrates how to print out the atom numbers, element numbers, and coordinates of a molecule: <div class="fragment"><pre class="fragment">      OBMol mol;

      FOR_ATOMS_IN_MOL(atom, mol)
      {
      cout &lt;&lt; atom-&gt;GetIdx() &lt;&lt; ` `;
      cout &lt;&lt; atom-&gt;GetAtomicNum() &lt;&lt; ` `;
      cout &lt;&lt; atom-&gt;GetVector() &lt;&lt; endl;
      }
</pre></div> A number of the property member functions indicate that atoms have some knowlege of their covalently attached neighbor atoms. Bonding information is partly redundant within a molecule in that an <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> has a complete list of bonds in a molecule, and an <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> has a list bonds of which it is a member. The following code demonstrates how an <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> uses its bond information to loop over atoms attached to itself: <div class="fragment"><pre class="fragment">      OBMol mol;
      <a class="code" href="classOpenBabel_1_1OBAtom.shtml#d5b5ccb4d16c9ce269b65ccc4e7fa1ae">OBAtom</a> *atom;

      atom = mol.GetAtom(1);
      <a class="code" href="obiter_8h.shtml#18326b3c74bff171f5807ce9725e0c47">FOR_NBORS_OF_ATOM</a>(nbr, atom)
      {
      cout &lt;&lt; <span class="stringliteral">"atom #"</span> &lt;&lt; atom-&gt;GetIdx() &lt;&lt; <span class="stringliteral">" is attached to atom #"</span> &lt;&lt; nbr-&gt;GetIdx() &lt;&lt; endl;
      }
</pre></div><p>
should produce an output like <div class="fragment"><pre class="fragment">      atom #1 is attached to atom #2
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="d5b5ccb4d16c9ce269b65ccc4e7fa1ae"></a><!-- doxytag: member="OpenBabel::OBAtom::OBAtom" ref="d5b5ccb4d16c9ce269b65ccc4e7fa1ae" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>

</div>
</div><p>
<a class="anchor" name="52876d92719e68259ca43bf5cd19349a"></a><!-- doxytag: member="OpenBabel::OBAtom::~OBAtom" ref="52876d92719e68259ca43bf5cd19349a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="cc0aec564b42e181709de3699656f5b1"></a><!-- doxytag: member="OpenBabel::OBAtom::GetFlag" ref="cc0aec564b42e181709de3699656f5b1" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetFlag           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="dcdab8f96dc4fdc2940749e527087245"></a><!-- doxytag: member="OpenBabel::OBAtom::SetFlag" ref="dcdab8f96dc4fdc2940749e527087245" args="(int flag)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFlag           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flag</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3a1dc0419a66d2e7288214342de43b7a"></a><!-- doxytag: member="OpenBabel::OBAtom::HasFlag" ref="3a1dc0419a66d2e7288214342de43b7a" args="(int flag)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasFlag           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flag</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3fa1416db7f7f223cb5d77cc7a916f2e"></a><!-- doxytag: member="OpenBabel::OBAtom::operator=" ref="3fa1416db7f7f223cb5d77cc7a916f2e" args="(OBAtom &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp; operator=           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Assignment. 
<p>

</div>
</div><p>
<a class="anchor" name="a71d36872f416feaa853788a7a7a7ef8"></a><!-- doxytag: member="OpenBabel::OBAtom::Clear" ref="a71d36872f416feaa853788a7a7a7ef8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Clear           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear all data. 
<p>

</div>
</div><p>
<a class="anchor" name="b994a975e39f5c62288f4f972b6f90c9"></a><!-- doxytag: member="OpenBabel::OBAtom::SetIdx" ref="b994a975e39f5c62288f4f972b6f90c9" args="(int idx)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetIdx           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>idx</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set atom index (i.e., in an <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>). 
<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b994a975e39f5c62288f4f972b6f90c9">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="9ca5228f1b568f7076cd930ad0902a83"></a><!-- doxytag: member="OpenBabel::OBAtom::SetHyb" ref="9ca5228f1b568f7076cd930ad0902a83" args="(int hyb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetHyb           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>hyb</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set atom hybridization (i.e., 1 = sp, 2 = sp2, 3 = sp3 ...). 
<p>

</div>
</div><p>
<a class="anchor" name="573a9f96a971854938ab2db5eb4d4851"></a><!-- doxytag: member="OpenBabel::OBAtom::SetAtomicNum" ref="573a9f96a971854938ab2db5eb4d4851" args="(int atomicnum)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAtomicNum           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>atomicnum</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set atomic number. 
<p>

</div>
</div><p>
<a class="anchor" name="90b69b7f0259fe3dcbde073f36ebf1c8"></a><!-- doxytag: member="OpenBabel::OBAtom::SetIsotope" ref="90b69b7f0259fe3dcbde073f36ebf1c8" args="(unsigned int iso)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetIsotope           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>iso</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set isotope number (actual atomic weight is tabulated automatically, 0 = most abundant). 
<p>

</div>
</div><p>
<a class="anchor" name="4ebf98749415a00a56fdbc77f87fdc87"></a><!-- doxytag: member="OpenBabel::OBAtom::SetImplicitValence" ref="4ebf98749415a00a56fdbc77f87fdc87" args="(int val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetImplicitValence           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>val</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e048690c14e9258cc653231a56d5dfda"></a><!-- doxytag: member="OpenBabel::OBAtom::IncrementImplicitValence" ref="e048690c14e9258cc653231a56d5dfda" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IncrementImplicitValence           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="7acb91a903a31d698dc25d296b988f7f"></a><!-- doxytag: member="OpenBabel::OBAtom::DecrementImplicitValence" ref="7acb91a903a31d698dc25d296b988f7f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DecrementImplicitValence           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a1d084182d025e6fa000b928807d7689"></a><!-- doxytag: member="OpenBabel::OBAtom::SetFormalCharge" ref="a1d084182d025e6fa000b928807d7689" args="(int fcharge)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFormalCharge           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>fcharge</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="299285ee1effd21803b3c042a376e149"></a><!-- doxytag: member="OpenBabel::OBAtom::SetSpinMultiplicity" ref="299285ee1effd21803b3c042a376e149" args="(short spin)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetSpinMultiplicity           </td>
          <td>(</td>
          <td class="paramtype">short&nbsp;</td>
          <td class="paramname"> <em>spin</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="945b912388c54c9e48c36f11b270b2ce"></a><!-- doxytag: member="OpenBabel::OBAtom::SetType" ref="945b912388c54c9e48c36f11b270b2ce" args="(char *type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetType           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ef1d0a90f7d5dd118380188a882a2480"></a><!-- doxytag: member="OpenBabel::OBAtom::SetType" ref="ef1d0a90f7d5dd118380188a882a2480" args="(std::string &amp;type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetType           </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="963851351ab3c084233a82d367f15607"></a><!-- doxytag: member="OpenBabel::OBAtom::SetPartialCharge" ref="963851351ab3c084233a82d367f15607" args="(double pcharge)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetPartialCharge           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>pcharge</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e0293153b661377ffe2028699d2cb652"></a><!-- doxytag: member="OpenBabel::OBAtom::SetVector" ref="e0293153b661377ffe2028699d2cb652" args="(vector3 &amp;v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVector           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d69e26aebea5d59b5d79ccd514631297"></a><!-- doxytag: member="OpenBabel::OBAtom::SetVector" ref="d69e26aebea5d59b5d79ccd514631297" args="(const double x, const double y, const double z)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVector           </td>
          <td>(</td>
          <td class="paramtype">const double&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&nbsp;</td>
          <td class="paramname"> <em>z</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="eff361260a8a4e9ea703d5d38f5fc671"></a><!-- doxytag: member="OpenBabel::OBAtom::SetCoordPtr" ref="eff361260a8a4e9ea703d5d38f5fc671" args="(double **c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetCoordPtr           </td>
          <td>(</td>
          <td class="paramtype">double **&nbsp;</td>
          <td class="paramname"> <em>c</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the position of this atom from a pointer-driven array of coordinates. 
<p>

</div>
</div><p>
<a class="anchor" name="5f11d9c7a42f6be6e4b6272526f3ad09"></a><!-- doxytag: member="OpenBabel::OBAtom::SetVector" ref="5f11d9c7a42f6be6e4b6272526f3ad09" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVector           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the position of this atom based on the internal pointer array (i.e. from <a class="el" href="classOpenBabel_1_1OBAtom.shtml#eff361260a8a4e9ea703d5d38f5fc671">SetCoordPtr()</a> ). 
<p>

</div>
</div><p>
<a class="anchor" name="de786f15ee67979fbb9c48970b22e184"></a><!-- doxytag: member="OpenBabel::OBAtom::SetResidue" ref="de786f15ee67979fbb9c48970b22e184" args="(OBResidue *res)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetResidue           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&nbsp;</td>
          <td class="paramname"> <em>res</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3d29498c15007d9b6729e26784f23a5b"></a><!-- doxytag: member="OpenBabel::OBAtom::SetAromatic" ref="3d29498c15007d9b6729e26784f23a5b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAromatic           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#dd9c2a84d6715cf67f8ff53089d0dbc4">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="2fcf3bf429f36281a43c879e40e75f34"></a><!-- doxytag: member="OpenBabel::OBAtom::UnsetAromatic" ref="2fcf3bf429f36281a43c879e40e75f34" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void UnsetAromatic           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="df069c94123595712cb7fa847b87e449"></a><!-- doxytag: member="OpenBabel::OBAtom::SetClockwiseStereo" ref="df069c94123595712cb7fa847b87e449" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetClockwiseStereo           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Mark atom as having SMILES clockwise stereochemistry (i.e., "@@"). 
<p>

</div>
</div><p>
<a class="anchor" name="f328f0aa99465103074b1d336c393919"></a><!-- doxytag: member="OpenBabel::OBAtom::SetAntiClockwiseStereo" ref="f328f0aa99465103074b1d336c393919" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAntiClockwiseStereo           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Mark atom as having SMILES anticlockwise stereochemistry (i.e., "@"). 
<p>

</div>
</div><p>
<a class="anchor" name="6ddbbbc5f8e185c43e634a0425311275"></a><!-- doxytag: member="OpenBabel::OBAtom::SetPositiveStereo" ref="6ddbbbc5f8e185c43e634a0425311275" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetPositiveStereo           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Mark an atom as having + chiral volume. 
<p>

</div>
</div><p>
<a class="anchor" name="ea322d9d450ee48fb2e89a4f7c34deda"></a><!-- doxytag: member="OpenBabel::OBAtom::SetNegativeStereo" ref="ea322d9d450ee48fb2e89a4f7c34deda" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNegativeStereo           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Mark an atom as having - chiral volume. 
<p>

</div>
</div><p>
<a class="anchor" name="fdf42f73fe8a0cec0db3c3e544830fcc"></a><!-- doxytag: member="OpenBabel::OBAtom::UnsetStereo" ref="fdf42f73fe8a0cec0db3c3e544830fcc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void UnsetStereo           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear all stereochemistry information. 
<p>

</div>
</div><p>
<a class="anchor" name="e6a016e7f67cf564e5f80254c425f65c"></a><!-- doxytag: member="OpenBabel::OBAtom::SetInRing" ref="e6a016e7f67cf564e5f80254c425f65c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetInRing           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Mark an atom as belonging to at least one ring. 
<p>

</div>
</div><p>
<a class="anchor" name="d4e5a4c67101743f644b047b632d058b"></a><!-- doxytag: member="OpenBabel::OBAtom::SetChiral" ref="d4e5a4c67101743f644b047b632d058b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetChiral           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Mark an atom as being chiral with unknown stereochemistry. 
<p>

</div>
</div><p>
<a class="anchor" name="3fa3634d92a924e5af69208768e839a5"></a><!-- doxytag: member="OpenBabel::OBAtom::ClearCoordPtr" ref="3fa3634d92a924e5af69208768e839a5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ClearCoordPtr           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear the internal coordinate pointer. 
<p>

</div>
</div><p>
<a class="anchor" name="34d5bb9535dadccfdaaae8b98dab2078"></a><!-- doxytag: member="OpenBabel::OBAtom::GetFormalCharge" ref="34d5bb9535dadccfdaaae8b98dab2078" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetFormalCharge           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#4bf501ba9df18879fa9bc371299f014f">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="90250b249ffa0fcb4daa83bde1ff4614"></a><!-- doxytag: member="OpenBabel::OBAtom::GetAtomicNum" ref="90250b249ffa0fcb4daa83bde1ff4614" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetAtomicNum           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b069256061518868c3414ee9adce4060">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="d61d9e7b9ecdf9ac58a7f0a65a50b066"></a><!-- doxytag: member="OpenBabel::OBAtom::GetIsotope" ref="d61d9e7b9ecdf9ac58a7f0a65a50b066" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short int GetIsotope           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="546f896e98331fe14e5746c53a4a543f"></a><!-- doxytag: member="OpenBabel::OBAtom::GetSpinMultiplicity" ref="546f896e98331fe14e5746c53a4a543f" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetSpinMultiplicity           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="2c881c14b105f45a8d7f555aedc12964"></a><!-- doxytag: member="OpenBabel::OBAtom::GetAtomicMass" ref="2c881c14b105f45a8d7f555aedc12964" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAtomicMass           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The atomic mass of this atom given by standard IUPAC average molar mass. 
<p>

</div>
</div><p>
<a class="anchor" name="b36dd05b9bb678077bbfd52a952ca72a"></a><!-- doxytag: member="OpenBabel::OBAtom::GetExactMass" ref="b36dd05b9bb678077bbfd52a952ca72a" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetExactMass           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The atomic mass of given by the isotope (default of 0 s most abundant isotope). 
<p>

</div>
</div><p>
<a class="anchor" name="44b77545e83209582e42f375c8f40474"></a><!-- doxytag: member="OpenBabel::OBAtom::GetIdx" ref="44b77545e83209582e42f375c8f40474" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetIdx           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#8e7a42e07b55f9e486bafbbb968bc5e1">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="534869887e7780bf59a97b9c7e38cac9"></a><!-- doxytag: member="OpenBabel::OBAtom::GetCoordinateIdx" ref="534869887e7780bf59a97b9c7e38cac9" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetCoordinateIdx           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="036023769d4fee171548943838fa0df1"></a><!-- doxytag: member="OpenBabel::OBAtom::GetCIdx" ref="036023769d4fee171548943838fa0df1" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetCIdx           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000015">Deprecated:</a></b></dt><dd>Use <a class="el" href="classOpenBabel_1_1OBAtom.shtml#534869887e7780bf59a97b9c7e38cac9">GetCoordinateIdx()</a> instead </dd></dl>

</div>
</div><p>
<a class="anchor" name="7bb9aaaed179e592414edfa0331788f6"></a><!-- doxytag: member="OpenBabel::OBAtom::GetValence" ref="7bb9aaaed179e592414edfa0331788f6" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetValence           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The current number of explicit connections. 
<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#15a0f5a268fc6b9105528741e5ab2f4c">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="5cfb24ccc82420ec902371aafa91d67e"></a><!-- doxytag: member="OpenBabel::OBAtom::GetHyb" ref="5cfb24ccc82420ec902371aafa91d67e" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetHyb           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The hybridization of this atom (i.e. 1 for sp, 2 for sp2, 3 for sp3). 
<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9de09505cf4b48dac1bcee09489d2cfa">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="d9f36aa26768975a23a6c7b819e79cc0"></a><!-- doxytag: member="OpenBabel::OBAtom::GetImplicitValence" ref="d9f36aa26768975a23a6c7b819e79cc0" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetImplicitValence           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The implicit valence of this atom type (i.e. maximum number of connections expected). 
<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#c510917e32915fe4fcc1b5eec6da59b8">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="a7fc4fb37c3e28286d47d36b812303d9"></a><!-- doxytag: member="OpenBabel::OBAtom::GetHvyValence" ref="a7fc4fb37c3e28286d47d36b812303d9" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetHvyValence           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The number of non-hydrogens connected to this atom. 
<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#3559c2d9e22d0a6614c73662cd872f8b">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="03272525cd445da2a6ec5507c62fdbda"></a><!-- doxytag: member="OpenBabel::OBAtom::GetHeteroValence" ref="03272525cd445da2a6ec5507c62fdbda" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetHeteroValence           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The number of heteroatoms connected to an atom. 
<p>

</div>
</div><p>
<a class="anchor" name="7f02f5442f2ed3aa2045587d3319ab7e"></a><!-- doxytag: member="OpenBabel::OBAtom::GetType" ref="7f02f5442f2ed3aa2045587d3319ab7e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char * GetType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="9fa6ce00a437dcb7c438cdf669a35fe6"></a><!-- doxytag: member="OpenBabel::OBAtom::GetX" ref="9fa6ce00a437dcb7c438cdf669a35fe6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetX           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The x coordinate. 
<p>

</div>
</div><p>
<a class="anchor" name="6f947fc048c388c2ae724147a2e74ea2"></a><!-- doxytag: member="OpenBabel::OBAtom::GetY" ref="6f947fc048c388c2ae724147a2e74ea2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetY           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The y coordinate. 
<p>

</div>
</div><p>
<a class="anchor" name="2917f1fdbf033388ba0f3b37f5a23303"></a><!-- doxytag: member="OpenBabel::OBAtom::GetZ" ref="2917f1fdbf033388ba0f3b37f5a23303" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetZ           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The z coordinate. 
<p>

</div>
</div><p>
<a class="anchor" name="1d181ea8ec179ff8046ef6cf2a8aa232"></a><!-- doxytag: member="OpenBabel::OBAtom::x" ref="1d181ea8ec179ff8046ef6cf2a8aa232" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double x           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="52c7eae49e9d0d75c6cc38f61ed526f2"></a><!-- doxytag: member="OpenBabel::OBAtom::y" ref="52c7eae49e9d0d75c6cc38f61ed526f2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double y           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="2d651524c446d89c995be7682931a249"></a><!-- doxytag: member="OpenBabel::OBAtom::z" ref="2d651524c446d89c995be7682931a249" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double z           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f9dd6c6924f23479933e0b8779a4bec2"></a><!-- doxytag: member="OpenBabel::OBAtom::GetCoordinate" ref="f9dd6c6924f23479933e0b8779a4bec2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double* GetCoordinate           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the coordinates as a double* </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="d15ec0c7f87cea35b02269fd53be159c"></a><!-- doxytag: member="OpenBabel::OBAtom::GetVector" ref="d15ec0c7f87cea35b02269fd53be159c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp; GetVector           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the coordinates as a <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> object </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="eccf78db112723467e7756a5734c82b9"></a><!-- doxytag: member="OpenBabel::OBAtom::GetPartialCharge" ref="eccf78db112723467e7756a5734c82b9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetPartialCharge           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the partial charge of this atom, calculating a Gasteiger charge if needed </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="e8533afa0177a165ca51941872f85aee"></a><!-- doxytag: member="OpenBabel::OBAtom::GetResidue" ref="e8533afa0177a165ca51941872f85aee" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> * GetResidue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="818650a1b97f10bbc2204520ef65ad27"></a><!-- doxytag: member="OpenBabel::OBAtom::GetNewBondVector" ref="818650a1b97f10bbc2204520ef65ad27" args="(vector3 &amp;v, double length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetNewBondVector           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>length</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Create a vector for a new bond from this atom, with length given by the supplied parameter. 
<p>

</div>
</div><p>
<a class="anchor" name="ed271572fc66bbef1751cac6ccf3cade"></a><!-- doxytag: member="OpenBabel::OBAtom::GetBond" ref="ed271572fc66bbef1751cac6ccf3cade" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * GetBond           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d3bbdba4326cf884eeb110b02f7caef7"></a><!-- doxytag: member="OpenBabel::OBAtom::GetNextAtom" ref="d3bbdba4326cf884eeb110b02f7caef7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * GetNextAtom           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="0013eaafafe9c56f296b5df105c9c5db"></a><!-- doxytag: member="OpenBabel::OBAtom::BeginBonds" ref="0013eaafafe9c56f296b5df105c9c5db" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a>*&gt;::iterator BeginBonds           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000016">Deprecated:</a></b></dt><dd>Use FOR_BONDS_OF_ATOM and <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> instead </dd></dl>

</div>
</div><p>
<a class="anchor" name="edc59d43a9b1456aaf55b8286aff33ef"></a><!-- doxytag: member="OpenBabel::OBAtom::EndBonds" ref="edc59d43a9b1456aaf55b8286aff33ef" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a>*&gt;::iterator EndBonds           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000017">Deprecated:</a></b></dt><dd>Use FOR_BONDS_OF_ATOM and <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> instead </dd></dl>

</div>
</div><p>
<a class="anchor" name="5f49793fba8a21464f530dda058765d2"></a><!-- doxytag: member="OpenBabel::OBAtom::BeginBond" ref="5f49793fba8a21464f530dda058765d2" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * BeginBond           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000018">Deprecated:</a></b></dt><dd>Use FOR_BONDS_OF_ATOM and <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> instead </dd></dl>

</div>
</div><p>
<a class="anchor" name="7e5f04807d937ecd9c9eb2274b49f3fc"></a><!-- doxytag: member="OpenBabel::OBAtom::NextBond" ref="7e5f04807d937ecd9c9eb2274b49f3fc" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * NextBond           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000019">Deprecated:</a></b></dt><dd>Use FOR_BONDS_OF_ATOM and <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> instead </dd></dl>

</div>
</div><p>
<a class="anchor" name="689e8beefe8b7dbcfb1f3f9a75116c49"></a><!-- doxytag: member="OpenBabel::OBAtom::BeginNbrAtom" ref="689e8beefe8b7dbcfb1f3f9a75116c49" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * BeginNbrAtom           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000020">Deprecated:</a></b></dt><dd>Use FOR_NBORS_OF_ATOM and <a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a> instead </dd></dl>

</div>
</div><p>
<a class="anchor" name="13e1c4493d4d473725732dc228608ce8"></a><!-- doxytag: member="OpenBabel::OBAtom::NextNbrAtom" ref="13e1c4493d4d473725732dc228608ce8" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * NextNbrAtom           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000021">Deprecated:</a></b></dt><dd>Use FOR_NBORS_OF_ATOM and <a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a> instead </dd></dl>

</div>
</div><p>
<a class="anchor" name="e93c2ea0464618c797ae509fb3f3f455"></a><!-- doxytag: member="OpenBabel::OBAtom::GetDistance" ref="e93c2ea0464618c797ae509fb3f3f455" args="(int index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetDistance           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the distance to the atom defined by <a class="el" href="classOpenBabel_1_1OBMol.shtml#400c1ca5057984dd7e6b1a92be27c441">OBMol::GetAtom()</a> </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="c2a0e52810ad157f41a9ecbbae90ee48"></a><!-- doxytag: member="OpenBabel::OBAtom::GetDistance" ref="c2a0e52810ad157f41a9ecbbae90ee48" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetDistance           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the distance to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="02dada3ad01505b2d4ddcbe7b9f006c8"></a><!-- doxytag: member="OpenBabel::OBAtom::GetAngle" ref="02dada3ad01505b2d4ddcbe7b9f006c8" args="(int b, int c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAngle           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>c</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the angle defined by this atom -&gt; b (vertex) -&gt; c </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="6d6d9bdda3f480d358c14b2010034d41"></a><!-- doxytag: member="OpenBabel::OBAtom::GetAngle" ref="6d6d9bdda3f480d358c14b2010034d41" args="(OBAtom *b, OBAtom *c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAngle           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>c</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the angle defined by this atom -&gt; b (vertex) -&gt; c </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="616b5aac27eec22be5be998bc15d6349"></a><!-- doxytag: member="OpenBabel::OBAtom::NewResidue" ref="616b5aac27eec22be5be998bc15d6349" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NewResidue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="85fa173a3c3f488fc691a11eaad81439"></a><!-- doxytag: member="OpenBabel::OBAtom::DeleteResidue" ref="85fa173a3c3f488fc691a11eaad81439" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteResidue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="5abeab08afbd305a51b9a9b5bd8fe356"></a><!-- doxytag: member="OpenBabel::OBAtom::AddBond" ref="5abeab08afbd305a51b9a9b5bd8fe356" args="(OBBond *bond)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddBond           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&nbsp;</td>
          <td class="paramname"> <em>bond</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="05af92c3b1b8ead965d09ce3eeb766df"></a><!-- doxytag: member="OpenBabel::OBAtom::InsertBond" ref="05af92c3b1b8ead965d09ce3eeb766df" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;i, OBBond *bond)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void InsertBond           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname"> <em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&nbsp;</td>
          <td class="paramname"> <em>bond</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="1d6c2cf6e5b8ccca827ea3cb0c42db33"></a><!-- doxytag: member="OpenBabel::OBAtom::DeleteBond" ref="1d6c2cf6e5b8ccca827ea3cb0c42db33" args="(OBBond *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool DeleteBond           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="03fe71c8266435b7a76682e5c1472894"></a><!-- doxytag: member="OpenBabel::OBAtom::ClearBond" ref="03fe71c8266435b7a76682e5c1472894" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ClearBond           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3be22bbc7a222c8f7255a6f79d937cb4"></a><!-- doxytag: member="OpenBabel::OBAtom::CountFreeOxygens" ref="3be22bbc7a222c8f7255a6f79d937cb4" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int CountFreeOxygens           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The number of oxygen atoms connected that only have one heavy valence. 
<p>

</div>
</div><p>
<a class="anchor" name="7f16ab619578cd847cd1fa024f4ee708"></a><!-- doxytag: member="OpenBabel::OBAtom::ImplicitHydrogenCount" ref="7f16ab619578cd847cd1fa024f4ee708" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int ImplicitHydrogenCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The number of hydrogens needed to fill the implicit valence of this atom. 
<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#49e6bbcbaad4751595a237ccf4a726f7">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="a753f5025d80e39518cc50c64c6934d0"></a><!-- doxytag: member="OpenBabel::OBAtom::ExplicitHydrogenCount" ref="a753f5025d80e39518cc50c64c6934d0" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int ExplicitHydrogenCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The number of hydrogens explicitly bound to this atom currently. 
<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#6141b303b81c1c161ebc740dbdddd5af">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="ef9a302705cda0731e77f82f3b1483a0"></a><!-- doxytag: member="OpenBabel::OBAtom::MemberOfRingCount" ref="ef9a302705cda0731e77f82f3b1483a0" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int MemberOfRingCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The number of rings that contain this atom. 
<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#f92192d67101c6e3c6a28e2c773a38ea">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="f4a516c81946e3a8c0ca80420358dbe2"></a><!-- doxytag: member="OpenBabel::OBAtom::MemberOfRingSize" ref="f4a516c81946e3a8c0ca80420358dbe2" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int MemberOfRingSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The size of the smallest ring that contains this atom (0 if not in a ring). 
<p>

</div>
</div><p>
<a class="anchor" name="83db73f33e51b011f21358bd5a0463ff"></a><!-- doxytag: member="OpenBabel::OBAtom::SmallestBondAngle" ref="83db73f33e51b011f21358bd5a0463ff" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double SmallestBondAngle           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The smallest angle of bonds to this atom. 
<p>

</div>
</div><p>
<a class="anchor" name="e9468871377da00c7b949b20d6d17f3d"></a><!-- doxytag: member="OpenBabel::OBAtom::AverageBondAngle" ref="e9468871377da00c7b949b20d6d17f3d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double AverageBondAngle           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The average angle of bonds to this atom. 
<p>

</div>
</div><p>
<a class="anchor" name="437ef8d4fce62b10898a074ec147c8c5"></a><!-- doxytag: member="OpenBabel::OBAtom::BOSum" ref="437ef8d4fce62b10898a074ec147c8c5" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int BOSum           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The sum of the bond orders of the bonds to the atom (i.e. double bond = 2...). 
<p>

</div>
</div><p>
<a class="anchor" name="c724d08f837518953468665b9dc5ab23"></a><!-- doxytag: member="OpenBabel::OBAtom::KBOSum" ref="c724d08f837518953468665b9dc5ab23" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int KBOSum           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The sum of the bond orders of bonds to the atom, considering only KDouble, KTriple bonds. 
<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#84c924914199f9814c2d456b827398a9">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="51618686d8ad1b5f66ff2fc2c607493e"></a><!-- doxytag: member="OpenBabel::OBAtom::HtoMethyl" ref="51618686d8ad1b5f66ff2fc2c607493e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HtoMethyl           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
If this is a hydrogen atom, transform into a methyl group. 
<p>

</div>
</div><p>
<a class="anchor" name="f7a144a4ef755d5cc31e0d2e47a2e84a"></a><!-- doxytag: member="OpenBabel::OBAtom::SetHybAndGeom" ref="f7a144a4ef755d5cc31e0d2e47a2e84a" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SetHybAndGeom           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Change the hybridization of this atom and modify the geometry accordingly. 
<p>

</div>
</div><p>
<a class="anchor" name="e3177d9e8b583d3cda02b90c141894c5"></a><!-- doxytag: member="OpenBabel::OBAtom::HasResidue" ref="e3177d9e8b583d3cda02b90c141894c5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasResidue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is there any residue information? 
<p>

</div>
</div><p>
<a class="anchor" name="b633bc0f8f40dfcedf42940ab8a5316c"></a><!-- doxytag: member="OpenBabel::OBAtom::IsHydrogen" ref="b633bc0f8f40dfcedf42940ab8a5316c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHydrogen           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="1f0a167775136e911cd349cdd8923b24"></a><!-- doxytag: member="OpenBabel::OBAtom::IsCarbon" ref="1f0a167775136e911cd349cdd8923b24" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsCarbon           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="acb82bc548922e4f1276a255f212f143"></a><!-- doxytag: member="OpenBabel::OBAtom::IsNitrogen" ref="acb82bc548922e4f1276a255f212f143" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNitrogen           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f7e8030ce19d79c9ad0b3cfbf116dc59"></a><!-- doxytag: member="OpenBabel::OBAtom::IsOxygen" ref="f7e8030ce19d79c9ad0b3cfbf116dc59" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOxygen           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a71152591d5cc51fc2f3701ff7de7dfd"></a><!-- doxytag: member="OpenBabel::OBAtom::IsSulfur" ref="a71152591d5cc51fc2f3701ff7de7dfd" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSulfur           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b8c7f052f9380b98eef3b83da640eba3"></a><!-- doxytag: member="OpenBabel::OBAtom::IsPhosphorus" ref="b8c7f052f9380b98eef3b83da640eba3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPhosphorus           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="eda62da8823b248654404fb15f314a66"></a><!-- doxytag: member="OpenBabel::OBAtom::IsAromatic" ref="eda62da8823b248654404fb15f314a66" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAromatic           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#c2162768d8f994785a10b3db8f948e2f">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="e016e13adf41d7c12a3d22147f0b870e"></a><!-- doxytag: member="OpenBabel::OBAtom::IsInRing" ref="e016e13adf41d7c12a3d22147f0b870e" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInRing           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#a5d38b127e602f58df9d62a21b8cc083">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="9ca260c28f84147e45c377cdb2254144"></a><!-- doxytag: member="OpenBabel::OBAtom::IsInRingSize" ref="9ca260c28f84147e45c377cdb2254144" args="(int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInRingSize           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented from <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#18e68974cbaa19171dfe33026ba8f7b4">OBNodeBase</a>.
</div>
</div><p>
<a class="anchor" name="d89058fb178a4b056a0786a5ddc8e162"></a><!-- doxytag: member="OpenBabel::OBAtom::IsHeteroatom" ref="d89058fb178a4b056a0786a5ddc8e162" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHeteroatom           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom an element in the 15th or 16th main groups (i.e., N, O, P, S ...) ? 
<p>

</div>
</div><p>
<a class="anchor" name="5d150980792220d4929ac312bfce1636"></a><!-- doxytag: member="OpenBabel::OBAtom::IsNotCorH" ref="5d150980792220d4929ac312bfce1636" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNotCorH           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom any element except carbon or hydrogen? 
<p>

</div>
</div><p>
<a class="anchor" name="35892bf1255c1b8824c870e5460fd641"></a><!-- doxytag: member="OpenBabel::OBAtom::IsConnected" ref="35892bf1255c1b8824c870e5460fd641" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConnected           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom connected to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>? 
<p>

</div>
</div><p>
<a class="anchor" name="895cbd0d89d126571465b59ee0a3b79a"></a><!-- doxytag: member="OpenBabel::OBAtom::IsOneThree" ref="895cbd0d89d126571465b59ee0a3b79a" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOneThree           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom related to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> in a 1,3 bonding pattern? 
<p>

</div>
</div><p>
<a class="anchor" name="d1b5c7353abc13edd81339fc58206a3b"></a><!-- doxytag: member="OpenBabel::OBAtom::IsOneFour" ref="d1b5c7353abc13edd81339fc58206a3b" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOneFour           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom related to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> in a 1,4 bonding pattern? 
<p>

</div>
</div><p>
<a class="anchor" name="b7dd88da6d7a1e72f636c50586d5551d"></a><!-- doxytag: member="OpenBabel::OBAtom::IsCarboxylOxygen" ref="b7dd88da6d7a1e72f636c50586d5551d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsCarboxylOxygen           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom an oxygen in a carboxyl (-CO2 or CO2H) group? 
<p>

</div>
</div><p>
<a class="anchor" name="5b1d4c9a297629beacb66c0ef04070e9"></a><!-- doxytag: member="OpenBabel::OBAtom::IsPhosphateOxygen" ref="5b1d4c9a297629beacb66c0ef04070e9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPhosphateOxygen           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom an oxygen in a phosphate (R-PO3) group? 
<p>

</div>
</div><p>
<a class="anchor" name="76ecda2fd4bf9207310088f25f526ea8"></a><!-- doxytag: member="OpenBabel::OBAtom::IsSulfateOxygen" ref="76ecda2fd4bf9207310088f25f526ea8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSulfateOxygen           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom an oxygen in a sulfate (-SO3) group? 
<p>

</div>
</div><p>
<a class="anchor" name="256fca254282407b1342875266769463"></a><!-- doxytag: member="OpenBabel::OBAtom::IsNitroOxygen" ref="256fca254282407b1342875266769463" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNitroOxygen           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom an oxygen in a nitro (-NO2) group? 
<p>

</div>
</div><p>
<a class="anchor" name="c8299dd769242a441864a7ad2fcb92b6"></a><!-- doxytag: member="OpenBabel::OBAtom::IsAmideNitrogen" ref="c8299dd769242a441864a7ad2fcb92b6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAmideNitrogen           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if nitrogen is part of an amide. 
<p>

</div>
</div><p>
<a class="anchor" name="6da4cfc5bbc2e4c9b358bccd5d97e51f"></a><!-- doxytag: member="OpenBabel::OBAtom::IsPolarHydrogen" ref="6da4cfc5bbc2e4c9b358bccd5d97e51f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPolarHydrogen           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e519982c28911c0906e9181c46d7bdbc"></a><!-- doxytag: member="OpenBabel::OBAtom::IsNonPolarHydrogen" ref="e519982c28911c0906e9181c46d7bdbc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNonPolarHydrogen           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d651ae188decc15fa8ec3907860e585e"></a><!-- doxytag: member="OpenBabel::OBAtom::IsAromaticNOxide" ref="d651ae188decc15fa8ec3907860e585e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAromaticNOxide           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="63258442848bd8e29e0d5224e145ad83"></a><!-- doxytag: member="OpenBabel::OBAtom::IsChiral" ref="63258442848bd8e29e0d5224e145ad83" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsChiral           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom chiral? 
<p>

</div>
</div><p>
<a class="anchor" name="fca1f93ec35d38ad6b7e8eb634bd5d45"></a><!-- doxytag: member="OpenBabel::OBAtom::IsAxial" ref="fca1f93ec35d38ad6b7e8eb634bd5d45" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAxial           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="4d1f38bbe03483629778078dcc4e75a0"></a><!-- doxytag: member="OpenBabel::OBAtom::IsClockwise" ref="4d1f38bbe03483629778078dcc4e75a0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsClockwise           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Does this atom have SMILES-specified clockwise "@@" stereochemistry? 
<p>

</div>
</div><p>
<a class="anchor" name="f3abb70d4f818b9c3e416928afa2e844"></a><!-- doxytag: member="OpenBabel::OBAtom::IsAntiClockwise" ref="f3abb70d4f818b9c3e416928afa2e844" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAntiClockwise           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Does this atom have SMILES-specified anticlockwise "@" stereochemistry? 
<p>

</div>
</div><p>
<a class="anchor" name="9880a080dd0bce244291bde514b67d20"></a><!-- doxytag: member="OpenBabel::OBAtom::IsPositiveStereo" ref="9880a080dd0bce244291bde514b67d20" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPositiveStereo           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Does this atom have a positive chiral volume? 
<p>

</div>
</div><p>
<a class="anchor" name="61e5344c34c172e9b889e59255aff6de"></a><!-- doxytag: member="OpenBabel::OBAtom::IsNegativeStereo" ref="61e5344c34c172e9b889e59255aff6de" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNegativeStereo           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Does this atom have a negative chiral volume? 
<p>

</div>
</div><p>
<a class="anchor" name="8844e382c76003229ee5fdd0341aacee"></a><!-- doxytag: member="OpenBabel::OBAtom::HasChiralitySpecified" ref="8844e382c76003229ee5fdd0341aacee" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasChiralitySpecified           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Does this atom have SMILES-specified stereochemistry? 
<p>

</div>
</div><p>
<a class="anchor" name="63911efd550113b275239d322670986d"></a><!-- doxytag: member="OpenBabel::OBAtom::HasChiralVolume" ref="63911efd550113b275239d322670986d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasChiralVolume           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Does this atom have a specified chiral volume? 
<p>

</div>
</div><p>
<a class="anchor" name="63e02252214e540d56815820715f1ae3"></a><!-- doxytag: member="OpenBabel::OBAtom::IsHbondAcceptor" ref="63e02252214e540d56815820715f1ae3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHbondAcceptor           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom a hydrogen-bond acceptor (receptor)? 
<p>

</div>
</div><p>
<a class="anchor" name="71e3c9571430e3d6587f7b80ee8fb926"></a><!-- doxytag: member="OpenBabel::OBAtom::IsHbondDonor" ref="71e3c9571430e3d6587f7b80ee8fb926" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHbondDonor           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this atom a hydrogen-bond donor? 
<p>

</div>
</div><p>
<a class="anchor" name="135d08515315b5daa95e6081dc104a38"></a><!-- doxytag: member="OpenBabel::OBAtom::IsHbondDonorH" ref="135d08515315b5daa95e6081dc104a38" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHbondDonorH           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is this a hydrogen atom attached to a hydrogen-bond donor? 
<p>

</div>
</div><p>
<a class="anchor" name="4f5a47b31d2c120928f77dad66e655cc"></a><!-- doxytag: member="OpenBabel::OBAtom::HasAlphaBetaUnsat" ref="4f5a47b31d2c120928f77dad66e655cc" args="(bool includePandS=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasAlphaBetaUnsat           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>includePandS</em> = <code>true</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="301ac695f397cc29112b7ed23bbeaf19"></a><!-- doxytag: member="OpenBabel::OBAtom::HasBondOfOrder" ref="301ac695f397cc29112b7ed23bbeaf19" args="(unsigned int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasBondOfOrder           </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>int</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="c426597b481468abd4aa5876b87f93b7"></a><!-- doxytag: member="OpenBabel::OBAtom::CountBondsOfOrder" ref="c426597b481468abd4aa5876b87f93b7" args="(unsigned int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int CountBondsOfOrder           </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>int</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e3d85200b00bf0ad59725175d606acfe"></a><!-- doxytag: member="OpenBabel::OBAtom::HasNonSingleBond" ref="e3d85200b00bf0ad59725175d606acfe" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasNonSingleBond           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f347b80d156587c2287754345606c78d"></a><!-- doxytag: member="OpenBabel::OBAtom::HasSingleBond" ref="f347b80d156587c2287754345606c78d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasSingleBond           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="0cb35a21cc08897bc7f9b01ae4561e50"></a><!-- doxytag: member="OpenBabel::OBAtom::HasDoubleBond" ref="0cb35a21cc08897bc7f9b01ae4561e50" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasDoubleBond           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="11bf8aa7f79e9b9bdef2602808bb794d"></a><!-- doxytag: member="OpenBabel::OBAtom::HasAromaticBond" ref="11bf8aa7f79e9b9bdef2602808bb794d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasAromaticBond           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="bfdefac42d3c895920f1f715f0d710a5"></a><!-- doxytag: member="OpenBabel::OBAtom::MatchesSMARTS" ref="bfdefac42d3c895920f1f715f0d710a5" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool MatchesSMARTS           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Determines if this atom matches the first atom in a given SMARTS pattern. 
<p>

</div>
</div><p>
<a class="anchor" name="1e0f46181273107bdbf5b22ca78755ab"></a><!-- doxytag: member="OpenBabel::OBAtom::HasData" ref="1e0f46181273107bdbf5b22ca78755ab" args="(std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="01b429ffcaf47cf265acd439ed2faca0"></a><!-- doxytag: member="OpenBabel::OBAtom::HasData" ref="01b429ffcaf47cf265acd439ed2faca0" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="54e7fef374c6403d539d4ae484d3024c"></a><!-- doxytag: member="OpenBabel::OBAtom::HasData" ref="54e7fef374c6403d539d4ae484d3024c" args="(unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="797e5b4d20b6233062d2fdba78a08e06"></a><!-- doxytag: member="OpenBabel::OBAtom::DeleteData" ref="797e5b4d20b6233062d2fdba78a08e06" args="(unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b586df65e3f115b69510820b34098ce9"></a><!-- doxytag: member="OpenBabel::OBAtom::DeleteData" ref="b586df65e3f115b69510820b34098ce9" args="(OBGenericData *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="af61a3ecb8f2926aaf117299388d43c2"></a><!-- doxytag: member="OpenBabel::OBAtom::DeleteData" ref="af61a3ecb8f2926aaf117299388d43c2" args="(std::vector&lt; OBGenericData * &gt; &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="db6b0ec89bfea783825b3b466e4dbc00"></a><!-- doxytag: member="OpenBabel::OBAtom::SetData" ref="db6b0ec89bfea783825b3b466e4dbc00" args="(OBGenericData *d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="fd4740dfd6a433f49aff61f30a143e2b"></a><!-- doxytag: member="OpenBabel::OBAtom::DataSize" ref="fd4740dfd6a433f49aff61f30a143e2b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int DataSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> items attached to this atom </dd></dl>

<p>

</div>
</div><p>
<a class="anchor" name="ff0af110d6024838f92e367927ac4a69"></a><!-- doxytag: member="OpenBabel::OBAtom::GetData" ref="ff0af110d6024838f92e367927ac4a69" args="(unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f129944bef0a7bce21f2232108fec39a"></a><!-- doxytag: member="OpenBabel::OBAtom::GetData" ref="f129944bef0a7bce21f2232108fec39a" args="(std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="483b277678a8ca48998742c80985fd0b"></a><!-- doxytag: member="OpenBabel::OBAtom::GetData" ref="483b277678a8ca48998742c80985fd0b" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="90a551ff0a0ed3fa58745dff0ecacdaa"></a><!-- doxytag: member="OpenBabel::OBAtom::GetData" ref="90a551ff0a0ed3fa58745dff0ecacdaa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;&amp; GetData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a53a73875031660f8d63e963a248df9f"></a><!-- doxytag: member="OpenBabel::OBAtom::BeginData" ref="a53a73875031660f8d63e963a248df9f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;::iterator BeginData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="23b691092f712f20cf57065f54d2357a"></a><!-- doxytag: member="OpenBabel::OBAtom::EndData" ref="23b691092f712f20cf57065f54d2357a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;::iterator EndData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="205872bb6f0f1bc7ba69b7264025d4fe"></a><!-- doxytag: member="OpenBabel::OBAtom::GetParent" ref="205872bb6f0f1bc7ba69b7264025d4fe" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a>* GetParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b3a51868ba5353c3272adc612d2105a5"></a><!-- doxytag: member="OpenBabel::OBAtom::SetParent" ref="b3a51868ba5353c3272adc612d2105a5" args="(OBGraphBase *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetParent           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set my parent graph. 
<p>

</div>
</div><p>
<a class="anchor" name="e5a35d614adf46bcd523bf62de9c81c0"></a><!-- doxytag: member="OpenBabel::OBAtom::AddEdge" ref="e5a35d614adf46bcd523bf62de9c81c0" args="(OBEdgeBase *b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddEdge           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> *&nbsp;</td>
          <td class="paramname"> <em>b</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Add an edge. Assumes this node is an endpoint of <em>b</em>. 
<p>

</div>
</div><p>
<a class="anchor" name="2b2654433045d2c2e81a53c25ad99dc2"></a><!-- doxytag: member="OpenBabel::OBAtom::BeginNbr" ref="2b2654433045d2c2e81a53c25ad99dc2" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> * BeginNbr           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Iterate over my edges, returning my connected nodes. 
<p>

</div>
</div><p>
<a class="anchor" name="24f4b273e84be464ec0fa7ea3434f21b"></a><!-- doxytag: member="OpenBabel::OBAtom::NextNbr" ref="24f4b273e84be464ec0fa7ea3434f21b" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> * NextNbr           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a4835a0a7276bc7d5480d02d7b3c74cf"></a><!-- doxytag: member="OpenBabel::OBAtom::Begin" ref="a4835a0a7276bc7d5480d02d7b3c74cf" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a>* Begin           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Iterate over my edges, returning the edges. 
<p>

</div>
</div><p>
<a class="anchor" name="4b9db8b4ae24b4fddd1991bea5c31479"></a><!-- doxytag: member="OpenBabel::OBAtom::Next" ref="4b9db8b4ae24b4fddd1991bea5c31479" args="(std::vector&lt; OBEdgeBase * &gt;::iterator &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a>* Next           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a> * &gt;::iterator &amp;&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="489a19494cf46cb8d21b029568df1b75"></a><!-- doxytag: member="OpenBabel::OBAtom::IsConnected" ref="489a19494cf46cb8d21b029568df1b75" args="(OBNodeBase *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConnected           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Is <em>OBNodeBase*</em> a beginning or end of some edge of mine? 
<p>

</div>
</div><p>
<a class="anchor" name="035ad93c9b173681b6a1829020ee11ca"></a><!-- doxytag: member="OpenBabel::OBAtom::Error" ref="035ad93c9b173681b6a1829020ee11ca" args="(int f)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Error           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>f</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Used to signal erroneously calling some of the nonfunctional members. 
<p>

</div>
</div><p>
<a class="anchor" name="10bf6a8a013d39a410b9103b958eac71"></a><!-- doxytag: member="OpenBabel::OBAtom::SetMatch" ref="10bf6a8a013d39a410b9103b958eac71" args="(OBNodeBase *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetMatch           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="675a2d5448e71b736a5e5141911c4250"></a><!-- doxytag: member="OpenBabel::OBAtom::Eval" ref="675a2d5448e71b736a5e5141911c4250" args="(OBNodeBase *) const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Eval           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="9c4ebfa43ec90acf76520e6227d1a067"></a><!-- doxytag: member="OpenBabel::OBAtom::GetMatch" ref="9c4ebfa43ec90acf76520e6227d1a067" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml">OBNodeBase</a>* GetMatch           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="85efd9cd89e1611737080229ec6cc38b"></a><!-- doxytag: member="OpenBabel::OBAtom::DoTransformations" ref="85efd9cd89e1611737080229ec6cc38b" args="(const std::map&lt; std::string, std::string &gt; *pOptions)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* DoTransformations           </td>
          <td>(</td>
          <td class="paramtype">const std::map&lt; std::string, std::string &gt; *&nbsp;</td>
          <td class="paramname"> <em>pOptions</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#035de6b4d4b6834f08d08940911f645d">OBMol</a>.
</div>
</div><p>
<a class="anchor" name="6bb6ed5c064e3957d8dd03aba51e61f7"></a><!-- doxytag: member="OpenBabel::OBAtom::ClassDescription" ref="6bb6ed5c064e3957d8dd03aba51e61f7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static const char* ClassDescription           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, static, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>
Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#b72bba66cc9e40fb3b657a30d87bbe6d">OBMol</a>.
</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="28c35937d84aeb0e06ba2705d6cc65fd"></a><!-- doxytag: member="OpenBabel::OBAtom::_ele" ref="28c35937d84aeb0e06ba2705d6cc65fd" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char <a class="el" href="classOpenBabel_1_1OBAtom.shtml#28c35937d84aeb0e06ba2705d6cc65fd">_ele</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
atomic number (type char to minimize space -- allows for 0..255 elements) 
<p>

</div>
</div><p>
<a class="anchor" name="b3e028e65ae7c0dac55997f2cb7281ce"></a><!-- doxytag: member="OpenBabel::OBAtom::_impval" ref="b3e028e65ae7c0dac55997f2cb7281ce" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char <a class="el" href="classOpenBabel_1_1OBAtom.shtml#b3e028e65ae7c0dac55997f2cb7281ce">_impval</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
implicit valence 
<p>

</div>
</div><p>
<a class="anchor" name="e34265581460024d37fb0ff25d97f110"></a><!-- doxytag: member="OpenBabel::OBAtom::_type" ref="e34265581460024d37fb0ff25d97f110" args="[6]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char <a class="el" href="classOpenBabel_1_1OBAtom.shtml#e34265581460024d37fb0ff25d97f110">_type</a>[6]<code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
atomic type 
<p>

</div>
</div><p>
<a class="anchor" name="6e636025c5db07bf67523b31a55f6327"></a><!-- doxytag: member="OpenBabel::OBAtom::_fcharge" ref="6e636025c5db07bf67523b31a55f6327" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">short <a class="el" href="classOpenBabel_1_1OBAtom.shtml#6e636025c5db07bf67523b31a55f6327">_fcharge</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
formal charge 
<p>

</div>
</div><p>
<a class="anchor" name="d60f474b9381f875e4b6e3f5df457c9a"></a><!-- doxytag: member="OpenBabel::OBAtom::_isotope" ref="d60f474b9381f875e4b6e3f5df457c9a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short <a class="el" href="classOpenBabel_1_1OBAtom.shtml#d60f474b9381f875e4b6e3f5df457c9a">_isotope</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
isotope (0 = most abundant) 
<p>

</div>
</div><p>
<a class="anchor" name="ec3b74d938a5e47bc6a6627f64d86e27"></a><!-- doxytag: member="OpenBabel::OBAtom::_spinmultiplicity" ref="ec3b74d938a5e47bc6a6627f64d86e27" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">short <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ec3b74d938a5e47bc6a6627f64d86e27">_spinmultiplicity</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
atomic spin, e.g., 2 for radical 1 or 3 for carbene 
<p>

</div>
</div><p>
<a class="anchor" name="784425337c2c8e7c7116c6b1998162e6"></a><!-- doxytag: member="OpenBabel::OBAtom::_cidx" ref="784425337c2c8e7c7116c6b1998162e6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short <a class="el" href="classOpenBabel_1_1OBAtom.shtml#784425337c2c8e7c7116c6b1998162e6">_cidx</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
index into coordinate array 
<p>

</div>
</div><p>
<a class="anchor" name="5d400386667c899017669303bdec09cd"></a><!-- doxytag: member="OpenBabel::OBAtom::_hyb" ref="5d400386667c899017669303bdec09cd" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short <a class="el" href="classOpenBabel_1_1OBAtom.shtml#5d400386667c899017669303bdec09cd">_hyb</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
hybridization 
<p>

</div>
</div><p>
<a class="anchor" name="5cc9f88f4cc5fda10e7932cd59a87f16"></a><!-- doxytag: member="OpenBabel::OBAtom::_flags" ref="5cc9f88f4cc5fda10e7932cd59a87f16" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short <a class="el" href="classOpenBabel_1_1OBAtom.shtml#5cc9f88f4cc5fda10e7932cd59a87f16">_flags</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
bitwise flags (e.g. aromaticity) 
<p>

</div>
</div><p>
<a class="anchor" name="e4b9cf0b2f94fc6befff220367fccd0a"></a><!-- doxytag: member="OpenBabel::OBAtom::_pcharge" ref="e4b9cf0b2f94fc6befff220367fccd0a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBAtom.shtml#e4b9cf0b2f94fc6befff220367fccd0a">_pcharge</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
partial charge 
<p>

</div>
</div><p>
<a class="anchor" name="91a32f6c060e12e4d188974db5b111d3"></a><!-- doxytag: member="OpenBabel::OBAtom::_c" ref="91a32f6c060e12e4d188974db5b111d3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double** <a class="el" href="classOpenBabel_1_1OBAtom.shtml#91a32f6c060e12e4d188974db5b111d3">_c</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
coordinate array in double* 
<p>

</div>
</div><p>
<a class="anchor" name="e8dcade9402fad862f0391488350ea3e"></a><!-- doxytag: member="OpenBabel::OBAtom::_v" ref="e8dcade9402fad862f0391488350ea3e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> <a class="el" href="classOpenBabel_1_1OBAtom.shtml#e8dcade9402fad862f0391488350ea3e">_v</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
coordinate vector 
<p>

</div>
</div><p>
<a class="anchor" name="c26545dc3d68694f0a7b6f4a776f7a17"></a><!-- doxytag: member="OpenBabel::OBAtom::_residue" ref="c26545dc3d68694f0a7b6f4a776f7a17" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>* <a class="el" href="classOpenBabel_1_1OBAtom.shtml#c26545dc3d68694f0a7b6f4a776f7a17">_residue</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
parent residue (if applicable) 
<p>

</div>
</div><p>
<a class="anchor" name="f7811cf8aadbf3b3477c560b0ef2f797"></a><!-- doxytag: member="OpenBabel::OBAtom::_vdata" ref="f7811cf8aadbf3b3477c560b0ef2f797" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml#f7811cf8aadbf3b3477c560b0ef2f797">_vdata</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
custom data 
<p>

</div>
</div><p>
<a class="anchor" name="891ad63852015fb2ddaed4d177e4a104"></a><!-- doxytag: member="OpenBabel::OBAtom::_idx" ref="891ad63852015fb2ddaed4d177e4a104" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short int <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#891ad63852015fb2ddaed4d177e4a104">_idx</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
What is my unique node index? <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#8e7a42e07b55f9e486bafbbb968bc5e1">GetIdx()</a>, <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b994a975e39f5c62288f4f972b6f90c9">SetIdx(int idx)</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="9e9a06b4e445a3cbe5d4e09695620dcb"></a><!-- doxytag: member="OpenBabel::OBAtom::_parent" ref="9e9a06b4e445a3cbe5d4e09695620dcb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGraphBase.shtml">OBGraphBase</a>* <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9e9a06b4e445a3cbe5d4e09695620dcb">_parent</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
To which graph do I belong? <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#205872bb6f0f1bc7ba69b7264025d4fe">GetParent()</a>, <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#b3a51868ba5353c3272adc612d2105a5">SetParent(OBGraphBase*)</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="9c8e30c37e33bb11c5dade3984d71200"></a><!-- doxytag: member="OpenBabel::OBAtom::_vbond" ref="9c8e30c37e33bb11c5dade3984d71200" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBEdgeBase.shtml">OBEdgeBase</a>*&gt; <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#9c8e30c37e33bb11c5dade3984d71200">_vbond</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
What edges or bonds do I have? 
<p>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#e5a35d614adf46bcd523bf62de9c81c0">AddEdge()</a>, <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#15a0f5a268fc6b9105528741e5ab2f4c">GetValence()</a>, This node is assumed to be one of the edge endpoints. </dd></dl>

</div>
</div><p>
<a class="anchor" name="6368d7673f23186649b2969ade3661d7"></a><!-- doxytag: member="OpenBabel::OBAtom::Visit" ref="6368d7673f23186649b2969ade3661d7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classOpenBabel_1_1OBNodeBase.shtml#6368d7673f23186649b2969ade3661d7">Visit</a><code> [inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Used internally by graph traversal algorithms. 
<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="mol_8h-source.shtml">mol.h</a><li><a class="el" href="atom_8cpp.shtml">atom.cpp</a></ul>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.sourceforge.net/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.sourceforge.net/">Open Babel</a>, version 2.0.2.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2005, the <a href="http://openbabel.sourceforge.net/THANKS.shtml">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Nov 30 20:18:10 2006 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1.
</div>

</body>
</html>
