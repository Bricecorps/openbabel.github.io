<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBAtomTyper Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml">OBAtomTyper</a>
  </div>
</div>
<div class="contents">
<h1>OBAtomTyper Class Reference</h1><!-- doxytag: class="OpenBabel::OBAtomTyper" --><!-- doxytag: inherits="OpenBabel::OBGlobalDataBase" -->Assigns atom types, hybridization, implicit valence and formal charges.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="typer_8h-source.shtml">openbabel/typer.h</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for OBAtomTyper:</div>
<div class="dynsection">
<p><center><img src="classOpenBabel_1_1OBAtomTyper__inherit__graph.png" border="0" usemap="#OBAtomTyper__inherit__map" alt="Inheritance graph"></center>
<map name="OBAtomTyper__inherit__map">
<area shape="rect" href="classOpenBabel_1_1OBGlobalDataBase.shtml" title="Base data table class, handles reading data files." alt="" coords="5,5,147,32"></map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center></div>

<p>
<a href="classOpenBabel_1_1OBAtomTyper-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#61b00ef5e57c1e79aa59eb0b484f6ea7">OBAtomTyper</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#3f3266f8b50fe9624c1ae700ba3bd632">~OBAtomTyper</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#e59fef8af62e52629bf2576e34a26801">ParseLine</a> (const char *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#93721b9b970ca9a8160f7b831ae7e9d4">GetSize</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#e773554c61c3b4f4c855ead5bec93ee6">AssignHyb</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#d7c6f09e6720f6041c81097b407d0961">AssignTypes</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#86b4345447c96d52bd0f44557729d285">AssignImplicitValence</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#0d8f018cbaaa9d313b45e468f77afea2">CorrectAromaticNitrogens</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#1e3b6d38df0786ccf7f938d60e386aae">Init</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#49002f92ad6a1c71d7f9148271770b7a">SetReadDirectory</a> (char *dir)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#2bd0630d27e20f38de4c753ca68e2282">SetEnvironmentVariable</a> (char *var)</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#40756214f69d1c40ad70b64ae9fdc08d">_init</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#45a08560f2b4885250c586c550f2d7af">_dataptr</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#895aefe990ffe9af66bb5cd4e37d3579">_filename</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#2c2f62a9907553e5feb1ecef65c6c386">_dir</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#5d93159b6eee0cb302451621106f61c7">_subdir</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#87d06c3aed77fb9e118b337bed557928">_envvar</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Assigns atom types, hybridization, implicit valence and formal charges. 
<p>
The <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml" title="Assigns atom types, hybridization, implicit valence and formal charges.">OBAtomTyper</a> class is designed to read in a list of atom typing rules and apply them to molecules. The code that performs atom typing is not usually used directly as atom typing, hybridization assignment, implicit valence assignment and charge are all done automatically when their corresponding values are requested of atoms: <div class="fragment"><pre class="fragment">    atom-&gt;GetType();
    atom-&gt;GetFormalCharge();
    atom-&gt;GetHyb();
</pre></div> <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="61b00ef5e57c1e79aa59eb0b484f6ea7"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::OBAtomTyper" ref="61b00ef5e57c1e79aa59eb0b484f6ea7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml">OBAtomTyper</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3f3266f8b50fe9624c1ae700ba3bd632"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::~OBAtomTyper" ref="3f3266f8b50fe9624c1ae700ba3bd632" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml">OBAtomTyper</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="e59fef8af62e52629bf2576e34a26801"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::ParseLine" ref="e59fef8af62e52629bf2576e34a26801" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ParseLine           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Specified by particular table classes (parses an individual data line). 
<p>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#9a84dbfb089769dec48cd6f6eca1057b">OBGlobalDataBase</a>.</p>

</div>
</div><p>
<a class="anchor" name="93721b9b970ca9a8160f7b831ae7e9d4"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::GetSize" ref="93721b9b970ca9a8160f7b831ae7e9d4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of implicit valence rules </dd></dl>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#79821726c4064984b8847a7bba55f6d3">OBGlobalDataBase</a>.</p>

</div>
</div><p>
<a class="anchor" name="e773554c61c3b4f4c855ead5bec93ee6"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::AssignHyb" ref="e773554c61c3b4f4c855ead5bec93ee6" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AssignHyb           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Assign atomic hybridization (1 = sp, 2 = sp2, 3 = sp3...). 
<p>

<p>Referenced by <a class="el" href="atom_8cpp-source.shtml#l00505">OBAtom::GetHyb()</a>.</p>

</div>
</div><p>
<a class="anchor" name="d7c6f09e6720f6041c81097b407d0961"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::AssignTypes" ref="d7c6f09e6720f6041c81097b407d0961" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AssignTypes           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Assign external atomic types (i.e., EXTTYP lines in atomtyp.txt). 
<p>

<p>Referenced by <a class="el" href="atom_8cpp-source.shtml#l00469">OBAtom::GetType()</a>.</p>

</div>
</div><p>
<a class="anchor" name="86b4345447c96d52bd0f44557729d285"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::AssignImplicitValence" ref="86b4345447c96d52bd0f44557729d285" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AssignImplicitValence           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Assign implicit valence (i.e., given an atomic type, what is the expected number of bonds to this atom 
<p>Referenced by <a class="el" href="atom_8cpp-source.shtml#l00496">OBAtom::GetImplicitValence()</a>, and <a class="el" href="atom_8cpp-source.shtml#l00983">OBAtom::ImplicitHydrogenCount()</a>.</p>

</div>
</div><p>
<a class="anchor" name="0d8f018cbaaa9d313b45e468f77afea2"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::CorrectAromaticNitrogens" ref="0d8f018cbaaa9d313b45e468f77afea2" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CorrectAromaticNitrogens           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Correct typing, valence, and hybridization for aromatic nitrogen atoms. 
<p>
Currently sets <a class="el" href="classOpenBabel_1_1OBMol.shtml#6438e097839dbc98916fb00a3dc67305">OBMol::SetAromaticCorrected</a> and returns. <dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000055">Deprecated:</a></b></dt><dd>Currently unused for anything significant. </dd></dl>

<p>Referenced by <a class="el" href="typer_8cpp-source.shtml#l00225">OBAtomTyper::AssignImplicitValence()</a>, and <a class="el" href="phmodel_8cpp-source.shtml#l00140">OBPhModel::CorrectForPH()</a>.</p>

</div>
</div><p>
<a class="anchor" name="1e3b6d38df0786ccf7f938d60e386aae"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::Init" ref="1e3b6d38df0786ccf7f938d60e386aae" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Init           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Read in the data file, falling back as needed. 
<p>

<p>Referenced by <a class="el" href="typer_8cpp-source.shtml#l00467">OBAromaticTyper::AssignAromaticFlags()</a>, <a class="el" href="data_8cpp-source.shtml#l00645">OBResidueData::AssignBonds()</a>, <a class="el" href="bondtyper_8cpp-source.shtml#l00102">OBBondTyper::AssignFunctionalGroupBonds()</a>, <a class="el" href="typer_8cpp-source.shtml#l00197">OBAtomTyper::AssignHyb()</a>, <a class="el" href="typer_8cpp-source.shtml#l00225">OBAtomTyper::AssignImplicitValence()</a>, <a class="el" href="phmodel_8cpp-source.shtml#l00117">OBPhModel::AssignSeedPartialCharge()</a>, <a class="el" href="typer_8cpp-source.shtml#l00357">OBRingTyper::AssignTypes()</a>, <a class="el" href="typer_8cpp-source.shtml#l00154">OBAtomTyper::AssignTypes()</a>, <a class="el" href="typer_8cpp-source.shtml#l00275">OBAtomTyper::CorrectAromaticNitrogens()</a>, <a class="el" href="data_8cpp-source.shtml#l00250">OBElementTable::CorrectedBondRad()</a>, <a class="el" href="data_8cpp-source.shtml#l00269">OBElementTable::CorrectedVdwRad()</a>, <a class="el" href="phmodel_8cpp-source.shtml#l00140">OBPhModel::CorrectForPH()</a>, <a class="el" href="data_8cpp-source.shtml#l00170">OBElementTable::GetAllredRochowElectroNeg()</a>, <a class="el" href="data_8cpp-source.shtml#l00316">OBElementTable::GetAtomicNum()</a>, <a class="el" href="data_8cpp-source.shtml#l00288">OBElementTable::GetCovalentRad()</a>, <a class="el" href="data_8cpp-source.shtml#l00194">OBElementTable::GetElectronAffinity()</a>, <a class="el" href="data_8cpp-source.shtml#l00159">OBElementTable::GetElectroNeg()</a>, <a class="el" href="data_8cpp-source.shtml#l00382">OBIsotopeTable::GetExactMass()</a>, <a class="el" href="data_8cpp-source.shtml#l00598">OBTypeTable::GetFromType()</a>, <a class="el" href="data_8cpp-source.shtml#l00182">OBElementTable::GetIonization()</a>, <a class="el" href="data_8cpp-source.shtml#l00299">OBElementTable::GetMass()</a>, <a class="el" href="data_8cpp-source.shtml#l00148">OBElementTable::GetMaxBonds()</a>, <a class="el" href="data_8cpp-source.shtml#l00228">OBElementTable::GetName()</a>, <a class="el" href="data_8cpp-source.shtml#l00129">OBElementTable::GetNumberOfElements()</a>, <a class="el" href="data_8cpp-source.shtml#l00205">OBElementTable::GetRGB()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00940">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="data_8cpp-source.shtml#l00137">OBElementTable::GetSymbol()</a>, <a class="el" href="data_8cpp-source.shtml#l00609">OBTypeTable::GetToType()</a>, <a class="el" href="data_8cpp-source.shtml#l00239">OBElementTable::GetVdwRad()</a>, <a class="el" href="data_8cpp-source.shtml#l00489">OBTypeTable::SetFromType()</a>, <a class="el" href="data_8cpp-source.shtml#l00799">OBResidueData::SetResName()</a>, <a class="el" href="data_8cpp-source.shtml#l00509">OBTypeTable::SetToType()</a>, and <a class="el" href="data_8cpp-source.shtml#l00533">OBTypeTable::Translate()</a>.</p>

</div>
</div><p>
<a class="anchor" name="49002f92ad6a1c71d7f9148271770b7a"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::SetReadDirectory" ref="49002f92ad6a1c71d7f9148271770b7a" args="(char *dir)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetReadDirectory           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>dir</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the directory before calling <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#1e3b6d38df0786ccf7f938d60e386aae" title="Read in the data file, falling back as needed.">Init()</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="2bd0630d27e20f38de4c753ca68e2282"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::SetEnvironmentVariable" ref="2bd0630d27e20f38de4c753ca68e2282" args="(char *var)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetEnvironmentVariable           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>var</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the environment variable to use before calling <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#1e3b6d38df0786ccf7f938d60e386aae" title="Read in the data file, falling back as needed.">Init()</a>. 
<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="40756214f69d1c40ad70b64ae9fdc08d"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::_init" ref="40756214f69d1c40ad70b64ae9fdc08d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#40756214f69d1c40ad70b64ae9fdc08d">_init</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Whether the data been read already. 
<p>

<p>Referenced by <a class="el" href="typer_8cpp-source.shtml#l00467">OBAromaticTyper::AssignAromaticFlags()</a>, <a class="el" href="data_8cpp-source.shtml#l00645">OBResidueData::AssignBonds()</a>, <a class="el" href="bondtyper_8cpp-source.shtml#l00102">OBBondTyper::AssignFunctionalGroupBonds()</a>, <a class="el" href="typer_8cpp-source.shtml#l00197">OBAtomTyper::AssignHyb()</a>, <a class="el" href="typer_8cpp-source.shtml#l00225">OBAtomTyper::AssignImplicitValence()</a>, <a class="el" href="phmodel_8cpp-source.shtml#l00117">OBPhModel::AssignSeedPartialCharge()</a>, <a class="el" href="typer_8cpp-source.shtml#l00357">OBRingTyper::AssignTypes()</a>, <a class="el" href="typer_8cpp-source.shtml#l00154">OBAtomTyper::AssignTypes()</a>, <a class="el" href="typer_8cpp-source.shtml#l00275">OBAtomTyper::CorrectAromaticNitrogens()</a>, <a class="el" href="data_8cpp-source.shtml#l00250">OBElementTable::CorrectedBondRad()</a>, <a class="el" href="data_8cpp-source.shtml#l00269">OBElementTable::CorrectedVdwRad()</a>, <a class="el" href="phmodel_8cpp-source.shtml#l00140">OBPhModel::CorrectForPH()</a>, <a class="el" href="data_8cpp-source.shtml#l00170">OBElementTable::GetAllredRochowElectroNeg()</a>, <a class="el" href="data_8cpp-source.shtml#l00316">OBElementTable::GetAtomicNum()</a>, <a class="el" href="data_8cpp-source.shtml#l00288">OBElementTable::GetCovalentRad()</a>, <a class="el" href="data_8cpp-source.shtml#l00194">OBElementTable::GetElectronAffinity()</a>, <a class="el" href="data_8cpp-source.shtml#l00159">OBElementTable::GetElectroNeg()</a>, <a class="el" href="data_8cpp-source.shtml#l00382">OBIsotopeTable::GetExactMass()</a>, <a class="el" href="data_8cpp-source.shtml#l00598">OBTypeTable::GetFromType()</a>, <a class="el" href="data_8cpp-source.shtml#l00182">OBElementTable::GetIonization()</a>, <a class="el" href="data_8cpp-source.shtml#l00299">OBElementTable::GetMass()</a>, <a class="el" href="data_8cpp-source.shtml#l00148">OBElementTable::GetMaxBonds()</a>, <a class="el" href="data_8cpp-source.shtml#l00228">OBElementTable::GetName()</a>, <a class="el" href="data_8cpp-source.shtml#l00129">OBElementTable::GetNumberOfElements()</a>, <a class="el" href="data_8cpp-source.shtml#l00205">OBElementTable::GetRGB()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00940">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="data_8cpp-source.shtml#l00137">OBElementTable::GetSymbol()</a>, <a class="el" href="data_8cpp-source.shtml#l00609">OBTypeTable::GetToType()</a>, <a class="el" href="data_8cpp-source.shtml#l00239">OBElementTable::GetVdwRad()</a>, <a class="el" href="data_8cpp-source.shtml#l00867">OBGlobalDataBase::Init()</a>, <a class="el" href="typer_8cpp-source.shtml#l00411">OBAromaticTyper::OBAromaticTyper()</a>, <a class="el" href="typer_8cpp-source.shtml#l00055">OBAtomTyper::OBAtomTyper()</a>, <a class="el" href="bondtyper_8cpp-source.shtml#l00041">OBBondTyper::OBBondTyper()</a>, <a class="el" href="data_8cpp-source.shtml#l00080">OBElementTable::OBElementTable()</a>, <a class="el" href="data_8cpp-source.shtml#l00344">OBIsotopeTable::OBIsotopeTable()</a>, <a class="el" href="phmodel_8cpp-source.shtml#l00040">OBPhModel::OBPhModel()</a>, <a class="el" href="data_8cpp-source.shtml#l00635">OBResidueData::OBResidueData()</a>, <a class="el" href="typer_8cpp-source.shtml#l00315">OBRingTyper::OBRingTyper()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00853">OBRotorRules::OBRotorRules()</a>, <a class="el" href="data_8cpp-source.shtml#l00451">OBTypeTable::OBTypeTable()</a>, <a class="el" href="data_8cpp-source.shtml#l00489">OBTypeTable::SetFromType()</a>, <a class="el" href="data_8cpp-source.shtml#l00799">OBResidueData::SetResName()</a>, <a class="el" href="data_8cpp-source.shtml#l00509">OBTypeTable::SetToType()</a>, and <a class="el" href="data_8cpp-source.shtml#l00533">OBTypeTable::Translate()</a>.</p>

</div>
</div><p>
<a class="anchor" name="45a08560f2b4885250c586c550f2d7af"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::_dataptr" ref="45a08560f2b4885250c586c550f2d7af" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#45a08560f2b4885250c586c550f2d7af">_dataptr</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Default data table if file is unreadable. 
<p>

<p>Referenced by <a class="el" href="data_8cpp-source.shtml#l00867">OBGlobalDataBase::Init()</a>, <a class="el" href="typer_8cpp-source.shtml#l00411">OBAromaticTyper::OBAromaticTyper()</a>, <a class="el" href="typer_8cpp-source.shtml#l00055">OBAtomTyper::OBAtomTyper()</a>, <a class="el" href="bondtyper_8cpp-source.shtml#l00041">OBBondTyper::OBBondTyper()</a>, <a class="el" href="data_8cpp-source.shtml#l00080">OBElementTable::OBElementTable()</a>, <a class="el" href="data_8cpp-source.shtml#l00344">OBIsotopeTable::OBIsotopeTable()</a>, <a class="el" href="phmodel_8cpp-source.shtml#l00040">OBPhModel::OBPhModel()</a>, <a class="el" href="data_8cpp-source.shtml#l00635">OBResidueData::OBResidueData()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00853">OBRotorRules::OBRotorRules()</a>, and <a class="el" href="data_8cpp-source.shtml#l00451">OBTypeTable::OBTypeTable()</a>.</p>

</div>
</div><p>
<a class="anchor" name="895aefe990ffe9af66bb5cd4e37d3579"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::_filename" ref="895aefe990ffe9af66bb5cd4e37d3579" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#895aefe990ffe9af66bb5cd4e37d3579">_filename</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
File to search for. 
<p>

<p>Referenced by <a class="el" href="data_8cpp-source.shtml#l00867">OBGlobalDataBase::Init()</a>, <a class="el" href="typer_8cpp-source.shtml#l00411">OBAromaticTyper::OBAromaticTyper()</a>, <a class="el" href="typer_8cpp-source.shtml#l00055">OBAtomTyper::OBAtomTyper()</a>, <a class="el" href="bondtyper_8cpp-source.shtml#l00041">OBBondTyper::OBBondTyper()</a>, <a class="el" href="data_8cpp-source.shtml#l00080">OBElementTable::OBElementTable()</a>, <a class="el" href="data_8cpp-source.shtml#l00344">OBIsotopeTable::OBIsotopeTable()</a>, <a class="el" href="phmodel_8cpp-source.shtml#l00040">OBPhModel::OBPhModel()</a>, <a class="el" href="data_8cpp-source.shtml#l00635">OBResidueData::OBResidueData()</a>, <a class="el" href="typer_8cpp-source.shtml#l00315">OBRingTyper::OBRingTyper()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00853">OBRotorRules::OBRotorRules()</a>, and <a class="el" href="data_8cpp-source.shtml#l00451">OBTypeTable::OBTypeTable()</a>.</p>

</div>
</div><p>
<a class="anchor" name="2c2f62a9907553e5feb1ecef65c6c386"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::_dir" ref="2c2f62a9907553e5feb1ecef65c6c386" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#2c2f62a9907553e5feb1ecef65c6c386">_dir</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Data directory for file if _envvar fails. 
<p>

<p>Referenced by <a class="el" href="typer_8cpp-source.shtml#l00411">OBAromaticTyper::OBAromaticTyper()</a>, <a class="el" href="typer_8cpp-source.shtml#l00055">OBAtomTyper::OBAtomTyper()</a>, <a class="el" href="bondtyper_8cpp-source.shtml#l00041">OBBondTyper::OBBondTyper()</a>, <a class="el" href="data_8cpp-source.shtml#l00080">OBElementTable::OBElementTable()</a>, <a class="el" href="data_8cpp-source.shtml#l00344">OBIsotopeTable::OBIsotopeTable()</a>, <a class="el" href="phmodel_8cpp-source.shtml#l00040">OBPhModel::OBPhModel()</a>, <a class="el" href="data_8cpp-source.shtml#l00635">OBResidueData::OBResidueData()</a>, <a class="el" href="typer_8cpp-source.shtml#l00315">OBRingTyper::OBRingTyper()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00853">OBRotorRules::OBRotorRules()</a>, and <a class="el" href="data_8cpp-source.shtml#l00451">OBTypeTable::OBTypeTable()</a>.</p>

</div>
</div><p>
<a class="anchor" name="5d93159b6eee0cb302451621106f61c7"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::_subdir" ref="5d93159b6eee0cb302451621106f61c7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#5d93159b6eee0cb302451621106f61c7">_subdir</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Subdirectory (if using environment variable). 
<p>

<p>Referenced by <a class="el" href="typer_8cpp-source.shtml#l00411">OBAromaticTyper::OBAromaticTyper()</a>, <a class="el" href="typer_8cpp-source.shtml#l00055">OBAtomTyper::OBAtomTyper()</a>, <a class="el" href="bondtyper_8cpp-source.shtml#l00041">OBBondTyper::OBBondTyper()</a>, <a class="el" href="data_8cpp-source.shtml#l00080">OBElementTable::OBElementTable()</a>, <a class="el" href="data_8cpp-source.shtml#l00344">OBIsotopeTable::OBIsotopeTable()</a>, <a class="el" href="phmodel_8cpp-source.shtml#l00040">OBPhModel::OBPhModel()</a>, <a class="el" href="data_8cpp-source.shtml#l00635">OBResidueData::OBResidueData()</a>, <a class="el" href="typer_8cpp-source.shtml#l00315">OBRingTyper::OBRingTyper()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00853">OBRotorRules::OBRotorRules()</a>, and <a class="el" href="data_8cpp-source.shtml#l00451">OBTypeTable::OBTypeTable()</a>.</p>

</div>
</div><p>
<a class="anchor" name="87d06c3aed77fb9e118b337bed557928"></a><!-- doxytag: member="OpenBabel::OBAtomTyper::_envvar" ref="87d06c3aed77fb9e118b337bed557928" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#87d06c3aed77fb9e118b337bed557928">_envvar</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Environment variable to check first. 
<p>

<p>Referenced by <a class="el" href="data_8cpp-source.shtml#l00867">OBGlobalDataBase::Init()</a>, <a class="el" href="typer_8cpp-source.shtml#l00411">OBAromaticTyper::OBAromaticTyper()</a>, <a class="el" href="typer_8cpp-source.shtml#l00055">OBAtomTyper::OBAtomTyper()</a>, <a class="el" href="bondtyper_8cpp-source.shtml#l00041">OBBondTyper::OBBondTyper()</a>, <a class="el" href="data_8cpp-source.shtml#l00080">OBElementTable::OBElementTable()</a>, <a class="el" href="data_8cpp-source.shtml#l00344">OBIsotopeTable::OBIsotopeTable()</a>, <a class="el" href="phmodel_8cpp-source.shtml#l00040">OBPhModel::OBPhModel()</a>, <a class="el" href="data_8cpp-source.shtml#l00635">OBResidueData::OBResidueData()</a>, <a class="el" href="typer_8cpp-source.shtml#l00315">OBRingTyper::OBRingTyper()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00853">OBRotorRules::OBRotorRules()</a>, and <a class="el" href="data_8cpp-source.shtml#l00451">OBTypeTable::OBTypeTable()</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="typer_8h-source.shtml">typer.h</a><li><a class="el" href="typer_8cpp.shtml">typer.cpp</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:41 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
