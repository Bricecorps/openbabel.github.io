<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBBuilder Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBBuilder.shtml">OBBuilder</a>
  </div>
</div>
<div class="contents">
<h1>OBBuilder Class Reference</h1><!-- doxytag: class="OpenBabel::OBBuilder" -->Class to build 3D structures.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="builder_8h-source.shtml">openbabel/builder.h</a>&gt;</code>
<p>

<p>
<a href="classOpenBabel_1_1OBBuilder-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBuilder.shtml#fe0a7e760f4908db34dfb69dc65d3bba">LoadFragments</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBuilder.shtml#f20dd57788f4898cd7377dffe63986fc">Build</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>

<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBuilder.shtml#103258e3f686fac67714a2a847bd7466">GetNewBondVector</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBuilder.shtml#d0cefa50ad126c06c03bad33175ce2b4">GetNewBondVector</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, double length)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBuilder.shtml#be40cdbb1abc8939273d9cde6b7b638a">Connect</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, int a, int b, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;newpos, int bondOrder=1)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBuilder.shtml#f123db2b6c32f7d210f4455e7fb8cccc">Connect</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, int a, int b, int bondOrder=1)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBuilder.shtml#b97bb4c77a46265bdedaead1a6463ca7">Swap</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, int a, int b, int c, int d)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBuilder.shtml#6898b04c792072e4ace54885e9ff7b10">CorrectStereoBonds</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBuilder.shtml#568e42fdfa07962a14761bb9875ee138">CorrectStereoAtoms</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBuilder.shtml#3ab05c6d2aa0e1597398b85b825b57b1">GetFragment</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBuilder.shtml#26e58d067cc3985a84fbf5cfa031947d">AddNbrs</a> (<a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;fragment, <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Class to build 3D structures. 
<p>
Class for 3D structure generation.<p>
<dl class="since" compact><dt><b>Since:</b></dt><dd>version 2.2</dd></dl>
The <a class="el" href="classOpenBabel_1_1OBBuilder.shtml" title="Class to build 3D structures.">OBBuilder</a> class is used for generating 3D structures.<p>
Below is and example which explain the basics.<p>
<div class="fragment"><pre class="fragment">      <span class="comment">//</span>
      <span class="comment">// code to read molecule from smiles goes here...</span>
      <span class="comment">//</span>
      OBBuilder builder;
      builder.Build(mol);
      <span class="comment">//</span>
      <span class="comment">// code to write molecule to 3D file format goes here...</span>
      <span class="comment">//</span>
</pre></div> <hr><h2>Member Function Documentation</h2>
<a class="anchor" name="fe0a7e760f4908db34dfb69dc65d3bba"></a><!-- doxytag: member="OpenBabel::OBBuilder::LoadFragments" ref="fe0a7e760f4908db34dfb69dc65d3bba" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void LoadFragments           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Load fragment info from file, if is it has not already been done. 
<p>

<p>Referenced by <a class="el" href="builder_8cpp-source.shtml#l00484">OBBuilder::Build()</a>.</p>

</div>
</div><p>
<a class="anchor" name="103258e3f686fac67714a2a847bd7466"></a><!-- doxytag: member="OpenBabel::OBBuilder::GetNewBondVector" ref="103258e3f686fac67714a2a847bd7466" args="(OBAtom *atom)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetNewBondVector           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the position for a new neighbour on atom. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>atom</em>&nbsp;</td><td>Atom for which we want a new neighbour location. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The position for the new atom. </dd></dl>

<p>Referenced by <a class="el" href="mol_8cpp-source.shtml#l01837">OBMol::AddHydrogens()</a>, <a class="el" href="builder_8cpp-source.shtml#l00484">OBBuilder::Build()</a>, and <a class="el" href="builder_8cpp-source.shtml#l00271">OBBuilder::Connect()</a>.</p>

</div>
</div><p>
<a class="anchor" name="d0cefa50ad126c06c03bad33175ce2b4"></a><!-- doxytag: member="OpenBabel::OBBuilder::GetNewBondVector" ref="d0cefa50ad126c06c03bad33175ce2b4" args="(OBAtom *atom, double length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetNewBondVector           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>length</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f20dd57788f4898cd7377dffe63986fc"></a><!-- doxytag: member="OpenBabel::OBBuilder::Build" ref="f20dd57788f4898cd7377dffe63986fc" args="(OBMol &amp;mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Build           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The mol object contains all connectivity information (atomic numbers, bonds, bond orders, ..) but no 3D coordinates. Build generates these coordinates and assigns them. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mol</em>&nbsp;</td><td>Molecule with the connectivity (from smiles for example). The coordinates are also changed in this mol. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="be40cdbb1abc8939273d9cde6b7b638a"></a><!-- doxytag: member="OpenBabel::OBBuilder::Connect" ref="be40cdbb1abc8939273d9cde6b7b638a" args="(OBMol &amp;mol, int a, int b, vector3 &amp;newpos, int bondOrder=1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Connect           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>newpos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>bondOrder</em> = <code>1</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Atoms a and b are part of two fragments that are not connected in mol. Connect will translate and rotate the fragment that contains b so that a and b are seperated by a bond. This bond is also added. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mol</em>&nbsp;</td><td>The molecule to be modified </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>Index for atom in fragment that should not be rotated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>Index for atom in fragment that should be rotated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>newpos</em>&nbsp;</td><td>Direction for new bond between a and b </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bondOrder</em>&nbsp;</td><td>Bond order of the new bond between a and b. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>true if succesful or fails when failed (most likely cause for failing: a and b are in the same fragment, they are connected) </dd></dl>

<p>Referenced by <a class="el" href="builder_8cpp-source.shtml#l00484">OBBuilder::Build()</a>, <a class="el" href="builder_8cpp-source.shtml#l00382">OBBuilder::Connect()</a>, and <a class="el" href="builder_8cpp-source.shtml#l00409">OBBuilder::Swap()</a>.</p>

</div>
</div><p>
<a class="anchor" name="f123db2b6c32f7d210f4455e7fb8cccc"></a><!-- doxytag: member="OpenBabel::OBBuilder::Connect" ref="f123db2b6c32f7d210f4455e7fb8cccc" args="(OBMol &amp;mol, int a, int b, int bondOrder=1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Connect           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>bondOrder</em> = <code>1</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Atoms a and b are part of two fragments that are not connected in mol. Connect will translate and rotate the fragment that contains b so that a and b are seperated by a bond. This bond is also added. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mol</em>&nbsp;</td><td>The molecule to be modified </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>Index for atom in fragment that should not be rotated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>b</em>&nbsp;</td><td>Index for atom in fragment that should be rotated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bondOrder</em>&nbsp;</td><td>Bond order of the new bond bewtween a and b. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>true if succesfull or fails when failed (most likely cause for failing: a and b are in the same fragment, they are connected) </dd></dl>

</div>
</div><p>
<a class="anchor" name="b97bb4c77a46265bdedaead1a6463ca7"></a><!-- doxytag: member="OpenBabel::OBBuilder::Swap" ref="b97bb4c77a46265bdedaead1a6463ca7" args="(OBMol &amp;mol, int a, int b, int c, int d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Swap           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>d</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Swap group b, bonded to a with group d, bonded to c. The bonds a-b and b-c cannot be part of a ring. Atoms a and b will not be moved. Atoms b, d and their connected atoms (after deleting bonds ab and cd) will be translated/rotated.<p>
Example: <div class="fragment"><pre class="fragment">    \ /                            /
     b                            d
      \     /     <a class="code" href="classOpenBabel_1_1OBBuilder.shtml#b97bb4c77a46265bdedaead1a6463ca7">Swap</a>(a,b,c,d)    \     /
       a---x          ----&gt;         a---x 
      /     \     /                /     \     /
     x       c---d                x       c---b
                                               \
</pre></div><p>
This function can also be used to invert chiral centers if a and c are the same atom.<p>
Example <div class="fragment"><pre class="fragment">     1                        3
     |      <a class="code" href="classOpenBabel_1_1OBBuilder.shtml#b97bb4c77a46265bdedaead1a6463ca7">Swap</a>(<a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#bc5c98fcc1211af2b80116dd6e0a035d739ce3f516592d245d16fd8a3893472c">C</a>,1,<a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#bc5c98fcc1211af2b80116dd6e0a035d739ce3f516592d245d16fd8a3893472c">C</a>,3)     |
  2&gt;-<a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#bc5c98fcc1211af2b80116dd6e0a035d739ce3f516592d245d16fd8a3893472c">C</a>-&lt;3      -----&gt;      2&gt;-<a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#bc5c98fcc1211af2b80116dd6e0a035d739ce3f516592d245d16fd8a3893472c">C</a>-&lt;1
     |                        |
     4                        4
</pre></div> 
<p>Referenced by <a class="el" href="builder_8cpp-source.shtml#l00698">OBBuilder::CorrectStereoAtoms()</a>.</p>

</div>
</div><p>
<a class="anchor" name="6898b04c792072e4ace54885e9ff7b10"></a><!-- doxytag: member="OpenBabel::OBBuilder::CorrectStereoBonds" ref="6898b04c792072e4ace54885e9ff7b10" args="(OBMol &amp;mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CorrectStereoBonds           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Atoms a and b must be bonded and this bond cannot be part of a ring. The bond will be broken and the smiles fragment will be inserted bewteen the two remaining fragments. The fragment that contains a will not be translated or rotated. Parameters c and d are the index in the smiles to which atoms a and b will be connected respectivly.<p>
Currently only corrects double bond chemistry comming from smiles. (<a class="el" href="classOpenBabel_1_1OBBond.shtml#1733c541422f1bec76b19733d5f6f046">OBBond::IsUp()</a> / <a class="el" href="classOpenBabel_1_1OBBond.shtml#4ff4d4e51ec0a91f7b8174265de188e7">OBBond::IsDown()</a>) 
<p>Referenced by <a class="el" href="builder_8cpp-source.shtml#l00484">OBBuilder::Build()</a>.</p>

</div>
</div><p>
<a class="anchor" name="568e42fdfa07962a14761bb9875ee138"></a><!-- doxytag: member="OpenBabel::OBBuilder::CorrectStereoAtoms" ref="568e42fdfa07962a14761bb9875ee138" args="(OBMol &amp;mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CorrectStereoAtoms           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Currently only corrects atom chirality comming from smiles. (OBAtom::IsClockwize() / OBBond::IsAntiClockwise()) 
<p>Referenced by <a class="el" href="builder_8cpp-source.shtml#l00484">OBBuilder::Build()</a>.</p>

</div>
</div><p>
<a class="anchor" name="3ab05c6d2aa0e1597398b85b825b57b1"></a><!-- doxytag: member="OpenBabel::OBBuilder::GetFragment" ref="3ab05c6d2aa0e1597398b85b825b57b1" args="(OBAtom *atom)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> GetFragment           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the fragment to which this atom belongs. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>atom</em>&nbsp;</td><td>Atom in the fragment. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The <a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits.">OBBitVec</a> defining the fragment to which a belongs. </dd></dl>

<p>Referenced by <a class="el" href="builder_8cpp-source.shtml#l00484">OBBuilder::Build()</a>, and <a class="el" href="builder_8cpp-source.shtml#l00271">OBBuilder::Connect()</a>.</p>

</div>
</div><p>
<a class="anchor" name="26e58d067cc3985a84fbf5cfa031947d"></a><!-- doxytag: member="OpenBabel::OBBuilder::AddNbrs" ref="26e58d067cc3985a84fbf5cfa031947d" args="(OBBitVec &amp;fragment, OBAtom *atom)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddNbrs           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>fragment</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>atom</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="builder_8cpp-source.shtml#l00463">OBBuilder::GetFragment()</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="builder_8h-source.shtml">builder.h</a><li><a class="el" href="builder_8cpp.shtml">builder.cpp</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:38 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
