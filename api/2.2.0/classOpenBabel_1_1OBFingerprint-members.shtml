<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: Member List</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>OBFingerprint Member List</h1>This is the complete list of members for <a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#1f8d25dafb0bc13814ca451035f67955">_id</a></td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#706e628de74c41f357e6fe9de774111c">BaseFindType</a>(PluginMapType &amp;Map, const char *ID)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, protected, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#1d4d73999ab0518ee471c635bd0a7e87">Begin</a>(const char *PluginID)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#1a7cbd70f2c24b00f1d0a6dc19e2b519">DescribeBits</a>(const std::vector&lt; unsigned int &gt; fp, bool bSet=true)</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#4a6b8d1611d5d963fc29982cc1ebcbf7">Description</a>()</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#e0859fdbf134af95a8231eb32c73b7db">Display</a>(std::string &amp;txt, const char *param, const char *ID=NULL)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#9a330280c1cd2e7119dac87a6fd0b762">End</a>(const char *PluginID)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#3f95fb7efe843a55b087edd16fbe4012">FindFingerprint</a>(const char *ID)</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td><code> [inline, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#84fc973fdf4bba5a6b0e2d402077991c">FirstLine</a>(const char *txt)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#94a94537cc5ba96b1876db1b612b91a3">Flags</a>()</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#9bbe06daca0e9e000492cc6a89d7dabd">Fold</a>(std::vector&lt; unsigned int &gt; &amp;vec, unsigned int nbits)</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#48c2b72feb2607662249c83e85ce665ba6c1016f52874254ed7604c44df21cca">FPT_UNIQUEBITS</a> enum value</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#48c2b72feb2607662249c83e85ce665b">FptFlag</a> enum name</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#41fefad793d68714c5a0732b000bd1b2">GetBit</a>(const std::vector&lt; unsigned int &gt; &amp;vec, const unsigned int n)</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#d9ecfee3be06f4c37ef48506100f6f0c">Getbitsperint</a>()</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td><code> [inline, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#462db518c432fa8fab958b8dd32d8a05">GetFingerprint</a>(OBBase *pOb, std::vector&lt; unsigned int &gt; &amp;fp, int nbits=0)=0</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td><code> [pure virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#753a34173c6750388d33e5294556790f">GetID</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#abc1385cbe63145ffec6edf1f2c3be98">GetMap</a>() const =0</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [pure virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#c8ba4fe4a0634561ddd4667c8ef28ae1">GetPlugin</a>(const char *Type, const char *ID)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#dfcf9fda27cfbc4301fc94517a4250ef">GetTypeMap</a>(const char *PluginID)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [protected, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#9fabfd2513038ae6ac475ac0ff2c73cd">List</a>(const char *PluginID, const char *param=NULL, std::ostream *os=&amp;std::cout)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#ba22c5352d36c7f058299af7ddffb03e">ListAsString</a>(const char *PluginID, const char *param=NULL)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#f95953a5793333ba51e978c4a0a00103">ListAsVector</a>(const char *PluginID, const char *param, std::vector&lt; std::string &gt; &amp;vlist)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#9399e9568ab809d714385f1b237a9335">MakeInstance</a>(const std::vector&lt; std::string &gt; &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#8fac85f5497f873a2dd8734b47f0bdc0">PluginIterator</a> typedef</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#c40457336d7b12bb632b4ac4e8955a3a">PluginMap</a>()</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, protected, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#0fd3c807ed3341c33070c93b14739bc8">PluginMapType</a> typedef</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#70768d339cbfa0146c7f1cd278e05e19">SetBit</a>(std::vector&lt; unsigned int &gt; &amp;vec, const unsigned int n)</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#f244b13b4b50bb9343f3026d7372e964">Tanimoto</a>(const std::vector&lt; unsigned int &gt; &amp;vec1, const std::vector&lt; unsigned int &gt; &amp;vec2)</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#e6df021d906a48593e8f9ed11bd8d128">Tanimoto</a>(const std::vector&lt; unsigned int &gt; &amp;vec1, const unsigned int *p2)</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td><code> [inline, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml#55f9725c7e338f4d4c2d9f7a7c34f0cb">~OBFingerprint</a>()</td><td><a class="el" href="classOpenBabel_1_1OBFingerprint.shtml">OBFingerprint</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#2f6f0f4ddec879439f78de686c459fb0">~OBPlugin</a>()</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, virtual]</code></td></tr>
</table></div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:39 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
