<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: _BondExpr Union Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="unionOpenBabel_1_1__BondExpr.shtml">_BondExpr</a>
  </div>
</div>
<div class="contents">
<h1>_BondExpr Union Reference</h1><!-- doxytag: class="OpenBabel::_BondExpr" -->An internal (SMARTS parser) bond expression.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="parsmart_8h-source.shtml">openbabel/parsmart.h</a>&gt;</code>
<p>

<p>
<a href="unionOpenBabel_1_1__BondExpr-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#c765329451135abec74c45e1897abf26">type</a></td></tr>

<tr><td class="memItemLeft" nowrap>struct {</td></tr>

<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;<a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#c765329451135abec74c45e1897abf26">type</a></td></tr>

<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;<a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#4a8f6c91eefb9c6bf448592aac44153d">prop</a></td></tr>

<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;<a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#c4f474c82e82cbb89ca7c36dd52be0ed">value</a></td></tr>

<tr><td class="memItemLeft" nowrap valign="top">}&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#4a0d624c9057273e648793dddb94373e">leaf</a></td></tr>

<tr><td class="memItemLeft" nowrap>struct {</td></tr>

<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;<a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#c765329451135abec74c45e1897abf26">type</a></td></tr>

<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;union <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml">_BondExpr</a> *&nbsp;&nbsp;&nbsp;<a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#e83b8626d4f03cc85eb9cd454d01dfeb">arg</a></td></tr>

<tr><td class="memItemLeft" nowrap valign="top">}&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#6357983f075e558206585d863e6cc3cf">mon</a></td></tr>

<tr><td class="memItemLeft" nowrap>struct {</td></tr>

<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;<a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#c765329451135abec74c45e1897abf26">type</a></td></tr>

<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;union <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml">_BondExpr</a> *&nbsp;&nbsp;&nbsp;<a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#cc869ddf951fb816bc6971baf892a666">lft</a></td></tr>

<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;union <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml">_BondExpr</a> *&nbsp;&nbsp;&nbsp;<a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#92d143f4a18107be5ba1889660041341">rgt</a></td></tr>

<tr><td class="memItemLeft" nowrap valign="top">}&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#43e8776e29b2251326c76a5f42193eeb">bin</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
An internal (SMARTS parser) bond expression. <hr><h2>Member Data Documentation</h2>
<a class="anchor" name="c765329451135abec74c45e1897abf26"></a><!-- doxytag: member="OpenBabel::_BondExpr::type" ref="c765329451135abec74c45e1897abf26" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#c765329451135abec74c45e1897abf26">type</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="parsmart_8cpp-source.shtml#l00449">OpenBabel::BuildBondBin()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00428">OpenBabel::BuildBondLeaf()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00439">OpenBabel::BuildBondNot()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00345">OpenBabel::CopyBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00369">OpenBabel::EquivalentBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02929">OpenBabel::EvalBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00403">OpenBabel::FreeBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02422">OpenBabel::GetBondExprIndex()</a>, and <a class="el" href="parsmart_8cpp-source.shtml#l03114">OpenBabel::GetExprOrder()</a>.</p>

</div>
</div><p>
<a class="anchor" name="4a8f6c91eefb9c6bf448592aac44153d"></a><!-- doxytag: member="OpenBabel::_BondExpr::prop" ref="4a8f6c91eefb9c6bf448592aac44153d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#4a8f6c91eefb9c6bf448592aac44153d">prop</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="parsmart_8cpp-source.shtml#l00428">OpenBabel::BuildBondLeaf()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00345">OpenBabel::CopyBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00369">OpenBabel::EquivalentBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02929">OpenBabel::EvalBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02395">OpenBabel::GetBondLeafIndex()</a>, and <a class="el" href="parsmart_8cpp-source.shtml#l03114">OpenBabel::GetExprOrder()</a>.</p>

</div>
</div><p>
<a class="anchor" name="c4f474c82e82cbb89ca7c36dd52be0ed"></a><!-- doxytag: member="OpenBabel::_BondExpr::value" ref="c4f474c82e82cbb89ca7c36dd52be0ed" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#c4f474c82e82cbb89ca7c36dd52be0ed">value</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="parsmart_8cpp-source.shtml#l00428">OpenBabel::BuildBondLeaf()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00345">OpenBabel::CopyBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00369">OpenBabel::EquivalentBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02929">OpenBabel::EvalBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02395">OpenBabel::GetBondLeafIndex()</a>, and <a class="el" href="parsmart_8cpp-source.shtml#l03114">OpenBabel::GetExprOrder()</a>.</p>

</div>
</div><p>
<a class="anchor" name="4a0d624c9057273e648793dddb94373e"></a><!-- doxytag: member="OpenBabel::_BondExpr::leaf" ref="4a0d624c9057273e648793dddb94373e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct { ... } 
       <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#4a0d624c9057273e648793dddb94373e">leaf</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="parsmart_8cpp-source.shtml#l00428">OpenBabel::BuildBondLeaf()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00345">OpenBabel::CopyBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00369">OpenBabel::EquivalentBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02929">OpenBabel::EvalBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02395">OpenBabel::GetBondLeafIndex()</a>, and <a class="el" href="parsmart_8cpp-source.shtml#l03114">OpenBabel::GetExprOrder()</a>.</p>

</div>
</div><p>
<a class="anchor" name="e83b8626d4f03cc85eb9cd454d01dfeb"></a><!-- doxytag: member="OpenBabel::_BondExpr::arg" ref="e83b8626d4f03cc85eb9cd454d01dfeb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml">_BondExpr</a>* <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#e83b8626d4f03cc85eb9cd454d01dfeb">arg</a><code> [write]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="parsmart_8cpp-source.shtml#l00439">OpenBabel::BuildBondNot()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00345">OpenBabel::CopyBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00369">OpenBabel::EquivalentBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02929">OpenBabel::EvalBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00403">OpenBabel::FreeBondExpr()</a>, and <a class="el" href="parsmart_8cpp-source.shtml#l02422">OpenBabel::GetBondExprIndex()</a>.</p>

</div>
</div><p>
<a class="anchor" name="6357983f075e558206585d863e6cc3cf"></a><!-- doxytag: member="OpenBabel::_BondExpr::mon" ref="6357983f075e558206585d863e6cc3cf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct { ... } 
       <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#6357983f075e558206585d863e6cc3cf">mon</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="parsmart_8cpp-source.shtml#l00439">OpenBabel::BuildBondNot()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00345">OpenBabel::CopyBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00369">OpenBabel::EquivalentBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02929">OpenBabel::EvalBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00403">OpenBabel::FreeBondExpr()</a>, and <a class="el" href="parsmart_8cpp-source.shtml#l02422">OpenBabel::GetBondExprIndex()</a>.</p>

</div>
</div><p>
<a class="anchor" name="cc869ddf951fb816bc6971baf892a666"></a><!-- doxytag: member="OpenBabel::_BondExpr::lft" ref="cc869ddf951fb816bc6971baf892a666" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml">_BondExpr</a>* <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#cc869ddf951fb816bc6971baf892a666">lft</a><code> [write]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="parsmart_8cpp-source.shtml#l00449">OpenBabel::BuildBondBin()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00345">OpenBabel::CopyBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00369">OpenBabel::EquivalentBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02929">OpenBabel::EvalBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00403">OpenBabel::FreeBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02422">OpenBabel::GetBondExprIndex()</a>, and <a class="el" href="parsmart_8cpp-source.shtml#l03114">OpenBabel::GetExprOrder()</a>.</p>

</div>
</div><p>
<a class="anchor" name="92d143f4a18107be5ba1889660041341"></a><!-- doxytag: member="OpenBabel::_BondExpr::rgt" ref="92d143f4a18107be5ba1889660041341" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml">_BondExpr</a>* <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#92d143f4a18107be5ba1889660041341">rgt</a><code> [write]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="parsmart_8cpp-source.shtml#l00449">OpenBabel::BuildBondBin()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00345">OpenBabel::CopyBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00369">OpenBabel::EquivalentBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02929">OpenBabel::EvalBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00403">OpenBabel::FreeBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02422">OpenBabel::GetBondExprIndex()</a>, and <a class="el" href="parsmart_8cpp-source.shtml#l03114">OpenBabel::GetExprOrder()</a>.</p>

</div>
</div><p>
<a class="anchor" name="43e8776e29b2251326c76a5f42193eeb"></a><!-- doxytag: member="OpenBabel::_BondExpr::bin" ref="43e8776e29b2251326c76a5f42193eeb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct { ... } 
       <a class="el" href="unionOpenBabel_1_1__BondExpr.shtml#43e8776e29b2251326c76a5f42193eeb">bin</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="parsmart_8cpp-source.shtml#l00449">OpenBabel::BuildBondBin()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00345">OpenBabel::CopyBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00369">OpenBabel::EquivalentBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02929">OpenBabel::EvalBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l00403">OpenBabel::FreeBondExpr()</a>, <a class="el" href="parsmart_8cpp-source.shtml#l02422">OpenBabel::GetBondExprIndex()</a>, and <a class="el" href="parsmart_8cpp-source.shtml#l03114">OpenBabel::GetExprOrder()</a>.</p>

</div>
</div><p>
<hr>The documentation for this union was generated from the following file:<ul>
<li><a class="el" href="parsmart_8h-source.shtml">parsmart.h</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:41 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
