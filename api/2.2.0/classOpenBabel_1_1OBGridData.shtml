<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBGridData Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBGridData.shtml">OBGridData</a>
  </div>
</div>
<div class="contents">
<h1>OBGridData Class Reference</h1><!-- doxytag: class="OpenBabel::OBGridData" --><!-- doxytag: inherits="OpenBabel::OBGenericData" -->Store values for numeric grids such as orbitals or electrostatic potential.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="griddata_8h-source.shtml">openbabel/griddata.h</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for OBGridData:</div>
<div class="dynsection">
<p><center><img src="classOpenBabel_1_1OBGridData__inherit__graph.png" border="0" usemap="#OBGridData__inherit__map" alt="Inheritance graph"></center>
<map name="OBGridData__inherit__map">
<area shape="rect" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data." alt="" coords="5,5,123,32"></map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center></div>

<p>
<a href="classOpenBabel_1_1OBGridData-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#bceb2331ad056e3c5ad27894199a49ed">Unit</a> { <a class="el" href="classOpenBabel_1_1OBGridData.shtml#bceb2331ad056e3c5ad27894199a49ed1ed8947227c706dcf6ce20f2dabecbb0">BOHR</a>, 
<a class="el" href="classOpenBabel_1_1OBGridData.shtml#bceb2331ad056e3c5ad27894199a49edc0ff23bb2caec4483def76b5ac62f0ad">ANGSTROM</a>, 
<a class="el" href="classOpenBabel_1_1OBGridData.shtml#bceb2331ad056e3c5ad27894199a49eddbf1dee1b8cd7ea3c82661943c7b74f4">OTHER</a>
 }</td></tr>

<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#3759224f5030c8385542bcb899465b6e">OBGridData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#7f927f99da289ae1cb3f9da64ee9d429">~OBGridData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#67bda850335747e7ac5d66629bda0a67">Clone</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ae3d15983201a2a115701b2c538fef77">SetAttribute</a> (const std::string &amp;v)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#45613e34598a9584fb0120ef3fdab9e0">SetOrigin</a> (const <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a> s)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const std::string &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#c72c28db8b5bb8911845ada56220a1e0">GetAttribute</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#c20b99b31895c99422fb1244def6e213">GetDataType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const std::string &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#c9527475c246fadbbab63a35376fd5fe">GetValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#d080c58f230c474935ed3e27cb2ba906">GetOrigin</a> () const </td></tr>

<tr><td colspan="2"><div class="groupHeader">Property Methods</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#8f99a95e113289b791979a0949ebff51">GetAxes</a> (double x[3], double y[3], double z[3]) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#664e46425ebb4de07d1d3d44eced9fd7">GetXAxis</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#f7bce82f6dfeb2b4f04f243e23e74dca">GetYAxis</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#299ca4b8330c823e4c771888b09ac5ea">GetZAxis</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#039b9b89c60f700b720e1ecb705c31df">GetAxes</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v1, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v2, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v3) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#5b11216aacdb5a5d6c827ae33a0948d8">GetNumberOfPoints</a> (int &amp;nx, int &amp;ny, int &amp;nz) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#c9c8dab0c9b1ff40b9a62ae274284ca2">GetNumberOfPoints</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#22d3c24ecf14a00aeee444b63e57ca67">GetNumberOfSteps</a> (int steps[3]) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; double &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#9b5e89e70ca1fe3e99d802c0e020dd07">GetValues</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#c7d6b0a20315fa1a88926cb31ce96b63">GetValue</a> (int i, int j, int k) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#da9d79c923a5ed1b0edd0571f80c7537">GetValue</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> pos) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#bceb2331ad056e3c5ad27894199a49ed">Unit</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#425800b2d3fa62addcdcd18ad09b3d06">GetUnit</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#96de6cade8fdffe8a36cb68f9958284d">GetMinValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#e986e6ee03886af15440c86a780eb854">GetMaxValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#fd1372eb23d785e07609b4ee1558ea96">GetOriginVector</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#49001a7fa2061cbf41d8ec868a895f92">GetOriginVector</a> (double o[3]) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#6451a826110b46a7cbf8b3b2d69adfed">GetMaxVector</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#c8ee105dfe7a85ecb276eda28b6b7d9a">GetUnrestricted</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#51394d46f39c8aaa712c10c32e4200f9">GetNumSymmetries</a> () const </td></tr>

<tr><td colspan="2"><div class="groupHeader">Modification Methods</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#8e057288f32449cbd79175447a8eec49">SetNumberOfPoints</a> (int nx, int ny, int nz)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#0b9fb0de3277dd55625e632bc4f0ab5b">SetLimits</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;origin, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;x, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;y, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;z)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#009627e179cde33c9c0150d6a06214fd">SetLimits</a> (const double origin[3], const double x[3], const double y[3], const double z[3])</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#8e87e5ca8491e61def25764da4fdb46d">SetValue</a> (int i, int j, int k, double val)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#3384333ba39252b46f5189ca43baa2d1">SetValues</a> (const std::vector&lt; double &gt; &amp;v)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#29b2f36979b70af2f1793b4754e6d4b4">SetUnit</a> (<a class="el" href="classOpenBabel_1_1OBGridData.shtml#bceb2331ad056e3c5ad27894199a49ed">Unit</a> u)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#d4c371035d64f046b9728f27fbe48678">SetUnrestricted</a> (bool u)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#6fc7e124f35cd07bffc7a9acb2c6f294">SetNumSymmetries</a> (int s)</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#dceb77134f15418a66cf1124dcef1b51">_attr</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#31291823d487a4a47f24aae5870505ef">_type</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#239606b62a534e4df7626ea0cfdfb856">_source</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Store values for numeric grids such as orbitals or electrostatic potential. 
<p>
<dl class="since" compact><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml" title="Handle double precision floating point 3D grids (e.g., charge density around an OBMol)...">OBFloatGrid</a></dd></dl>
<a class="el" href="classOpenBabel_1_1OBGridData.shtml" title="Store values for numeric grids such as orbitals or electrostatic potential.">OBGridData</a> facilitates attaching grids and cubes to molecular data. A "grid" is data representing some function f(x,y,z), such as a molecule's electrostatic potential or molecular orbitals. This need not be a "cube" even though this file format from Gaussian is frequently used. Axes need not be identical, and indeed do not need to be orthogonal.<p>
Open Babel supports reading several types of grid file formats, including Gaussian cube, and OpenDX. The latter is notably used by the APBS program for numeric evaluation of molecular and protein electrostatic potential.<p>
<div class="fragment"><pre class="fragment">    <a class="code" href="classOpenBabel_1_1OBGridData.shtml#3759224f5030c8385542bcb899465b6e" title="Constructor.">OBGridData</a> *gd = <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBGridData.shtml#3759224f5030c8385542bcb899465b6e" title="Constructor.">OBGridData</a>;
    gd-&gt;SetAttribute(<span class="stringliteral">"Example Grid"</span>); <span class="comment">// the title of the grid -- e.g., for user display</span>
    vector&lt;int&gt; voxels(3); <span class="comment">// the number of voxels in each direction</span>
    vector3 origin; <span class="comment">// the beginning x, y, z coordinate of the grid</span>
    vector&lt;vector3&gt; axes; <span class="comment">// the xyz displacements for each of the grid axes</span>
    ...
    gd-&gt;SetNumberOfPoints(voxels[0], voxels[1], voxels[2]);
    gd-&gt;SetLimits(origin, axes[0], axes[1], axes[2]);
    gd-&gt;SetUnit(<a class="code" href="classOpenBabel_1_1OBGridData.shtml#bceb2331ad056e3c5ad27894199a49edc0ff23bb2caec4483def76b5ac62f0ad">OBGridData::ANGSTROM</a>);
    gd-&gt;SetOrigin(<a class="code" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14887e83e320499ec89236722bbdf56f50" title="Read from an input file.">fileformatInput</a>); <span class="comment">// i.e., is this data from a file or determined by Open Babel</span>
    
    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k = 0; k &lt; voxels[2]; ++k)
      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; voxels[1]; ++j)
        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; voxels[0]; ++i)
          {
            gd-&gt;SetValue(i, j, k, 
                         grid[k*voxels[0]*voxels[1] + j*voxels[0] + i]);
          }
    
    mol-&gt;SetData(gd);
</pre></div><p>
<div class="fragment"><pre class="fragment">    <span class="keywordflow">if</span> (mol-&gt;HasData(<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#06fc87d81c62e9abb8790b6e5713c55b851ab4fe739bc6b4cc7b968ab9c4e61d" title="Grid Data (e.g., 3D grids of data a.k.a. cubes).">OBGenericDataType::GridData</a>)) {
      vector&lt;OBGenericData*&gt; grids = mol-&gt;GetAllData(<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#06fc87d81c62e9abb8790b6e5713c55b851ab4fe739bc6b4cc7b968ab9c4e61d" title="Grid Data (e.g., 3D grids of data a.k.a. cubes).">OBGenericDataType::GridData</a>)
      <span class="comment">// Output the name of the grid</span>
      <span class="keywordflow">if</span> (grids[0] != NULL)
        cout &lt;&lt; grids[0]-&gt;GetAttribute();
    }
</pre></div> <hr><h2>Member Enumeration Documentation</h2>
<a class="anchor" name="bceb2331ad056e3c5ad27894199a49ed"></a><!-- doxytag: member="OpenBabel::OBGridData::Unit" ref="bceb2331ad056e3c5ad27894199a49ed" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classOpenBabel_1_1OBGridData.shtml#bceb2331ad056e3c5ad27894199a49ed">Unit</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Unit of measure for grid spacings. 
<p>
<dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="bceb2331ad056e3c5ad27894199a49ed1ed8947227c706dcf6ce20f2dabecbb0"></a><!-- doxytag: member="BOHR" ref="bceb2331ad056e3c5ad27894199a49ed1ed8947227c706dcf6ce20f2dabecbb0" args="" -->BOHR</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="bceb2331ad056e3c5ad27894199a49edc0ff23bb2caec4483def76b5ac62f0ad"></a><!-- doxytag: member="ANGSTROM" ref="bceb2331ad056e3c5ad27894199a49edc0ff23bb2caec4483def76b5ac62f0ad" args="" -->ANGSTROM</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="bceb2331ad056e3c5ad27894199a49eddbf1dee1b8cd7ea3c82661943c7b74f4"></a><!-- doxytag: member="OTHER" ref="bceb2331ad056e3c5ad27894199a49eddbf1dee1b8cd7ea3c82661943c7b74f4" args="" -->OTHER</em>&nbsp;</td><td>
</td></tr>
</table>
</dl>

</div>
</div><p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="3759224f5030c8385542bcb899465b6e"></a><!-- doxytag: member="OpenBabel::OBGridData::OBGridData" ref="3759224f5030c8385542bcb899465b6e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGridData.shtml">OBGridData</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>

</div>
</div><p>
<a class="anchor" name="7f927f99da289ae1cb3f9da64ee9d429"></a><!-- doxytag: member="OpenBabel::OBGridData::~OBGridData" ref="7f927f99da289ae1cb3f9da64ee9d429" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBGridData.shtml">OBGridData</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="8f99a95e113289b791979a0949ebff51"></a><!-- doxytag: member="OpenBabel::OBGridData::GetAxes" ref="8f99a95e113289b791979a0949ebff51" args="(double x[3], double y[3], double z[3]) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetAxes           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>z</em>[3]</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the three axes parallel to the grid edges. The length of the returned vector is the step along that direction. </dd></dl>

</div>
</div><p>
<a class="anchor" name="664e46425ebb4de07d1d3d44eced9fd7"></a><!-- doxytag: member="OpenBabel::OBGridData::GetXAxis" ref="664e46425ebb4de07d1d3d44eced9fd7" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetXAxis           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>X axis direction. </dd></dl>

</div>
</div><p>
<a class="anchor" name="f7bce82f6dfeb2b4f04f243e23e74dca"></a><!-- doxytag: member="OpenBabel::OBGridData::GetYAxis" ref="f7bce82f6dfeb2b4f04f243e23e74dca" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetYAxis           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Y axis direction. </dd></dl>

</div>
</div><p>
<a class="anchor" name="299ca4b8330c823e4c771888b09ac5ea"></a><!-- doxytag: member="OpenBabel::OBGridData::GetZAxis" ref="299ca4b8330c823e4c771888b09ac5ea" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetZAxis           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Z axis direction. </dd></dl>

</div>
</div><p>
<a class="anchor" name="039b9b89c60f700b720e1ecb705c31df"></a><!-- doxytag: member="OpenBabel::OBGridData::GetAxes" ref="039b9b89c60f700b720e1ecb705c31df" args="(vector3 &amp;v1, vector3 &amp;v2, vector3 &amp;v3) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetAxes           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>v2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>v3</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the three axes parallel to the grid edges </dd></dl>

</div>
</div><p>
<a class="anchor" name="5b11216aacdb5a5d6c827ae33a0948d8"></a><!-- doxytag: member="OpenBabel::OBGridData::GetNumberOfPoints" ref="5b11216aacdb5a5d6c827ae33a0948d8" args="(int &amp;nx, int &amp;ny, int &amp;nz) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetNumberOfPoints           </td>
          <td>(</td>
          <td class="paramtype">int &amp;&nbsp;</td>
          <td class="paramname"> <em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&nbsp;</td>
          <td class="paramname"> <em>ny</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&nbsp;</td>
          <td class="paramname"> <em>nz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>number of points along the three axes parallel to the grid edges. </dd></dl>

</div>
</div><p>
<a class="anchor" name="c9c8dab0c9b1ff40b9a62ae274284ca2"></a><!-- doxytag: member="OpenBabel::OBGridData::GetNumberOfPoints" ref="c9c8dab0c9b1ff40b9a62ae274284ca2" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetNumberOfPoints           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>total number of points in the grid. </dd></dl>

</div>
</div><p>
<a class="anchor" name="22d3c24ecf14a00aeee444b63e57ca67"></a><!-- doxytag: member="OpenBabel::OBGridData::GetNumberOfSteps" ref="22d3c24ecf14a00aeee444b63e57ca67" args="(int steps[3]) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetNumberOfSteps           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>steps</em>[3]          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>number of points along the three axes parallel to the grid edges. </dd></dl>

</div>
</div><p>
<a class="anchor" name="9b5e89e70ca1fe3e99d802c0e020dd07"></a><!-- doxytag: member="OpenBabel::OBGridData::GetValues" ref="9b5e89e70ca1fe3e99d802c0e020dd07" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; double &gt; GetValues           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>grid values as a vector of doubles. </dd></dl>

</div>
</div><p>
<a class="anchor" name="c7d6b0a20315fa1a88926cb31ce96b63"></a><!-- doxytag: member="OpenBabel::OBGridData::GetValue" ref="c7d6b0a20315fa1a88926cb31ce96b63" args="(int i, int j, int k) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetValue           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>k</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the value at position i, j, k in the grid. </dd></dl>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l04073">OBForceField::GetGrid()</a>.</p>

</div>
</div><p>
<a class="anchor" name="da9d79c923a5ed1b0edd0571f80c7537"></a><!-- doxytag: member="OpenBabel::OBGridData::GetValue" ref="da9d79c923a5ed1b0edd0571f80c7537" args="(vector3 pos) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetValue           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td>
          <td class="paramname"> <em>pos</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the value at a position in the grid (by interpolation) </dd></dl>

</div>
</div><p>
<a class="anchor" name="425800b2d3fa62addcdcd18ad09b3d06"></a><!-- doxytag: member="OpenBabel::OBGridData::GetUnit" ref="425800b2d3fa62addcdcd18ad09b3d06" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#bceb2331ad056e3c5ad27894199a49ed">OBGridData::Unit</a> GetUnit           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the unit of measure for grid spacings. </dd></dl>

</div>
</div><p>
<a class="anchor" name="96de6cade8fdffe8a36cb68f9958284d"></a><!-- doxytag: member="OpenBabel::OBGridData::GetMinValue" ref="96de6cade8fdffe8a36cb68f9958284d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetMinValue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the minimum value of all points in the grid. </dd></dl>

</div>
</div><p>
<a class="anchor" name="e986e6ee03886af15440c86a780eb854"></a><!-- doxytag: member="OpenBabel::OBGridData::GetMaxValue" ref="e986e6ee03886af15440c86a780eb854" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetMaxValue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the maximum value of all points in the grid. </dd></dl>

</div>
</div><p>
<a class="anchor" name="fd1372eb23d785e07609b4ee1558ea96"></a><!-- doxytag: member="OpenBabel::OBGridData::GetOriginVector" ref="fd1372eb23d785e07609b4ee1558ea96" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetOriginVector           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd><a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> of the origin (i.e., the minimum x, y, and z coords of the grid). </dd></dl>

</div>
</div><p>
<a class="anchor" name="49001a7fa2061cbf41d8ec868a895f92"></a><!-- doxytag: member="OpenBabel::OBGridData::GetOriginVector" ref="49001a7fa2061cbf41d8ec868a895f92" args="(double o[3]) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetOriginVector           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>o</em>[3]          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>o</em>&nbsp;</td><td>set to the origin (i.e., the minimum x, y, and z coords of the grid). </td></tr>
  </table>
</dl>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000035">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBGridData.shtml#fd1372eb23d785e07609b4ee1558ea96">GetOriginVector()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="6451a826110b46a7cbf8b3b2d69adfed"></a><!-- doxytag: member="OpenBabel::OBGridData::GetMaxVector" ref="6451a826110b46a7cbf8b3b2d69adfed" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetMaxVector           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The maximum point in the grid. </dd></dl>

</div>
</div><p>
<a class="anchor" name="c8ee105dfe7a85ecb276eda28b6b7d9a"></a><!-- doxytag: member="OpenBabel::OBGridData::GetUnrestricted" ref="c8ee105dfe7a85ecb276eda28b6b7d9a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetUnrestricted           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the unrestricted flag. </dd></dl>

</div>
</div><p>
<a class="anchor" name="51394d46f39c8aaa712c10c32e4200f9"></a><!-- doxytag: member="OpenBabel::OBGridData::GetNumSymmetries" ref="51394d46f39c8aaa712c10c32e4200f9" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetNumSymmetries           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of symmetries. </dd></dl>

</div>
</div><p>
<a class="anchor" name="8e057288f32449cbd79175447a8eec49"></a><!-- doxytag: member="OpenBabel::OBGridData::SetNumberOfPoints" ref="8e057288f32449cbd79175447a8eec49" args="(int nx, int ny, int nz)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNumberOfPoints           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>ny</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set number of points along the three axes. 
<p>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l04073">OBForceField::GetGrid()</a>.</p>

</div>
</div><p>
<a class="anchor" name="0b9fb0de3277dd55625e632bc4f0ab5b"></a><!-- doxytag: member="OpenBabel::OBGridData::SetLimits" ref="0b9fb0de3277dd55625e632bc4f0ab5b" args="(const vector3 &amp;origin, const vector3 &amp;x, const vector3 &amp;y, const vector3 &amp;z)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetLimits           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>origin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>z</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the limits (i.e., the origin point and the axes) NOTE: You must set the number of points first, with SetNumberOfPoints so the grid spacing can be calculated 
<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l04073">OBForceField::GetGrid()</a>.</p>

</div>
</div><p>
<a class="anchor" name="009627e179cde33c9c0150d6a06214fd"></a><!-- doxytag: member="OpenBabel::OBGridData::SetLimits" ref="009627e179cde33c9c0150d6a06214fd" args="(const double origin[3], const double x[3], const double y[3], const double z[3])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetLimits           </td>
          <td>(</td>
          <td class="paramtype">const double&nbsp;</td>
          <td class="paramname"> <em>origin</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&nbsp;</td>
          <td class="paramname"> <em>x</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&nbsp;</td>
          <td class="paramname"> <em>y</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&nbsp;</td>
          <td class="paramname"> <em>z</em>[3]</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000036">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBGridData.shtml#0b9fb0de3277dd55625e632bc4f0ab5b">SetLimits(const vector3 &amp;origin, const vector3 &amp;x, const vector3 &amp;y, const vector3 &amp;z)</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="8e87e5ca8491e61def25764da4fdb46d"></a><!-- doxytag: member="OpenBabel::OBGridData::SetValue" ref="8e87e5ca8491e61def25764da4fdb46d" args="(int i, int j, int k, double val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SetValue           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>k</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>val</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set an individual value, grid must have been initialised. 
<p>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l04073">OBForceField::GetGrid()</a>.</p>

</div>
</div><p>
<a class="anchor" name="3384333ba39252b46f5189ca43baa2d1"></a><!-- doxytag: member="OpenBabel::OBGridData::SetValues" ref="3384333ba39252b46f5189ca43baa2d1" args="(const std::vector&lt; double &gt; &amp;v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetValues           </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; double &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the values, this vector must match the dimensions of the grid. 
<p>

</div>
</div><p>
<a class="anchor" name="29b2f36979b70af2f1793b4754e6d4b4"></a><!-- doxytag: member="OpenBabel::OBGridData::SetUnit" ref="29b2f36979b70af2f1793b4754e6d4b4" args="(Unit u)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetUnit           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#bceb2331ad056e3c5ad27894199a49ed">OBGridData::Unit</a>&nbsp;</td>
          <td class="paramname"> <em>u</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the unit of measure. 
<p>

</div>
</div><p>
<a class="anchor" name="d4c371035d64f046b9728f27fbe48678"></a><!-- doxytag: member="OpenBabel::OBGridData::SetUnrestricted" ref="d4c371035d64f046b9728f27fbe48678" args="(bool u)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetUnrestricted           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>u</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the unrestricted flag. 
<p>

</div>
</div><p>
<a class="anchor" name="6fc7e124f35cd07bffc7a9acb2c6f294"></a><!-- doxytag: member="OpenBabel::OBGridData::SetNumSymmetries" ref="6fc7e124f35cd07bffc7a9acb2c6f294" args="(int s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNumSymmetries           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the number of symmetries. 
<p>

</div>
</div><p>
<a class="anchor" name="67bda850335747e7ac5d66629bda0a67"></a><!-- doxytag: member="OpenBabel::OBGridData::Clone" ref="67bda850335747e7ac5d66629bda0a67" args="(OBBase *) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* Clone           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1AliasData.shtml#67bda850335747e7ac5d66629bda0a67">AliasData</a>, <a class="el" href="classOpenBabel_1_1OBAtomClassData.shtml#67bda850335747e7ac5d66629bda0a67">OBAtomClassData</a>, <a class="el" href="classOpenBabel_1_1OBCommentData.shtml#67bda850335747e7ac5d66629bda0a67">OBCommentData</a>, <a class="el" href="classOpenBabel_1_1OBExternalBondData.shtml#67bda850335747e7ac5d66629bda0a67">OBExternalBondData</a>, <a class="el" href="classOpenBabel_1_1OBPairData.shtml#67bda850335747e7ac5d66629bda0a67">OBPairData</a>, <a class="el" href="classOpenBabel_1_1OBSetData.shtml#67bda850335747e7ac5d66629bda0a67">OBSetData</a>, <a class="el" href="classOpenBabel_1_1OBVirtualBond.shtml#67bda850335747e7ac5d66629bda0a67">OBVirtualBond</a>, <a class="el" href="classOpenBabel_1_1OBRingData.shtml#67bda850335747e7ac5d66629bda0a67">OBRingData</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#67bda850335747e7ac5d66629bda0a67">OBUnitCell</a>, <a class="el" href="classOpenBabel_1_1OBConformerData.shtml#67bda850335747e7ac5d66629bda0a67">OBConformerData</a>, <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml#67bda850335747e7ac5d66629bda0a67">OBSymmetryData</a>, <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#67bda850335747e7ac5d66629bda0a67">OBTorsionData</a>, <a class="el" href="classOpenBabel_1_1OBAngleData.shtml#67bda850335747e7ac5d66629bda0a67">OBAngleData</a>, <a class="el" href="classOpenBabel_1_1OBChiralData.shtml#67bda850335747e7ac5d66629bda0a67">OBChiralData</a>, <a class="el" href="classOpenBabel_1_1OBSerialNums.shtml#67bda850335747e7ac5d66629bda0a67">OBSerialNums</a>, <a class="el" href="classOpenBabel_1_1OBVibrationData.shtml#67bda850335747e7ac5d66629bda0a67">OBVibrationData</a>, <a class="el" href="classOpenBabel_1_1OBRotationData.shtml#67bda850335747e7ac5d66629bda0a67">OBRotationData</a>, <a class="el" href="classOpenBabel_1_1OBVectorData.shtml#67bda850335747e7ac5d66629bda0a67">OBVectorData</a>, <a class="el" href="classOpenBabel_1_1OBMatrixData.shtml#67bda850335747e7ac5d66629bda0a67">OBMatrixData</a>, <a class="el" href="classOpenBabel_1_1OBRateData.shtml#f0b8e0b15297bc82b44b17c06f1e2020">OBRateData</a>, <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#f0b8e0b15297bc82b44b17c06f1e2020">OBNasaThermoData</a>, and <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#5361d45ced4133323de80d61ae5ecf05">OBRotamerList</a>.</p>

<p>Referenced by <a class="el" href="base_8cpp-source.shtml#l00174">OBBase::CloneData()</a>, and <a class="el" href="obmolecformat_8cpp-source.shtml#l00273">OBMoleculeFormat::MakeCombinedMolecule()</a>.</p>

</div>
</div><p>
<a class="anchor" name="ae3d15983201a2a115701b2c538fef77"></a><!-- doxytag: member="OpenBabel::OBGridData::SetAttribute" ref="ae3d15983201a2a115701b2c538fef77" args="(const std::string &amp;v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAttribute           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the attribute (key), which can be used to retrieve this data. 
<p>

<p>Referenced by <a class="el" href="molchrg_8cpp-source.shtml#l00058">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l00990">OBForceField::GetAtomTypes()</a>, <a class="el" href="mol_8cpp-source.shtml#l01052">OBMol::GetFormula()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01010">OBForceField::GetPartialCharges()</a>, <a class="el" href="descriptor_8cpp-source.shtml#l00308">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="mol_8cpp-source.shtml#l01075">OBMol::SetFormula()</a>.</p>

</div>
</div><p>
<a class="anchor" name="45613e34598a9584fb0120ef3fdab9e0"></a><!-- doxytag: member="OpenBabel::OBGridData::SetOrigin" ref="45613e34598a9584fb0120ef3fdab9e0" args="(const DataOrigin s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetOrigin           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the origin of this data, which can be used to filter the data. 
<p>

<p>Referenced by <a class="el" href="molchrg_8cpp-source.shtml#l00058">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="chiral_8cpp-source.shtml#l00206">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="mol_8cpp-source.shtml#l00389">OBMol::FindAngles()</a>, <a class="el" href="ring_8cpp-source.shtml#l00082">OBMol::FindSSSR()</a>, <a class="el" href="mol_8cpp-source.shtml#l00432">OBMol::FindTorsions()</a>, <a class="el" href="mol_8cpp-source.shtml#l01052">OBMol::GetFormula()</a>, <a class="el" href="mol_8cpp-source.shtml#l00898">OBMol::GetSSSR()</a>, <a class="el" href="descriptor_8cpp-source.shtml#l00308">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="mol_8cpp-source.shtml#l01075">OBMol::SetFormula()</a>.</p>

</div>
</div><p>
<a class="anchor" name="c72c28db8b5bb8911845ada56220a1e0"></a><!-- doxytag: member="OpenBabel::OBGridData::GetAttribute" ref="c72c28db8b5bb8911845ada56220a1e0" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetAttribute           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The attribute (key), which can be used to retrieve this data </dd></dl>

<p>Referenced by <a class="el" href="obmolecformat_8cpp-source.shtml#l00273">OBMoleculeFormat::MakeCombinedMolecule()</a>.</p>

</div>
</div><p>
<a class="anchor" name="c20b99b31895c99422fb1244def6e213"></a><!-- doxytag: member="OpenBabel::OBGridData::GetDataType" ref="c20b99b31895c99422fb1244def6e213" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetDataType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the data type for this object as defined in <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="c9527475c246fadbbab63a35376fd5fe"></a><!-- doxytag: member="OpenBabel::OBGridData::GetValue" ref="c9527475c246fadbbab63a35376fd5fe" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetValue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Base class returns a default value (the attribute type) but should never be called. 
<p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBCommentData.shtml#c9527475c246fadbbab63a35376fd5fe">OBCommentData</a>, and <a class="el" href="classOpenBabel_1_1OBPairData.shtml#c9527475c246fadbbab63a35376fd5fe">OBPairData</a>.</p>

<p>Referenced by <a class="el" href="descriptor_8cpp-source.shtml#l00085">OBDescriptor::FilterCompare()</a>, and <a class="el" href="descriptor_8cpp-source.shtml#l00423">OBDescriptor::GetValues()</a>.</p>

</div>
</div><p>
<a class="anchor" name="d080c58f230c474935ed3e27cb2ba906"></a><!-- doxytag: member="OpenBabel::OBGridData::GetOrigin" ref="d080c58f230c474935ed3e27cb2ba906" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a> GetOrigin           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="dceb77134f15418a66cf1124dcef1b51"></a><!-- doxytag: member="OpenBabel::OBGridData::_attr" ref="dceb77134f15418a66cf1124dcef1b51" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#dceb77134f15418a66cf1124dcef1b51">_attr</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
attribute tag (e.g., "UnitCell", "Comment" or "Author") 
<p>

<p>Referenced by <a class="el" href="rotamer_8cpp-source.shtml#l00114">OBRotamerList::Clone()</a>, and <a class="el" href="kinetics_8h-source.shtml#l00141">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div><p>
<a class="anchor" name="31291823d487a4a47f24aae5870505ef"></a><!-- doxytag: member="OpenBabel::OBGridData::_type" ref="31291823d487a4a47f24aae5870505ef" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#31291823d487a4a47f24aae5870505ef">_type</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
attribute type -- declared for each subclass 
<p>

<p>Referenced by <a class="el" href="rotamer_8cpp-source.shtml#l00114">OBRotamerList::Clone()</a>, and <a class="el" href="kinetics_8h-source.shtml#l00141">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div><p>
<a class="anchor" name="239606b62a534e4df7626ea0cfdfb856"></a><!-- doxytag: member="OpenBabel::OBGridData::_source" ref="239606b62a534e4df7626ea0cfdfb856" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a> <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#239606b62a534e4df7626ea0cfdfb856">_source</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
source of data for accounting 
<p>

<p>Referenced by <a class="el" href="generic_8cpp-source.shtml#l01338">OBChiralData::operator=()</a>, <a class="el" href="generic_8cpp-source.shtml#l01177">OBTorsionData::operator=()</a>, <a class="el" href="generic_8cpp-source.shtml#l00918">OBAngleData::operator=()</a>, <a class="el" href="generic_8cpp-source.shtml#l00669">OBConformerData::operator=()</a>, and <a class="el" href="generic_8cpp-source.shtml#l00645">OBSymmetryData::operator=()</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="griddata_8h-source.shtml">griddata.h</a><li><a class="el" href="griddata_8cpp.shtml">griddata.cpp</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:40 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
