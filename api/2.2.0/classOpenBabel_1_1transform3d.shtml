<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: transform3d Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a>
  </div>
</div>
<div class="contents">
<h1>transform3d Class Reference</h1><!-- doxytag: class="OpenBabel::transform3d" --><!-- doxytag: inherits="OpenBabel::matrix3x3,OpenBabel::vector3" -->Handle 3D transformations, such as space group definitions.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="transform3d_8h-source.shtml">openbabel/math/transform3d.h</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for transform3d:</div>
<div class="dynsection">
<p><center><img src="classOpenBabel_1_1transform3d__inherit__graph.png" border="0" usemap="#transform3d__inherit__map" alt="Inheritance graph"></center>
<map name="transform3d__inherit__map">
<area shape="rect" href="classOpenBabel_1_1matrix3x3.shtml" title="Represents a real 3x3 matrix." alt="" coords="5,5,85,32"><area shape="rect" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3&#45;dimensional real space." alt="" coords="109,5,176,32"></map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center></div>

<p>
<a href="classOpenBabel_1_1transform3d-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#0a78f8c2d77f9ca68c328cff6d46c610">transform3d</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#5d5c44a104265517860c9d695f03c3d7">transform3d</a> (const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;m, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#1ec90e69b3b2684b37773c15907b1fe0">transform3d</a> (double s)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#272c7ae3e0b8547a31f5c68ec2a43710">transform3d</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> row1, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> row2, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> row3, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> translation)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#4748a71890565072e61ed711ad218a38">transform3d</a> (double d[3][3], double t[3])</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#84ec47c4a6d7003d1df43b606e27a5a9">operator*</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#4f5421c7ca0227f309e5f2e545aa46b9">operator*</a> (const <a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#9bb44f139e6e940c62099ee80a0c378f">DescribeAsString</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#cf566ebca6ac366d1a218dce31a67ab3">DescribeAsValues</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#f279e0f0ff720ee54d6733674dfda50a">Normalize</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Friends</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#fa46ab021c49dc30bac7116157793dff">operator*</a> (const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#35fd56b260acc82508c9bf7e9a710125">operator*</a> (const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;, const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::ostream &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#0f3e65b4976b2ac7ce2a02b778e5cc71">operator&lt;&lt;</a> (std::ostream &amp;, const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Handle 3D transformations, such as space group definitions. 
<p>
<dl class="since" compact><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml" title="Handle crystallographic space group symmetry.">SpaceGroup</a> </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="0a78f8c2d77f9ca68c328cff6d46c610"></a><!-- doxytag: member="OpenBabel::transform3d::transform3d" ref="0a78f8c2d77f9ca68c328cff6d46c610" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a>           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="transform3d_8cpp-source.shtml#l00037">transform3d::operator*()</a>.</p>

</div>
</div><p>
<a class="anchor" name="5d5c44a104265517860c9d695f03c3d7"></a><!-- doxytag: member="OpenBabel::transform3d::transform3d" ref="5d5c44a104265517860c9d695f03c3d7" args="(const matrix3x3 &amp;m, const vector3 &amp;v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a>           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>v</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="1ec90e69b3b2684b37773c15907b1fe0"></a><!-- doxytag: member="OpenBabel::transform3d::transform3d" ref="1ec90e69b3b2684b37773c15907b1fe0" args="(double s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a>           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="272c7ae3e0b8547a31f5c68ec2a43710"></a><!-- doxytag: member="OpenBabel::transform3d::transform3d" ref="272c7ae3e0b8547a31f5c68ec2a43710" args="(vector3 row1, vector3 row2, vector3 row3, vector3 translation)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a>           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td>
          <td class="paramname"> <em>row1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td>
          <td class="paramname"> <em>row2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td>
          <td class="paramname"> <em>row3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td>
          <td class="paramname"> <em>translation</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructs a matrix from row vectors. 
<p>

</div>
</div><p>
<a class="anchor" name="4748a71890565072e61ed711ad218a38"></a><!-- doxytag: member="OpenBabel::transform3d::transform3d" ref="4748a71890565072e61ed711ad218a38" args="(double d[3][3], double t[3])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a>           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>d</em>[3][3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>t</em>[3]</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructs a matrix from a 3x3-array of doubles. 
<p>
The first index represents the row, the second index the column 
</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="84ec47c4a6d7003d1df43b606e27a5a9"></a><!-- doxytag: member="OpenBabel::transform3d::operator*" ref="84ec47c4a6d7003d1df43b606e27a5a9" args="(const vector3 &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> operator*           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="4f5421c7ca0227f309e5f2e545aa46b9"></a><!-- doxytag: member="OpenBabel::transform3d::operator*" ref="4f5421c7ca0227f309e5f2e545aa46b9" args="(const transform3d &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> operator*           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>t</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="9bb44f139e6e940c62099ee80a0c378f"></a><!-- doxytag: member="OpenBabel::transform3d::DescribeAsString" ref="9bb44f139e6e940c62099ee80a0c378f" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string DescribeAsString           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="cf566ebca6ac366d1a218dce31a67ab3"></a><!-- doxytag: member="OpenBabel::transform3d::DescribeAsValues" ref="cf566ebca6ac366d1a218dce31a67ab3" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string DescribeAsValues           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f279e0f0ff720ee54d6733674dfda50a"></a><!-- doxytag: member="OpenBabel::transform3d::Normalize" ref="f279e0f0ff720ee54d6733674dfda50a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Normalize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Friends And Related Function Documentation</h2>
<a class="anchor" name="fa46ab021c49dc30bac7116157793dff"></a><!-- doxytag: member="OpenBabel::transform3d::operator*" ref="fa46ab021c49dc30bac7116157793dff" args="(const matrix3x3 &amp;, const vector3 &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> operator*           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>v</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [friend, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Matrix-vector multiplication. 
<p>
Calculates the product m*v of the matrix m and the column vector represented by v 
</div>
</div><p>
<a class="anchor" name="35fd56b260acc82508c9bf7e9a710125"></a><!-- doxytag: member="OpenBabel::transform3d::operator*" ref="35fd56b260acc82508c9bf7e9a710125" args="(const matrix3x3 &amp;, const matrix3x3 &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> operator*           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>A</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>B</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [friend, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Matrix-matrix multiplication. 
<p>

</div>
</div><p>
<a class="anchor" name="0f3e65b4976b2ac7ce2a02b778e5cc71"></a><!-- doxytag: member="OpenBabel::transform3d::operator&lt;&lt;" ref="0f3e65b4976b2ac7ce2a02b778e5cc71" args="(std::ostream &amp;, const matrix3x3 &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt;           </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&nbsp;</td>
          <td class="paramname"> <em>co</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>m</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [friend, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Output a text representation of a matrix. 
<p>
Print a text representation of the matrix in the standardized form: [ a, b, c ] <br>
 [ d, e, f ] <br>
 [ g, h, i ] <br>
 where the letters represent the appropriate entries in the matrix. Uses the standard output format for the individual entries, separated by ", " for each column, and [ ] indicating each row. 
</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="transform3d_8h-source.shtml">transform3d.h</a><li><a class="el" href="transform3d_8cpp.shtml">transform3d.cpp</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:41 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
