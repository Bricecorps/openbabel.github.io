<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBRotationData Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBRotationData.shtml">OBRotationData</a>
  </div>
</div>
<div class="contents">
<h1>OBRotationData Class Reference</h1><!-- doxytag: class="OpenBabel::OBRotationData" --><!-- doxytag: inherits="OpenBabel::OBGenericData" -->Used to hold the rotational constants and symmetry numbers.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="generic_8h-source.shtml">openbabel/generic.h</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for OBRotationData:</div>
<div class="dynsection">
<p><center><img src="classOpenBabel_1_1OBRotationData__inherit__graph.png" border="0" usemap="#OBRotationData__inherit__map" alt="Inheritance graph"></center>
<map name="OBRotationData__inherit__map">
<area shape="rect" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data." alt="" coords="7,5,124,32"></map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center></div>

<p>
<a href="classOpenBabel_1_1OBRotationData-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba09">RType</a> { <a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba096ce26a62afab55d7606ad4e92428b30c">UNKNOWN</a>, 
<a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba092d93e4d4c3bc28e5ca615d332381e47f">ASYMMETRIC</a>, 
<a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba094b2338c5e1fba3b9cfb3a3473dfcc856">SYMMETRIC</a>, 
<a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba09dc101ebf31c49c2d4b80b7c6f59f22cb">LINEAR</a>
 }</td></tr>

<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#f55b99b7ce56986ce4421f598bb7b1d7">OBRotationData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#519e86e5760ce996627dcf4fe5efab66">~OBRotationData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#67bda850335747e7ac5d66629bda0a67">Clone</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#a0e40eaa96ec46f0513b48fce93b7b76">SetData</a> (<a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba09">RType</a> RotorType, std::vector&lt; double &gt; RotationalConstants, int SymmetryNumber)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; double &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#6f70037b26d7b9467c1a58de1c387d94">GetRotConsts</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#9ac59b320ed168e96f32234acd79b42a">GetSymmetryNumber</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba09">RType</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#3eb540bec04a80b875079e7d0b982ec9">GetRotorType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ae3d15983201a2a115701b2c538fef77">SetAttribute</a> (const std::string &amp;v)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#45613e34598a9584fb0120ef3fdab9e0">SetOrigin</a> (const <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a> s)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const std::string &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#c72c28db8b5bb8911845ada56220a1e0">GetAttribute</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#c20b99b31895c99422fb1244def6e213">GetDataType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const std::string &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#c9527475c246fadbbab63a35376fd5fe">GetValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#d080c58f230c474935ed3e27cb2ba906">GetOrigin</a> () const </td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; double &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#158f9d92716703712f00b3b041adc3cc">RotConsts</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#59b5e4d007a23da401e33d9f5eea2664">SymNum</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba09">RType</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#90ab08fd1dc96f17cf3562d8afeb60c0">type</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#dceb77134f15418a66cf1124dcef1b51">_attr</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#31291823d487a4a47f24aae5870505ef">_type</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#239606b62a534e4df7626ea0cfdfb856">_source</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Used to hold the rotational constants and symmetry numbers. <hr><h2>Member Enumeration Documentation</h2>
<a class="anchor" name="fda39669e25831ec186e17cb437dba09"></a><!-- doxytag: member="OpenBabel::OBRotationData::RType" ref="fda39669e25831ec186e17cb437dba09" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba09">RType</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="fda39669e25831ec186e17cb437dba096ce26a62afab55d7606ad4e92428b30c"></a><!-- doxytag: member="UNKNOWN" ref="fda39669e25831ec186e17cb437dba096ce26a62afab55d7606ad4e92428b30c" args="" -->UNKNOWN</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="fda39669e25831ec186e17cb437dba092d93e4d4c3bc28e5ca615d332381e47f"></a><!-- doxytag: member="ASYMMETRIC" ref="fda39669e25831ec186e17cb437dba092d93e4d4c3bc28e5ca615d332381e47f" args="" -->ASYMMETRIC</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="fda39669e25831ec186e17cb437dba094b2338c5e1fba3b9cfb3a3473dfcc856"></a><!-- doxytag: member="SYMMETRIC" ref="fda39669e25831ec186e17cb437dba094b2338c5e1fba3b9cfb3a3473dfcc856" args="" -->SYMMETRIC</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="fda39669e25831ec186e17cb437dba09dc101ebf31c49c2d4b80b7c6f59f22cb"></a><!-- doxytag: member="LINEAR" ref="fda39669e25831ec186e17cb437dba09dc101ebf31c49c2d4b80b7c6f59f22cb" args="" -->LINEAR</em>&nbsp;</td><td>
</td></tr>
</table>
</dl>

</div>
</div><p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="f55b99b7ce56986ce4421f598bb7b1d7"></a><!-- doxytag: member="OpenBabel::OBRotationData::OBRotationData" ref="f55b99b7ce56986ce4421f598bb7b1d7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml">OBRotationData</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="519e86e5760ce996627dcf4fe5efab66"></a><!-- doxytag: member="OpenBabel::OBRotationData::~OBRotationData" ref="519e86e5760ce996627dcf4fe5efab66" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classOpenBabel_1_1OBRotationData.shtml">OBRotationData</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="67bda850335747e7ac5d66629bda0a67"></a><!-- doxytag: member="OpenBabel::OBRotationData::Clone" ref="67bda850335747e7ac5d66629bda0a67" args="(OBBase *) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* Clone           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#67bda850335747e7ac5d66629bda0a67">OBGenericData</a>.</p>

</div>
</div><p>
<a class="anchor" name="a0e40eaa96ec46f0513b48fce93b7b76"></a><!-- doxytag: member="OpenBabel::OBRotationData::SetData" ref="a0e40eaa96ec46f0513b48fce93b7b76" args="(RType RotorType, std::vector&lt; double &gt; RotationalConstants, int SymmetryNumber)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba09">RType</a>&nbsp;</td>
          <td class="paramname"> <em>RotorType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; double &gt;&nbsp;</td>
          <td class="paramname"> <em>RotationalConstants</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>SymmetryNumber</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="6f70037b26d7b9467c1a58de1c387d94"></a><!-- doxytag: member="OpenBabel::OBRotationData::GetRotConsts" ref="6f70037b26d7b9467c1a58de1c387d94" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;double&gt; GetRotConsts           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Rotational constants in GHz </dd></dl>

</div>
</div><p>
<a class="anchor" name="9ac59b320ed168e96f32234acd79b42a"></a><!-- doxytag: member="OpenBabel::OBRotationData::GetSymmetryNumber" ref="9ac59b320ed168e96f32234acd79b42a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetSymmetryNumber           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3eb540bec04a80b875079e7d0b982ec9"></a><!-- doxytag: member="OpenBabel::OBRotationData::GetRotorType" ref="3eb540bec04a80b875079e7d0b982ec9" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba09">RType</a> GetRotorType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ae3d15983201a2a115701b2c538fef77"></a><!-- doxytag: member="OpenBabel::OBRotationData::SetAttribute" ref="ae3d15983201a2a115701b2c538fef77" args="(const std::string &amp;v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAttribute           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the attribute (key), which can be used to retrieve this data. 
<p>

<p>Referenced by <a class="el" href="molchrg_8cpp-source.shtml#l00058">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l00990">OBForceField::GetAtomTypes()</a>, <a class="el" href="mol_8cpp-source.shtml#l01052">OBMol::GetFormula()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01010">OBForceField::GetPartialCharges()</a>, <a class="el" href="descriptor_8cpp-source.shtml#l00308">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="mol_8cpp-source.shtml#l01075">OBMol::SetFormula()</a>.</p>

</div>
</div><p>
<a class="anchor" name="45613e34598a9584fb0120ef3fdab9e0"></a><!-- doxytag: member="OpenBabel::OBRotationData::SetOrigin" ref="45613e34598a9584fb0120ef3fdab9e0" args="(const DataOrigin s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetOrigin           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the origin of this data, which can be used to filter the data. 
<p>

<p>Referenced by <a class="el" href="molchrg_8cpp-source.shtml#l00058">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="chiral_8cpp-source.shtml#l00206">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="mol_8cpp-source.shtml#l00389">OBMol::FindAngles()</a>, <a class="el" href="ring_8cpp-source.shtml#l00082">OBMol::FindSSSR()</a>, <a class="el" href="mol_8cpp-source.shtml#l00432">OBMol::FindTorsions()</a>, <a class="el" href="mol_8cpp-source.shtml#l01052">OBMol::GetFormula()</a>, <a class="el" href="mol_8cpp-source.shtml#l00898">OBMol::GetSSSR()</a>, <a class="el" href="descriptor_8cpp-source.shtml#l00308">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="mol_8cpp-source.shtml#l01075">OBMol::SetFormula()</a>.</p>

</div>
</div><p>
<a class="anchor" name="c72c28db8b5bb8911845ada56220a1e0"></a><!-- doxytag: member="OpenBabel::OBRotationData::GetAttribute" ref="c72c28db8b5bb8911845ada56220a1e0" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetAttribute           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The attribute (key), which can be used to retrieve this data </dd></dl>

<p>Referenced by <a class="el" href="obmolecformat_8cpp-source.shtml#l00273">OBMoleculeFormat::MakeCombinedMolecule()</a>.</p>

</div>
</div><p>
<a class="anchor" name="c20b99b31895c99422fb1244def6e213"></a><!-- doxytag: member="OpenBabel::OBRotationData::GetDataType" ref="c20b99b31895c99422fb1244def6e213" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetDataType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the data type for this object as defined in <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="c9527475c246fadbbab63a35376fd5fe"></a><!-- doxytag: member="OpenBabel::OBRotationData::GetValue" ref="c9527475c246fadbbab63a35376fd5fe" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetValue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Base class returns a default value (the attribute type) but should never be called. 
<p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBCommentData.shtml#c9527475c246fadbbab63a35376fd5fe">OBCommentData</a>, and <a class="el" href="classOpenBabel_1_1OBPairData.shtml#c9527475c246fadbbab63a35376fd5fe">OBPairData</a>.</p>

<p>Referenced by <a class="el" href="descriptor_8cpp-source.shtml#l00085">OBDescriptor::FilterCompare()</a>, and <a class="el" href="descriptor_8cpp-source.shtml#l00423">OBDescriptor::GetValues()</a>.</p>

</div>
</div><p>
<a class="anchor" name="d080c58f230c474935ed3e27cb2ba906"></a><!-- doxytag: member="OpenBabel::OBRotationData::GetOrigin" ref="d080c58f230c474935ed3e27cb2ba906" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a> GetOrigin           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="158f9d92716703712f00b3b041adc3cc"></a><!-- doxytag: member="OpenBabel::OBRotationData::RotConsts" ref="158f9d92716703712f00b3b041adc3cc" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;double&gt; <a class="el" href="classOpenBabel_1_1OBRotationData.shtml#158f9d92716703712f00b3b041adc3cc">RotConsts</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Rotational constants in GHz. 
<p>

</div>
</div><p>
<a class="anchor" name="59b5e4d007a23da401e33d9f5eea2664"></a><!-- doxytag: member="OpenBabel::OBRotationData::SymNum" ref="59b5e4d007a23da401e33d9f5eea2664" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classOpenBabel_1_1OBRotationData.shtml#59b5e4d007a23da401e33d9f5eea2664">SymNum</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Rotational Symmetry Number. 
<p>

</div>
</div><p>
<a class="anchor" name="90ab08fd1dc96f17cf3562d8afeb60c0"></a><!-- doxytag: member="OpenBabel::OBRotationData::type" ref="90ab08fd1dc96f17cf3562d8afeb60c0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRotationData.shtml#fda39669e25831ec186e17cb437dba09">RType</a> <a class="el" href="classOpenBabel_1_1OBRotationData.shtml#90ab08fd1dc96f17cf3562d8afeb60c0">type</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
linear, symmetric or asymmetric top 
<p>

</div>
</div><p>
<a class="anchor" name="dceb77134f15418a66cf1124dcef1b51"></a><!-- doxytag: member="OpenBabel::OBRotationData::_attr" ref="dceb77134f15418a66cf1124dcef1b51" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#dceb77134f15418a66cf1124dcef1b51">_attr</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
attribute tag (e.g., "UnitCell", "Comment" or "Author") 
<p>

<p>Referenced by <a class="el" href="rotamer_8cpp-source.shtml#l00114">OBRotamerList::Clone()</a>, and <a class="el" href="kinetics_8h-source.shtml#l00141">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div><p>
<a class="anchor" name="31291823d487a4a47f24aae5870505ef"></a><!-- doxytag: member="OpenBabel::OBRotationData::_type" ref="31291823d487a4a47f24aae5870505ef" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#31291823d487a4a47f24aae5870505ef">_type</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
attribute type -- declared for each subclass 
<p>

<p>Referenced by <a class="el" href="rotamer_8cpp-source.shtml#l00114">OBRotamerList::Clone()</a>, and <a class="el" href="kinetics_8h-source.shtml#l00141">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div><p>
<a class="anchor" name="239606b62a534e4df7626ea0cfdfb856"></a><!-- doxytag: member="OpenBabel::OBRotationData::_source" ref="239606b62a534e4df7626ea0cfdfb856" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a> <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#239606b62a534e4df7626ea0cfdfb856">_source</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
source of data for accounting 
<p>

<p>Referenced by <a class="el" href="generic_8cpp-source.shtml#l01338">OBChiralData::operator=()</a>, <a class="el" href="generic_8cpp-source.shtml#l01177">OBTorsionData::operator=()</a>, <a class="el" href="generic_8cpp-source.shtml#l00918">OBAngleData::operator=()</a>, <a class="el" href="generic_8cpp-source.shtml#l00669">OBConformerData::operator=()</a>, and <a class="el" href="generic_8cpp-source.shtml#l00645">OBSymmetryData::operator=()</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="generic_8h-source.shtml">generic.h</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:40 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
