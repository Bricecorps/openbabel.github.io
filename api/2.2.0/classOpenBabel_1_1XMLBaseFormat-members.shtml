<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: Member List</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>XMLBaseFormat Member List</h1>This is the complete list of members for <a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#c0224265e7d214b7ed98e091fe559c88">_embedlevel</a></td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#1f8d25dafb0bc13814ca451035f67955">_id</a></td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#5fd9fbe1a6ecd9798543ec2a55c472a8">_prefix</a></td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#b50420582d1794a71702ae17e176dc07">_pxmlConv</a></td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#706e628de74c41f357e6fe9de774111c">BaseFindType</a>(PluginMapType &amp;Map, const char *ID)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, protected, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#5e2c3ec36cd04bac7ecad43b9f5501a2">baseindent</a></td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#1d4d73999ab0518ee471c635bd0a7e87">Begin</a>(const char *PluginID)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#b87525f269e7819d8462f450d30d56a7">Description</a>()=0</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [pure virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#e0859fdbf134af95a8231eb32c73b7db">Display</a>(std::string &amp;txt, const char *param, const char *ID=NULL)</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#6b007f43192f527944eef5136e4b2703">DoElement</a>(const std::string &amp;ElName)</td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#9a330280c1cd2e7119dac87a6fd0b762">End</a>(const char *PluginID)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#0e59feda5d3eb85765b53cf4b42f77ef">EndElement</a>(const std::string &amp;ElName)</td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#d2f75af8aac19e5c3c48dc26c1fa319c">EndTag</a>()</td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#84fc973fdf4bba5a6b0e2d402077991c">FirstLine</a>(const char *txt)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#94a94537cc5ba96b1876db1b612b91a3">Flags</a>()</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#ca0c09ee719aba9da34cb281aa0db6a5">FormatFromMIME</a>(const char *MIME)</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#753a34173c6750388d33e5294556790f">GetID</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#abc1385cbe63145ffec6edf1f2c3be98">GetMap</a>() const =0</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [pure virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#2020a6bdb0d53d4baa73ffb57375c7e9">GetMIMEType</a>()</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#c8ba4fe4a0634561ddd4667c8ef28ae1">GetPlugin</a>(const char *Type, const char *ID)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#73f632a573cbbfecf9e00f04c5ce73e9">GetType</a>()</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#dfcf9fda27cfbc4301fc94517a4250ef">GetTypeMap</a>(const char *PluginID)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [protected, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#4b00721003b8d35559a55c9098ff36c5">ind</a></td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#9fabfd2513038ae6ac475ac0ff2c73cd">List</a>(const char *PluginID, const char *param=NULL, std::ostream *os=&amp;std::cout)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#ba22c5352d36c7f058299af7ddffb03e">ListAsString</a>(const char *PluginID, const char *param=NULL)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#f95953a5793333ba51e978c4a0a00103">ListAsVector</a>(const char *PluginID, const char *param, std::vector&lt; std::string &gt; &amp;vlist)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#9399e9568ab809d714385f1b237a9335">MakeInstance</a>(const std::vector&lt; std::string &gt; &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#0924b1a442d147fa036bff23a4cf04ef">MakeNewInstance</a>()</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#b3d80dde715e0505ef1818a621ecd888">NamespaceURI</a>() const =0</td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [pure virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#8000c477c493f1dc954e8a538ae6fda8">nsdecl</a></td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#11590b0840c8360ab4c3b62476d49863">OBFormat</a>()</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#4964d8defcb0f638a51963d436188f12">OutputToStream</a>()</td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [inline, protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#8fac85f5497f873a2dd8734b47f0bdc0">PluginIterator</a> typedef</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#c40457336d7b12bb632b4ac4e8955a3a">PluginMap</a>()</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, protected, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#0fd3c807ed3341c33070c93b14739bc8">PluginMapType</a> typedef</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#6044ced825a2a83b7cfe7c45eea63c99">ReadChemObject</a>(OBConversion *)</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#9d9e2a08b0659f0bc93d3eb7eaf8f05d">reader</a>() const </td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [inline, protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#1e309febfaef70cc3c8d98afc1540931">ReadMolecule</a>(OBBase *, OBConversion *)</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#47a434f63a789f142966304e35aa6952">RegisterFormat</a>(const char *ID, const char *MIME=NULL)</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#dfcd8e84805c262d8cbca79a83f9d4cc">SkipObjects</a>(int n, OBConversion *pConv)</td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [inline, protected, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#1d3a8785a0ad0c85b98fa3406a64d50f">SpecificationURL</a>()</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#1870e0d80a223ef4e1661be80029dbec">TargetClassDescription</a>()</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#45db88b29eb37e9dd105bf4032e421d2">TypeID</a>()</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#5ea5d9623cd9594549a52e116caecaa2">WriteChemObject</a>(OBConversion *)</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml#663171ec9788e2d1621d374848b3888b">WriteMolecule</a>(OBBase *, OBConversion *)</td><td><a class="el" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#9569f81d2916200422a7927572913336">writer</a>() const </td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [inline, protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml#2f6f0f4ddec879439f78de686c459fb0">~OBPlugin</a>()</td><td><a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml#429ba96990b23caaca913a23345f3793">~XMLBaseFormat</a>()</td><td><a class="el" href="classOpenBabel_1_1XMLBaseFormat.shtml">XMLBaseFormat</a></td><td><code> [inline]</code></td></tr>
</table></div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:41 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
