<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBRotorList Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBRotorList.shtml">OBRotorList</a>
  </div>
</div>
<div class="contents">
<h1>OBRotorList Class Reference</h1><!-- doxytag: class="OpenBabel::OBRotorList" -->Given an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>, set up a list of possibly rotatable torsions,.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="rotor_8h-source.shtml">rotor.h</a>&gt;</code>
<p>

<p>
<a href="classOpenBabel_1_1OBRotorList-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#bb796c2d6e0cc373ea686939fa8802bf">OBRotorList</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#57a6b6e1458a1eb39826419c0544ce41">~OBRotorList</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a71d36872f416feaa853788a7a7a7ef8">Clear</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#f40990b9bd3d70d30e8ce7cdda1ad56f">Size</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#ddb143a5ae2f64420fa692a14489288b">Init</a> (std::string &amp;fname)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#15266fb4e5ef334d0de47b203d420f22">SetQuiet</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#aabb93aa1f24c335405418bfa3ead95b">SetFixAtoms</a> (<a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;fix)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#bf7ff40c898c129bba2020623f7394b3">IsFixedBond</a> (<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#cb5c0375aa5f28091792762a5f66f23e">HasFixedAtoms</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#f216aef19cf7a82fb1e57504b39f9329">SetRotAtomsByFix</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#c08d1221790bd6f14418e3f77e6e725a">SetRotAtoms</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#278d20fb9c70e9786bc3ce48053af491">Setup</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#157d2988fa1fe9a3f2945774945b71cb">FindRotors</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#76745541fde561757dce0bc58d60354e">SetEvalAtoms</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#1d06cdda315ea9b96d14aeb10d352e61">AssignTorVals</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#dbf9e2936af60825abb7f7812ba8fae8">IgnoreSymmetryRemoval</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#22bfb3d2f1e0787b0c1aabd0f0255226">RemoveSymVals</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#f5b2891615e85e4fb9ff52d2931c6170">IdentifyEvalAtoms</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>

<tr><td colspan="2"><div class="groupHeader">Iterator methods</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRotor.shtml">OBRotor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#0911c08e37e43925167a51149d143e3a">BeginRotor</a> (<a class="el" href="namespaceOpenBabel.shtml#434f394d0613a8ef6c119670ff49710f">OBRotorIterator</a> &amp;i)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRotor.shtml">OBRotor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#610d31fe22e09be685d1bc3e90584e56">NextRotor</a> (<a class="el" href="namespaceOpenBabel.shtml#434f394d0613a8ef6c119670ff49710f">OBRotorIterator</a> &amp;i)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#434f394d0613a8ef6c119670ff49710f">OBRotorIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#9168b57d7fd7c6ac082ab7349e6c82df">BeginRotors</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#434f394d0613a8ef6c119670ff49710f">OBRotorIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml#ac6c765496e1602cdf8a2160251cce9e">EndRotors</a> ()</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Given an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>, set up a list of possibly rotatable torsions,. <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="bb796c2d6e0cc373ea686939fa8802bf"></a><!-- doxytag: member="OpenBabel::OBRotorList::OBRotorList" ref="bb796c2d6e0cc373ea686939fa8802bf" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml">OBRotorList</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="57a6b6e1458a1eb39826419c0544ce41"></a><!-- doxytag: member="OpenBabel::OBRotorList::~OBRotorList" ref="57a6b6e1458a1eb39826419c0544ce41" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBRotorList.shtml">OBRotorList</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="a71d36872f416feaa853788a7a7a7ef8"></a><!-- doxytag: member="OpenBabel::OBRotorList::Clear" ref="a71d36872f416feaa853788a7a7a7ef8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Clear           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear the internal list of rotors and reset. 
<p>

<p>Referenced by <a class="el" href="rotor_8cpp-source.shtml#l00042">OBRotorList::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="f40990b9bd3d70d30e8ce7cdda1ad56f"></a><!-- doxytag: member="OpenBabel::OBRotorList::Size" ref="f40990b9bd3d70d30e8ce7cdda1ad56f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int Size           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of rotors in this list </dd></dl>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l01289">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00042">OBRotorList::Setup()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01182">OBForceField::SystematicRotorSearchInitialize()</a>, and <a class="el" href="forcefield_8cpp-source.shtml#l01450">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div><p>
<a class="anchor" name="ddb143a5ae2f64420fa692a14489288b"></a><!-- doxytag: member="OpenBabel::OBRotorList::Init" ref="ddb143a5ae2f64420fa692a14489288b" args="(std::string &amp;fname)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Init           </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>fname</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Intialize the private <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml" title="Database of default hybridization torsional rules and SMARTS-defined OBRotorRule...">OBRotorRules</a> database from a specific file. 
<p>

</div>
</div><p>
<a class="anchor" name="15266fb4e5ef334d0de47b203d420f22"></a><!-- doxytag: member="OpenBabel::OBRotorList::SetQuiet" ref="15266fb4e5ef334d0de47b203d420f22" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetQuiet           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Turn off debugging output. 
<p>

</div>
</div><p>
<a class="anchor" name="aabb93aa1f24c335405418bfa3ead95b"></a><!-- doxytag: member="OpenBabel::OBRotorList::SetFixAtoms" ref="aabb93aa1f24c335405418bfa3ead95b" args="(OBBitVec &amp;fix)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFixAtoms           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>fix</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the list of fixed (invariant) atoms to the supplied <a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits.">OBBitVec</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="bf7ff40c898c129bba2020623f7394b3"></a><!-- doxytag: member="OpenBabel::OBRotorList::IsFixedBond" ref="bf7ff40c898c129bba2020623f7394b3" args="(OBBond *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsFixedBond           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&nbsp;</td>
          <td class="paramname"> <em>bond</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return whether this bond is fixed and thus not rotatable. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>true if the bond and at least one neighboring bond has fixed atoms </dd></dl>

<p>Referenced by <a class="el" href="rotor_8cpp-source.shtml#l00068">OBRotorList::FindRotors()</a>, and <a class="el" href="rotor_8cpp-source.shtml#l00352">OBRotorList::SetEvalAtoms()</a>.</p>

</div>
</div><p>
<a class="anchor" name="cb5c0375aa5f28091792762a5f66f23e"></a><!-- doxytag: member="OpenBabel::OBRotorList::HasFixedAtoms" ref="cb5c0375aa5f28091792762a5f66f23e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasFixedAtoms           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether this rotor list has any fixed (invariant) atoms </dd></dl>

<p>Referenced by <a class="el" href="rotor_8cpp-source.shtml#l00068">OBRotorList::FindRotors()</a>, and <a class="el" href="rotor_8cpp-source.shtml#l00352">OBRotorList::SetEvalAtoms()</a>.</p>

</div>
</div><p>
<a class="anchor" name="f216aef19cf7a82fb1e57504b39f9329"></a><!-- doxytag: member="OpenBabel::OBRotorList::SetRotAtomsByFix" ref="f216aef19cf7a82fb1e57504b39f9329" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetRotAtomsByFix           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the atoms to rotate from the dihedral atoms for each rotor Insures the fixed atoms are respected, but otherwise functions like <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#c08d1221790bd6f14418e3f77e6e725a" title="Set the atoms to rotate from the dihedral atoms for each rotor Uses OBRotor-&gt;GetDihedralAtoms()...">SetRotAtoms()</a>. 
<p>

</div>
</div><p>
<a class="anchor" name="c08d1221790bd6f14418e3f77e6e725a"></a><!-- doxytag: member="OpenBabel::OBRotorList::SetRotAtoms" ref="c08d1221790bd6f14418e3f77e6e725a" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SetRotAtoms           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the atoms to rotate from the dihedral atoms for each rotor Uses OBRotor-&gt;GetDihedralAtoms() to call OBRotor-&gt;<a class="el" href="classOpenBabel_1_1OBRotorList.shtml#c08d1221790bd6f14418e3f77e6e725a" title="Set the atoms to rotate from the dihedral atoms for each rotor Uses OBRotor-&gt;GetDihedralAtoms()...">SetRotAtoms()</a> and standarizes the dihedral angles via OBRotor-&gt;SetDihedralAtoms(). 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True </dd></dl>

</div>
</div><p>
<a class="anchor" name="278d20fb9c70e9786bc3ce48053af491"></a><!-- doxytag: member="OpenBabel::OBRotorList::Setup" ref="278d20fb9c70e9786bc3ce48053af491" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Setup           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Setup this rotor list for the supplied molecule Calls <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#157d2988fa1fe9a3f2945774945b71cb">FindRotors()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#76745541fde561757dce0bc58d60354e">SetEvalAtoms()</a>, and <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#1d06cdda315ea9b96d14aeb10d352e61">AssignTorVals()</a> <dl class="return" compact><dt><b>Returns:</b></dt><dd>True if rotatable bonds were found </dd></dl>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l01289">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01182">OBForceField::SystematicRotorSearchInitialize()</a>, and <a class="el" href="forcefield_8cpp-source.shtml#l01450">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div><p>
<a class="anchor" name="157d2988fa1fe9a3f2945774945b71cb"></a><!-- doxytag: member="OpenBabel::OBRotorList::FindRotors" ref="157d2988fa1fe9a3f2945774945b71cb" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FindRotors           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Find all potentially rotatable bonds in the molecule Uses <a class="el" href="classOpenBabel_1_1OBBond.shtml#0919315f7a2fd68937c561186be76e44">OBBond::IsRotor()</a> for initial evaluation <dl class="return" compact><dt><b>Returns:</b></dt><dd>True </dd></dl>

<p>Referenced by <a class="el" href="rotor_8cpp-source.shtml#l00042">OBRotorList::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="76745541fde561757dce0bc58d60354e"></a><!-- doxytag: member="OpenBabel::OBRotorList::SetEvalAtoms" ref="76745541fde561757dce0bc58d60354e" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SetEvalAtoms           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Determines which atoms should be used to calculate the internal energy if the dihedral angle of the rotor is modified <dl class="return" compact><dt><b>Returns:</b></dt><dd>True </dd></dl>

<p>Referenced by <a class="el" href="rotor_8cpp-source.shtml#l00042">OBRotorList::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="1d06cdda315ea9b96d14aeb10d352e61"></a><!-- doxytag: member="OpenBabel::OBRotorList::AssignTorVals" ref="1d06cdda315ea9b96d14aeb10d352e61" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool AssignTorVals           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Using the <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml" title="Database of default hybridization torsional rules and SMARTS-defined OBRotorRule...">OBRotorRules</a> database, set the torsion values (and delta) to be evaluated and tested 
<p>Referenced by <a class="el" href="rotor_8cpp-source.shtml#l00042">OBRotorList::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="dbf9e2936af60825abb7f7812ba8fae8"></a><!-- doxytag: member="OpenBabel::OBRotorList::IgnoreSymmetryRemoval" ref="dbf9e2936af60825abb7f7812ba8fae8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IgnoreSymmetryRemoval           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Has no effect <dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000045">Deprecated:</a></b></dt><dd>Currently has no effect </dd></dl>

</div>
</div><p>
<a class="anchor" name="22bfb3d2f1e0787b0c1aabd0f0255226"></a><!-- doxytag: member="OpenBabel::OBRotorList::RemoveSymVals" ref="22bfb3d2f1e0787b0c1aabd0f0255226" args="(OBMol &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RemoveSymVals           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Rotates each bond to zero and 180 degrees and tests if the 2 conformers are duplicates. if so - the symmetric torsion values are removed from consideration during a search 
</div>
</div><p>
<a class="anchor" name="0911c08e37e43925167a51149d143e3a"></a><!-- doxytag: member="OpenBabel::OBRotorList::BeginRotor" ref="0911c08e37e43925167a51149d143e3a" args="(OBRotorIterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRotor.shtml">OBRotor</a>* BeginRotor           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#434f394d0613a8ef6c119670ff49710f">OBRotorIterator</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l01289">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00196">OBRotorList::RemoveSymVals()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00352">OBRotorList::SetEvalAtoms()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00441">OBRotorList::SetRotAtoms()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00475">OBRotorList::SetRotAtomsByFix()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00042">OBRotorList::Setup()</a>, <a class="el" href="rotamer_8cpp-source.shtml#l00195">OBRotamerList::Setup()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01182">OBForceField::SystematicRotorSearchInitialize()</a>, and <a class="el" href="forcefield_8cpp-source.shtml#l01450">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div><p>
<a class="anchor" name="610d31fe22e09be685d1bc3e90584e56"></a><!-- doxytag: member="OpenBabel::OBRotorList::NextRotor" ref="610d31fe22e09be685d1bc3e90584e56" args="(OBRotorIterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRotor.shtml">OBRotor</a>* NextRotor           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#434f394d0613a8ef6c119670ff49710f">OBRotorIterator</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l01289">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00196">OBRotorList::RemoveSymVals()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00352">OBRotorList::SetEvalAtoms()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00441">OBRotorList::SetRotAtoms()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00475">OBRotorList::SetRotAtomsByFix()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00042">OBRotorList::Setup()</a>, <a class="el" href="rotamer_8cpp-source.shtml#l00195">OBRotamerList::Setup()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01182">OBForceField::SystematicRotorSearchInitialize()</a>, and <a class="el" href="forcefield_8cpp-source.shtml#l01450">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div><p>
<a class="anchor" name="9168b57d7fd7c6ac082ab7349e6c82df"></a><!-- doxytag: member="OpenBabel::OBRotorList::BeginRotors" ref="9168b57d7fd7c6ac082ab7349e6c82df" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#434f394d0613a8ef6c119670ff49710f">OBRotorIterator</a> BeginRotors           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ac6c765496e1602cdf8a2160251cce9e"></a><!-- doxytag: member="OpenBabel::OBRotorList::EndRotors" ref="ac6c765496e1602cdf8a2160251cce9e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#434f394d0613a8ef6c119670ff49710f">OBRotorIterator</a> EndRotors           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f5b2891615e85e4fb9ff52d2931c6170"></a><!-- doxytag: member="OpenBabel::OBRotorList::IdentifyEvalAtoms" ref="f5b2891615e85e4fb9ff52d2931c6170" args="(OBMol &amp;mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IdentifyEvalAtoms           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000046">Deprecated:</a></b></dt><dd>Not declared. Use <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#278d20fb9c70e9786bc3ce48053af491">Setup()</a> for top-level functionality </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="rotor_8h-source.shtml">rotor.h</a><li><a class="el" href="rotor_8cpp.shtml">rotor.cpp</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:41 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
