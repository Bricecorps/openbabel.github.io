<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBRing Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>
  </div>
</div>
<div class="contents">
<h1>OBRing Class Reference</h1><!-- doxytag: class="OpenBabel::OBRing" -->Stores information on rings in a molecule from SSSR perception.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="ring_8h-source.shtml">openbabel/ring.h</a>&gt;</code>
<p>

<p>
<a href="classOpenBabel_1_1OBRing-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#9827f891ea982b6e8f01d9faf874efde">Size</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#e9ccc84c0ab9ecf22ba554cfc8426b6b">PathSize</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#1c74fed3a281f591495387ec5fb0a050">IsAromatic</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#945b912388c54c9e48c36f11b270b2ce">SetType</a> (char *type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#ef1d0a90f7d5dd118380188a882a2480">SetType</a> (std::string &amp;type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#7f02f5442f2ed3aa2045587d3319ab7e">GetType</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#5f3dc6510cef07a2247e495d928afb10">GetRootAtom</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#30bcd8070ca5df7d8f9c665e22666d2e">IsMember</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#cf3841f44863af6030c02f54a10ba635">IsMember</a> (<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *b)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#87c9cc8c92936bd191dca74f78fb84cb">IsInRing</a> (int i)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#82ba3a4d5db75e9f11d3ea8dd5ef32b8">SetParent</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *m)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#d8480b61159bc6cb861b17341dc2b29a">GetParent</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#2e91c040e3659233748563f119aa77da">findCenterAndNormal</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;center, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;norm1, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;norm2)</td></tr>

<tr><td colspan="2"><div class="groupHeader">Constructors</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#ca37bf71481749f6555e916555d9e7a2">OBRing</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#ce01bbda7e867381b5b0416b3666a8e3">OBRing</a> (std::vector&lt; int &gt; &amp;path, int size)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#2abeced3e6e318f88abe9249833b6d25">OBRing</a> (std::vector&lt; int &gt; &amp;path, <a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> set)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#23338e172a6e54349b089741494a4562">OBRing</a> (const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;src)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#651c293bb5cfd688a358cf47d596c9c7">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;src)</td></tr>

<tr><td colspan="2"><br><h2>Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; int &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#86d1b14f3c439c5be01e0f6c9dc60a1d">_path</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#babc3e7a7e660eba9b2dfa3b2bc28782">_pathset</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Stores information on rings in a molecule from SSSR perception. 
<p>
Ring information beyond atom and bond membership is usually not necessary, but more information can be had about the rings in a molecule. The <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> class is used to store the information from a Smallest Set of Smallest Rings (SSSR) perception of a molecule. The <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> member function <a class="el" href="classOpenBabel_1_1OBMol.shtml#0f6bce457ef6f963b8e4ba7c4be23775" title="Implements blue-obelisk:findSmallestSetOfSmallestRings.">OBMol::GetSSSR()</a> stores the information it perceives in a vector&lt;OBRing*&gt; inside the molecule. Perception is only done once for a molecule unless the connection table is modified. The following code demonstrates how to extract the SSSR information:<p>
<div class="fragment"><pre class="fragment">    OBMol mol;

    vector&lt;OBRing*&gt; vr;
    vr = mol.GetSSSR();
</pre></div><p>
OBRings store the atom numbers of the atoms in each of the smallest set of smallest rings in both a vector&lt;int&gt; and an <a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits.">OBBitVec</a>. An example of how to print out the atom numbers present in all SSSR rings is show below:<p>
<div class="fragment"><pre class="fragment">    vector&lt;OBRing*&gt;::iterator i;
    vector&lt;int&gt;::iterator j;
    vector&lt;OBRing*&gt; *rlist = (vector&lt;OBRing*&gt;*)mol.GetData(<span class="stringliteral">"RingList"</span>);
    <span class="keywordflow">for</span> (i = rlist-&gt;begin();i != rlist-&gt;end();++i)
    {
       <span class="keywordflow">for</span>(j = (*i)-&gt;_path.begin(); j != (*i)-&gt;_path.end(); ++j)
          cout &lt;&lt; *j &lt;&lt; <span class="charliteral">' '</span>;
       cout &lt;&lt; endl;
    }
</pre></div><p>
will produce something like the following output for benzene:<p>
<div class="fragment"><pre class="fragment">    1 2 3 4 5 6
</pre></div><p>
Ring information is automatically deleted from an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> when it goes out of scope or the <a class="el" href="classOpenBabel_1_1OBMol.shtml#d12fd937da5f4b0c4562888252fe214b" title="Clear all information from a molecule.">OBMol::Clear()</a> member function is called.<p>
Implements <a href="http://qsar.sourceforge.net/dicts/blue-obelisk/index.xhtml#findSmallestSetOfSmallestRings">blue-obelisk:findSmallestSetOfSmallestRings</a>. <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="ca37bf71481749f6555e916555d9e7a2"></a><!-- doxytag: member="OpenBabel::OBRing::OBRing" ref="ca37bf71481749f6555e916555d9e7a2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ce01bbda7e867381b5b0416b3666a8e3"></a><!-- doxytag: member="OpenBabel::OBRing::OBRing" ref="ce01bbda7e867381b5b0416b3666a8e3" args="(std::vector&lt; int &gt; &amp;path, int size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; int &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initialize a ring from a set of atom indexes <code>path</code> and with <code>size</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="2abeced3e6e318f88abe9249833b6d25"></a><!-- doxytag: member="OpenBabel::OBRing::OBRing" ref="2abeced3e6e318f88abe9249833b6d25" args="(std::vector&lt; int &gt; &amp;path, OBBitVec set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; int &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>&nbsp;</td>
          <td class="paramname"> <em>set</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="23338e172a6e54349b089741494a4562"></a><!-- doxytag: member="OpenBabel::OBRing::OBRing" ref="23338e172a6e54349b089741494a4562" args="(const OBRing &amp;src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>src</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> copy constructor. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>src</em>&nbsp;</td><td>reference to original <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> object (rhs) </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="651c293bb5cfd688a358cf47d596c9c7"></a><!-- doxytag: member="OpenBabel::OBRing::operator=" ref="651c293bb5cfd688a358cf47d596c9c7" args="(const OBRing &amp;src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp; operator=           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>src</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> assignment operator. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>src</em>&nbsp;</td><td>reference to original <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> object (rhs) </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>reference to modified <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> object (lhs) </dd></dl>

</div>
</div><p>
<a class="anchor" name="9827f891ea982b6e8f01d9faf874efde"></a><!-- doxytag: member="OpenBabel::OBRing::Size" ref="9827f891ea982b6e8f01d9faf874efde" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int Size           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the size of this ring (i.e., how many atoms in the cycle) </dd></dl>

<p>Referenced by <a class="el" href="ring_8cpp-source.shtml#l00323">OpenBabel::CompareRingSize()</a>, and <a class="el" href="ring_8cpp-source.shtml#l00432">OBRing::GetRootAtom()</a>.</p>

</div>
</div><p>
<a class="anchor" name="e9ccc84c0ab9ecf22ba554cfc8426b6b"></a><!-- doxytag: member="OpenBabel::OBRing::PathSize" ref="e9ccc84c0ab9ecf22ba554cfc8426b6b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int PathSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the size of this ring (i.e., how many atoms in the cycle) </dd></dl>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000044">Deprecated:</a></b></dt><dd>Use <a class="el" href="classOpenBabel_1_1OBRing.shtml#9827f891ea982b6e8f01d9faf874efde">Size()</a> instead </dd></dl>

</div>
</div><p>
<a class="anchor" name="1c74fed3a281f591495387ec5fb0a050"></a><!-- doxytag: member="OpenBabel::OBRing::IsAromatic" ref="1c74fed3a281f591495387ec5fb0a050" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAromatic           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether this ring is aromatic If all atoms in this ring are aromatic, the ring will be considered aromatic </dd></dl>
<dl compact><dt><b><a class="el" href="todo.shtml#_todo000003">Todo:</a></b></dt><dd>This method uses implicit bonding -- bond info is not stored in <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="945b912388c54c9e48c36f11b270b2ce"></a><!-- doxytag: member="OpenBabel::OBRing::SetType" ref="945b912388c54c9e48c36f11b270b2ce" args="(char *type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetType           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the ring type (see <a class="el" href="classOpenBabel_1_1OBRingTyper.shtml" title="Assigns ring types.">OBRingTyper</a> for more). 
<p>

</div>
</div><p>
<a class="anchor" name="ef1d0a90f7d5dd118380188a882a2480"></a><!-- doxytag: member="OpenBabel::OBRing::SetType" ref="ef1d0a90f7d5dd118380188a882a2480" args="(std::string &amp;type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetType           </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the ring type (see <a class="el" href="classOpenBabel_1_1OBRingTyper.shtml" title="Assigns ring types.">OBRingTyper</a> for more). 
<p>

</div>
</div><p>
<a class="anchor" name="7f02f5442f2ed3aa2045587d3319ab7e"></a><!-- doxytag: member="OpenBabel::OBRing::GetType" ref="7f02f5442f2ed3aa2045587d3319ab7e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char * GetType           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the ring type </dd></dl>

</div>
</div><p>
<a class="anchor" name="5f3dc6510cef07a2247e495d928afb10"></a><!-- doxytag: member="OpenBabel::OBRing::GetRootAtom" ref="5f3dc6510cef07a2247e495d928afb10" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetRootAtom           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the index for the root atom. O for furan, S for thiazole, N for pyrrole. For 6 membered aromatic rings, the first non carbon atom is used for root. For 5 members rings the O, S or N (BOSum=3, valence=3) will be used for root </dd></dl>

</div>
</div><p>
<a class="anchor" name="30bcd8070ca5df7d8f9c665e22666d2e"></a><!-- doxytag: member="OpenBabel::OBRing::IsMember" ref="30bcd8070ca5df7d8f9c665e22666d2e" args="(OBAtom *a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMember           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether atom <code>a</code> is a member of this ring </dd></dl>

</div>
</div><p>
<a class="anchor" name="cf3841f44863af6030c02f54a10ba635"></a><!-- doxytag: member="OpenBabel::OBRing::IsMember" ref="cf3841f44863af6030c02f54a10ba635" args="(OBBond *b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMember           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&nbsp;</td>
          <td class="paramname"> <em>b</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether both atoms in bond <code>b</code> are in this ring </dd></dl>
<dl compact><dt><b><a class="el" href="todo.shtml#_todo000004">Todo:</a></b></dt><dd>This method uses implicit bonding -- bond info is not stored in <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="87c9cc8c92936bd191dca74f78fb84cb"></a><!-- doxytag: member="OpenBabel::OBRing::IsInRing" ref="87c9cc8c92936bd191dca74f78fb84cb" args="(int i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInRing           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether <code>i</code> as an atom index is in this ring </dd></dl>

<p>Referenced by <a class="el" href="typer_8cpp-source.shtml#l00672">OBAromaticTyper::SelectRootAtoms()</a>.</p>

</div>
</div><p>
<a class="anchor" name="82ba3a4d5db75e9f11d3ea8dd5ef32b8"></a><!-- doxytag: member="OpenBabel::OBRing::SetParent" ref="82ba3a4d5db75e9f11d3ea8dd5ef32b8" args="(OBMol *m)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetParent           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&nbsp;</td>
          <td class="paramname"> <em>m</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the parent of this ring to <code>m</code>. 
<p>

<p>Referenced by <a class="el" href="ring_8cpp-source.shtml#l00082">OBMol::FindSSSR()</a>.</p>

</div>
</div><p>
<a class="anchor" name="d8480b61159bc6cb861b17341dc2b29a"></a><!-- doxytag: member="OpenBabel::OBRing::GetParent" ref="d8480b61159bc6cb861b17341dc2b29a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* GetParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the parent of this ring, or NULL if none has been defined </dd></dl>

<p>Referenced by <a class="el" href="ring_8cpp-source.shtml#l00432">OBRing::GetRootAtom()</a>, and <a class="el" href="ring_8cpp-source.shtml#l00423">OBRing::GetType()</a>.</p>

</div>
</div><p>
<a class="anchor" name="2e91c040e3659233748563f119aa77da"></a><!-- doxytag: member="OpenBabel::OBRing::findCenterAndNormal" ref="2e91c040e3659233748563f119aa77da" args="(vector3 &amp;center, vector3 &amp;norm1, vector3 &amp;norm2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool findCenterAndNormal           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>norm1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>norm2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the supplied vectors to the <code>center</code> of this ring, along with the <code>normal</code> (in both directions). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>center</em>&nbsp;</td><td>The center of the ring </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>norm1</em>&nbsp;</td><td>The normal of the best-fit plane for this ring </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>norm2</em>&nbsp;</td><td>-1 * norm1 (i.e., the opposite direction of norm1) </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True (success) </dd></dl>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="86d1b14f3c439c5be01e0f6c9dc60a1d"></a><!-- doxytag: member="OpenBabel::OBRing::_path" ref="86d1b14f3c439c5be01e0f6c9dc60a1d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int&gt; <a class="el" href="classOpenBabel_1_1OBRing.shtml#86d1b14f3c439c5be01e0f6c9dc60a1d">_path</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
the path of this ring (i.e., the atom indexes) 
<p>

<p>Referenced by <a class="el" href="ring_8cpp-source.shtml#l00571">OBRing::findCenterAndNormal()</a>, <a class="el" href="ring_8cpp-source.shtml#l00432">OBRing::GetRootAtom()</a>, <a class="el" href="ring_8cpp-source.shtml#l00400">OBRing::IsAromatic()</a>, <a class="el" href="ring_8cpp-source.shtml#l00469">OBRing::OBRing()</a>, <a class="el" href="ring_8cpp-source.shtml#l00494">OBRing::operator=()</a>, and <a class="el" href="typer_8cpp-source.shtml#l00672">OBAromaticTyper::SelectRootAtoms()</a>.</p>

</div>
</div><p>
<a class="anchor" name="babc3e7a7e660eba9b2dfa3b2bc28782"></a><!-- doxytag: member="OpenBabel::OBRing::_pathset" ref="babc3e7a7e660eba9b2dfa3b2bc28782" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> <a class="el" href="classOpenBabel_1_1OBRing.shtml#babc3e7a7e660eba9b2dfa3b2bc28782">_pathset</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
the path of this ring as a redundant bit vector 
<p>

<p>Referenced by <a class="el" href="canon_8cpp-source.shtml#l00293">OpenBabel::FindRingAtoms()</a>, <a class="el" href="ring_8cpp-source.shtml#l00459">OBRing::IsMember()</a>, <a class="el" href="ring_8cpp-source.shtml#l00469">OBRing::OBRing()</a>, and <a class="el" href="ring_8cpp-source.shtml#l00494">OBRing::operator=()</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="ring_8h-source.shtml">ring.h</a><li><a class="el" href="ring_8cpp.shtml">ring.cpp</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:41 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
