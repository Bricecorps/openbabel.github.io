<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: Deprecated List</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1><a class="anchor" name="deprecated">Deprecated List </a></h1><a class="anchor" name="_deprecated000047"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1matrix3x3.shtml#0aba6c9a55fa03689378594bb58f1ff1">OpenBabel::matrix3x3::Get</a> (int row, int column) const  </dt>
<dd>use the constant operator() instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000048"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1matrix3x3.shtml#ae7e56afba0365c34add2d93288995ca">OpenBabel::matrix3x3::Set</a> (int row, int column, double v) </dt>
<dd>use the non-constant operator() instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000056"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1matrix3x3.shtml#031b9641f48f7639949cad29a6a99109">OpenBabel::matrix3x3::PlaneReflection</a> (const vector3 &amp;norm) </dt>
<dd>This method will probably replaced by a safer algorithm in the future.<p>
</dd>
</dl>
<p>
<a class="anchor" name="_deprecated000057"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1matrix3x3.shtml#e2b83cb7b73473405cd57594c88f541c">OpenBabel::matrix3x3::RotAboutAxisByAngle</a> (const vector3 &amp;axis, const double angle) </dt>
<dd>This method will probably replaced by a safer algorithm in the future.<p>
</dd>
</dl>
<p>
<a class="anchor" name="_deprecated000001"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#042ed0fe3ac49c9505f9f79d07469423">OpenBabel::OBAtom::GetCIdx</a> () const  </dt>
<dd>Use GetCoordinateIdx() instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000002"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#d3bbdba4326cf884eeb110b02f7caef7">OpenBabel::OBAtom::GetNextAtom</a> () </dt>
<dd>Use any of the other iterator methods. This method will be removed in the future. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000003"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#566764b6577e8ba6a4959bd0f2e25076">OpenBabel::OBAtom::KBOSum</a> () const  </dt>
<dd>Use BOSum() instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000055"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#0d8f018cbaaa9d313b45e468f77afea2">OpenBabel::OBAtomTyper::CorrectAromaticNitrogens</a> (OBMol &amp;) </dt>
<dd>Currently unused for anything significant. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000004"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBBitVec.shtml#6fcfd4a80bfd7dc324f815cd351bfbdf">OpenBabel::OBBitVec::Empty</a> () const  </dt>
<dd>Use IsEmpty() instead. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000005"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBBitVec.shtml#d06f035d55e669326f14cd7c6ff724cc">OpenBabel::OBBitVec::BitIsOn</a> (int bit_offset) const  </dt>
<dd>Use BitIsSet(unsigned bit_offset) instead. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000007"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#3b00183cecf8df500db30888b4f83e70">OpenBabel::OBBond::SetBO</a> (int order) </dt>
<dd>Use SetBondOrder() instead. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000008"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#cb95632fbaba13a5aa138725a20f2c0b">OpenBabel::OBBond::SetKSingle</a> () </dt>
<dd>Use SetBondOrder() instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000009"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#2372682111abb0a7d49ba2f6caa7f51f">OpenBabel::OBBond::SetKDouble</a> () </dt>
<dd>Use SetBondOrder() instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000010"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#068e086977f8e15b07d3c3d32f622ead">OpenBabel::OBBond::SetKTriple</a> () </dt>
<dd>Use SetBondOrder() instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000011"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#d4d2cadd80651fe9e8bc35c492aa5667">OpenBabel::OBBond::GetBO</a> () const  </dt>
<dd>Use GetBondOrder() as this method may be removed. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000012"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#3dcf63c2cdd597361fe1f140501fb4e7">OpenBabel::OBBond::IsKSingle</a> () </dt>
<dd>Use IsSingle() instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000013"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#1293d36d6ef65f89892ed57092aeb157">OpenBabel::OBBond::IsKDouble</a> () </dt>
<dd>Use IsDouble() instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000014"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#d2ccb49198384c9d22b47ac7d0c4de90">OpenBabel::OBBond::IsKTriple</a> () </dt>
<dd>Use IsTriple() instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000006"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#6368d7673f23186649b2969ade3661d7">OpenBabel::OBBond::Visit</a>  </dt>
<dd>Use OBBitVec objects instead to be fully thread-safe. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000015"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBElement.shtml#dc9911e43430fd65726f393308db7e6e">OpenBabel::OBElement::OBElement</a> () </dt>
<dd>Not used. Instead, initialize element properties </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000016"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBElementTable.shtml#8228e8800bb8fae4658c751d6e999918">OpenBabel::OBElementTable::GetAtomicNum</a> (const char *) </dt>
<dd>Does not properly handle 'D' or 'T' hydrogen isotopes </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000028"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#b3d065904c33ecf6eaae0199fe6d0592">OpenBabel::OBFloatGrid::GetMin</a> (double *a) </dt>
<dd>Will be removed. Use </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000029"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#1aa43bea8911cf7665f6e2fd151b609c">OpenBabel::OBFloatGrid::GetMax</a> (double *a) </dt>
<dd>Will be removed. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000030"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#78f75c8108f8539c255711029b37cedc">OpenBabel::OBFloatGrid::GetSpacing</a> (double &amp;s) </dt>
<dd>Will be removed. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000031"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#6e6665768ad3b8fc18276c6517c0b03d">OpenBabel::OBFloatGrid::GetDim</a> (int *a) </dt>
<dd>May be removed in future. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000032"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#009627e179cde33c9c0150d6a06214fd">OpenBabel::OBFloatGrid::SetLimits</a> (const double origin[3], const double x[3], const double y[3], const double z[3]) </dt>
<dd>Will be removed. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000033"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#5eb7667a7f7ac9876e632c35231fc44a">OpenBabel::OBFloatGrid::GetVals</a> () </dt>
<dd>Will be removed. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000034"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#70b7ebc269d7a65e00d8eae51a5f01f4">OpenBabel::OBFloatGrid::SetVals</a> (double *ptr) </dt>
<dd>Will be removed. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000021"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#5f08066361ace92acfa362df93fafd76">OpenBabel::OBForceField::LineSearch</a> (OBAtom *atom, vector3 &amp;direction) </dt>
<dd>Current code should use LineSearch(double *, double*) instead. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000022"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#b451a524c7a4f04bb987b3fac9288eed">OpenBabel::OBForceField::VectorLengthDerivative</a> (vector3 &amp;a, vector3 &amp;b) </dt>
<dd></dd>
</dl>
<p>
<a class="anchor" name="_deprecated000023"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#fe981b8f96a737d0228fbf62c4c94417">OpenBabel::OBForceField::VectorAngleDerivative</a> (vector3 &amp;a, vector3 &amp;b, vector3 &amp;c) </dt>
<dd></dd>
</dl>
<p>
<a class="anchor" name="_deprecated000024"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#4b7e7649d0928a2cb6a2123e3e4dec6f">OpenBabel::OBForceField::VectorOOPDerivative</a> (vector3 &amp;a, vector3 &amp;b, vector3 &amp;c, vector3 &amp;d) </dt>
<dd></dd>
</dl>
<p>
<a class="anchor" name="_deprecated000025"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#4d4709cf0de47e7c6f44da4e21f20c9f">OpenBabel::OBForceField::VectorTorsionDerivative</a> (vector3 &amp;a, vector3 &amp;b, vector3 &amp;c, vector3 &amp;d) </dt>
<dd></dd>
</dl>
<p>
<a class="anchor" name="_deprecated000019"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#b9bff2ca9aad359da6491fa4c3f46577">OpenBabel::OBForceField::UpdateCoordinates</a> (OBMol &amp;mol) </dt>
<dd>Use GetCooordinates instead. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000020"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#5c29065ad6e1322ade9087657bc576ec">OpenBabel::OBForceField::UpdateConformers</a> (OBMol &amp;mol) </dt>
<dd>Use GetConformers instead. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000035"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBGridData.shtml#49001a7fa2061cbf41d8ec868a895f92">OpenBabel::OBGridData::GetOriginVector</a> (double o[3]) const  </dt>
<dd>Will be removed. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000036"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBGridData.shtml#009627e179cde33c9c0150d6a06214fd">OpenBabel::OBGridData::SetLimits</a> (const double origin[3], const double x[3], const double y[3], const double z[3]) </dt>
<dd>Will be removed. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000037"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#fd5176ccf4c318a93379716d48ab01e8">OpenBabel::OBMol::CreateAtom</a> (void) </dt>
<dd>Use NewAtom instead, which ensures internal connections </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000038"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#ed69c2ff7d45271240ee8e33f4344d5a">OpenBabel::OBMol::CreateBond</a> (void) </dt>
<dd>Use NewBond instead, which ensures internal connections </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000039"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#3803d9a4c2a776560b0c36bc2e788132">OpenBabel::OBMol::CreateResidue</a> (void) </dt>
<dd>Use NewResidue instead, which ensures internal connections </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000040"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#7a8287faea913f46d12783a066857b16">OpenBabel::OBMol::GetFirstAtom</a> () const  </dt>
<dd>Will be removed in favor of more standard iterator methods </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000026"></a> <dl>
<dt>Class <a class="el" href="classOpenBabel_1_1OBProxGrid.shtml">OBProxGrid</a>  </dt>
<dd>May be removed in the future, since docking is not a key feature </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000017"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#41190815d4d7f64a08eed50e39f64122">OpenBabel::OBResidueData::LookupBO</a> (const std::string &amp;) </dt>
<dd>Easier to use the two-argument form </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000018"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#61ad927515ed6a722fd90d3610759197">OpenBabel::OBResidueData::AssignBonds</a> (OBMol &amp;, OBBitVec &amp;) </dt>
<dd>second OBBitVec argument is ignored </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000044"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBRing.shtml#e9ccc84c0ab9ecf22ba554cfc8426b6b">OpenBabel::OBRing::PathSize</a> () const  </dt>
<dd>Use Size() instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000045"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#dbf9e2936af60825abb7f7812ba8fae8">OpenBabel::OBRotorList::IgnoreSymmetryRemoval</a> () </dt>
<dd>Currently has no effect </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000046"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#f5b2891615e85e4fb9ff52d2931c6170">OpenBabel::OBRotorList::IdentifyEvalAtoms</a> (OBMol &amp;mol) </dt>
<dd>Not declared. Use Setup() for top-level functionality </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000027"></a> <dl>
<dt>Class <a class="el" href="classOpenBabel_1_1OBScoreGrid.shtml">OBScoreGrid</a>  </dt>
<dd>Will disappear in future versions. Use your own code. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000043"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#9aa91437a607c7d33353f38857add180">OpenBabel::OBSmartsPattern::_growbond</a>  </dt>
<dd>(Not used) </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000051"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1OBTypeTable.shtml#9c5ec7f3f42fea1f014ac3f346c7aef4">OpenBabel::OBTypeTable::Translate</a> (char *to, const char *from) </dt>
<dd>Because there is no guarantee on the length of an atom type you should consider using std::string instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000054"></a> <dl>
<dt>Class <a class="el" href="classOpenBabel_1_1patty.shtml">patty</a>  </dt>
<dd>This code is currently not used by the Open Babel library. Instead, OBAtomTyper and OBAromaticTyper are used. Unless there is interest in retaining this independent class, it will be removed in the future.<p>
</dd>
</dl>
<p>
<a class="anchor" name="_deprecated000049"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1vector3.shtml#49ed80cbaa997a8f5b5e25ac3610db6f">OpenBabel::vector3::operator==</a> (const vector3 &amp;) const  </dt>
<dd>This method uses unreliable floating point == comparisons Use <a class="el" href="namespaceOpenBabel.shtml#f464b3279bc3db8c58ca552ddb0e8e79">vector3::IsApprox()</a> instead. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000050"></a> <dl>
<dt>Member <a class="el" href="classOpenBabel_1_1vector3.shtml#54bc009d3ca567251114c2a86c7753ff">OpenBabel::vector3::operator!=</a> (const vector3 &amp;other) const  </dt>
<dd>This method uses unreliable floating point == comparisons Use <a class="el" href="namespaceOpenBabel.shtml#f464b3279bc3db8c58ca552ddb0e8e79">vector3::IsApprox()</a> instead. </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000052"></a> <dl>
<dt>Member <a class="el" href="namespaceOpenBabel.shtml#32ba50e0b43cb1dfdf1978d1e72099c5">ThrowError</a>  </dt>
<dd>Throw an error through the <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml" title="Handle error messages, warnings, debugging information and the like.">OpenBabel::OBMessageHandler</a> class </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000053"></a> <dl>
<dt>Member <a class="el" href="namespaceOpenBabel.shtml#c9aac27fe3b12d7201f8eb7cb95a3c57">ThrowError</a>  </dt>
<dd>Throw an error through the <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml" title="Handle error messages, warnings, debugging information and the like.">OpenBabel::OBMessageHandler</a> class </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000041"></a> <dl>
<dt>Member <a class="el" href="namespaceOpenBabel.shtml#362770307f86a3b9acd494d9ccbbcf51">IsNear</a>  </dt>
<dd>Use <a class="el" href="namespaceOpenBabel.shtml#f464b3279bc3db8c58ca552ddb0e8e79">IsApprox()</a> instead </dd>
</dl>
<p>
<a class="anchor" name="_deprecated000042"></a> <dl>
<dt>Member <a class="el" href="namespaceOpenBabel.shtml#29e51098e105d63b04b5517299d1b772">IsNearZero</a>  </dt>
<dd></dd>
</dl>
<p>
<a class="anchor" name="_deprecated000058"></a> <dl>
<dt>Member <a class="el" href="namespaceOpenBabel.shtml#00e2879019f2fb0fc689a7e5cb5d2008">vectorAngle</a>  </dt>
<dd>This method will probably replaced by a safer algorithm in the future.<p>
</dd>
</dl>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:37 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
