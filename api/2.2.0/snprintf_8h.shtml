<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: snprintf.h File Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="classes.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>snprintf.h File Reference</h1>
<p>
<a href="snprintf_8h-source.shtml">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="snprintf_8h.shtml#e7b63d1b04b47a62e0168225e000824c">PORTABLE_SNPRINTF_VERSION_MAJOR</a>&nbsp;&nbsp;&nbsp;2</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="snprintf_8h.shtml#076d04c914732567f8300676b32c3b08">PORTABLE_SNPRINTF_VERSION_MINOR</a>&nbsp;&nbsp;&nbsp;2</td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="snprintf_8h.shtml#357a42eb6494ea592e9c3f96c55cebe2">snprintf</a> (char *, size_t, const char *,...)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="snprintf_8h.shtml#0495b4aa0b2ea7e5dd10e976aa63e4d3">vsnprintf</a> (char *, size_t, const char *, va_list)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="snprintf_8h.shtml#4415d3b9a3d58a79ec7df1500c6a6449">asprintf</a> (char **ptr, const char *fmt,...)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="snprintf_8h.shtml#1556f320cb3c2d5c80a0b725531ee3eb">vasprintf</a> (char **ptr, const char *fmt, va_list ap)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="snprintf_8h.shtml#a9d25e67e52c7709b14d6d4152457ad8">asnprintf</a> (char **ptr, size_t str_m, const char *fmt,...)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="snprintf_8h.shtml#cba11fd03e0a55eea5797fe80b92fa2d">vasnprintf</a> (char **ptr, size_t str_m, const char *fmt, va_list ap)</td></tr>

</table>
<hr><h2>Define Documentation</h2>
<a class="anchor" name="e7b63d1b04b47a62e0168225e000824c"></a><!-- doxytag: member="snprintf.h::PORTABLE_SNPRINTF_VERSION_MAJOR" ref="e7b63d1b04b47a62e0168225e000824c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PORTABLE_SNPRINTF_VERSION_MAJOR&nbsp;&nbsp;&nbsp;2          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="076d04c914732567f8300676b32c3b08"></a><!-- doxytag: member="snprintf.h::PORTABLE_SNPRINTF_VERSION_MINOR" ref="076d04c914732567f8300676b32c3b08" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PORTABLE_SNPRINTF_VERSION_MINOR&nbsp;&nbsp;&nbsp;2          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="357a42eb6494ea592e9c3f96c55cebe2"></a><!-- doxytag: member="snprintf.h::snprintf" ref="357a42eb6494ea592e9c3f96c55cebe2" args="(char *, size_t, const char *,...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int snprintf           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname"> <em>...</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l02617">OBForceField::ConjugateGradientsInitialize()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l02703">OBForceField::ConjugateGradientsTakeNSteps()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01670">OBForceField::DistanceGeometry()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00940">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="atom_8cpp-source.shtml#l00469">OBAtom::GetType()</a>, <a class="el" href="obconversion_8cpp-source.shtml#l01011">OBConversion::IncrementedFileName()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l00787">OBForceField::PrintFormalCharges()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l00800">OBForceField::PrintPartialCharges()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l00774">OBForceField::PrintTypes()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l00813">OBForceField::PrintVelocities()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01289">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01356">OBForceField::RandomRotorSearchNextConformer()</a>, <a class="el" href="rotor_8cpp-source.shtml#l00042">OBRotorList::Setup()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l02508">OBForceField::SteepestDescentInitialize()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l02531">OBForceField::SteepestDescentTakeNSteps()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01182">OBForceField::SystematicRotorSearchInitialize()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01241">OBForceField::SystematicRotorSearchNextConformer()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l02443">OBForceField::ValidateConjugateGradients()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l02401">OBForceField::ValidateSteepestDescent()</a>, and <a class="el" href="forcefield_8cpp-source.shtml#l01450">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div><p>
<a class="anchor" name="0495b4aa0b2ea7e5dd10e976aa63e4d3"></a><!-- doxytag: member="snprintf.h::vsnprintf" ref="0495b4aa0b2ea7e5dd10e976aa63e4d3" args="(char *, size_t, const char *, va_list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vsnprintf           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list&nbsp;</td>
          <td class="paramname"></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="4415d3b9a3d58a79ec7df1500c6a6449"></a><!-- doxytag: member="snprintf.h::asprintf" ref="4415d3b9a3d58a79ec7df1500c6a6449" args="(char **ptr, const char *fmt,...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int asprintf           </td>
          <td>(</td>
          <td class="paramtype">char **&nbsp;</td>
          <td class="paramname"> <em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname"> <em>...</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="1556f320cb3c2d5c80a0b725531ee3eb"></a><!-- doxytag: member="snprintf.h::vasprintf" ref="1556f320cb3c2d5c80a0b725531ee3eb" args="(char **ptr, const char *fmt, va_list ap)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vasprintf           </td>
          <td>(</td>
          <td class="paramtype">char **&nbsp;</td>
          <td class="paramname"> <em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list&nbsp;</td>
          <td class="paramname"> <em>ap</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a9d25e67e52c7709b14d6d4152457ad8"></a><!-- doxytag: member="snprintf.h::asnprintf" ref="a9d25e67e52c7709b14d6d4152457ad8" args="(char **ptr, size_t str_m, const char *fmt,...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int asnprintf           </td>
          <td>(</td>
          <td class="paramtype">char **&nbsp;</td>
          <td class="paramname"> <em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&nbsp;</td>
          <td class="paramname"> <em>str_m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname"> <em>...</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="cba11fd03e0a55eea5797fe80b92fa2d"></a><!-- doxytag: member="snprintf.h::vasnprintf" ref="cba11fd03e0a55eea5797fe80b92fa2d" args="(char **ptr, size_t str_m, const char *fmt, va_list ap)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vasnprintf           </td>
          <td>(</td>
          <td class="paramtype">char **&nbsp;</td>
          <td class="paramname"> <em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&nbsp;</td>
          <td class="paramname"> <em>str_m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list&nbsp;</td>
          <td class="paramname"> <em>ap</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:37 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
