<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: reaction.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="classes.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
<h1>reaction.h</h1><a href="reaction_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">reaction.h - Handle chemical reactions (i.e., lists of reagents and products).</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 2005 by Chris Morley</span>
<a name="l00005"></a>00005 <span class="comment"> </span>
<a name="l00006"></a>00006 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00007"></a>00007 <span class="comment">For more information, see &lt;http://openbabel.sourceforge.net/&gt;</span>
<a name="l00008"></a>00008 <span class="comment"> </span>
<a name="l00009"></a>00009 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00010"></a>00010 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00011"></a>00011 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00012"></a>00012 <span class="comment"> </span>
<a name="l00013"></a>00013 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00014"></a>00014 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00015"></a>00015 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00016"></a>00016 <span class="comment">GNU General Public License for more details.</span>
<a name="l00017"></a>00017 <span class="comment">***********************************************************************/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#ifndef OB_REACT_H</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span><span class="preprocessor">#define OB_REACT_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml" title="Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header...">openbabel/mol.h</a>&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#ifdef USE_BOOST</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">  #include &lt;boost/shared_ptr.hpp&gt;</span>
<a name="l00027"></a>00027   <span class="keyword">namespace </span>std{ <span class="keyword">namespace </span>tr1=::boost; }
<a name="l00028"></a>00028 <span class="preprocessor">#else</span>
<a name="l00029"></a>00029 <span class="preprocessor"></span><span class="preprocessor">  #include &lt;tr1/memory&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#endif</span>
<a name="l00031"></a>00031 <span class="preprocessor"></span>
<a name="l00032"></a>00032 <span class="keyword">namespace </span>OpenBabel
<a name="l00033"></a>00033 {
<a name="l00034"></a>00034 
<a name="l00041"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml">00041</a> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBReaction.shtml" title="Used to store chemical reactions (i.e., reactants -&amp;gt; products).">OBReaction</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>
<a name="l00042"></a>00042 {
<a name="l00043"></a>00043 <span class="keyword">private</span>:
<a name="l00044"></a>00044   std::vector&lt;std::tr1::shared_ptr&lt;OBMol&gt; &gt; _reactants;
<a name="l00045"></a>00045   std::vector&lt;std::tr1::shared_ptr&lt;OBMol&gt; &gt; _products;
<a name="l00046"></a>00046   std::tr1::shared_ptr&lt;OBMol&gt; _ts; 
<a name="l00047"></a>00047   std::tr1::shared_ptr&lt;OBMol&gt; _agent; 
<a name="l00048"></a>00048   std::string _title;
<a name="l00049"></a>00049   std::string _comment;
<a name="l00050"></a>00050   <span class="keywordtype">bool</span> _reversible;
<a name="l00051"></a>00051 <span class="keyword">public</span>:
<a name="l00052"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#d4146c04740bf08485bdea0a457015b0">00052</a>   <a class="code" href="classOpenBabel_1_1OBReaction.shtml#d4146c04740bf08485bdea0a457015b0">OBReaction</a>() : _reversible(false)
<a name="l00053"></a>00053   {}
<a name="l00054"></a>00054 
<a name="l00055"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#98af182824f0924e7582c98a7252b89f">00055</a>   <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#98af182824f0924e7582c98a7252b89f">NumReactants</a>()<span class="keyword"> const</span>
<a name="l00056"></a>00056 <span class="keyword">  </span>{ <span class="keywordflow">return</span> _reactants.size(); }
<a name="l00057"></a>00057 
<a name="l00058"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#de31c5d085eac99f304d8f93c0f8a68a">00058</a>   <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#de31c5d085eac99f304d8f93c0f8a68a">NumProducts</a>()<span class="keyword">const</span>
<a name="l00059"></a>00059 <span class="keyword">  </span>{ <span class="keywordflow">return</span> _products.size(); }
<a name="l00060"></a>00060   
<a name="l00061"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#11abcc56e00e0f88f48fb571f386f377">00061</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#11abcc56e00e0f88f48fb571f386f377">AddReactant</a>(<span class="keyword">const</span> std::tr1::shared_ptr&lt;OBMol&gt; sp)
<a name="l00062"></a>00062   { _reactants.push_back(sp); }
<a name="l00063"></a>00063   
<a name="l00064"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#6f3d5f49daac91a3c6202536a44983a3">00064</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#6f3d5f49daac91a3c6202536a44983a3">AddProduct</a>(<span class="keyword">const</span> std::tr1::shared_ptr&lt;OBMol&gt; sp)
<a name="l00065"></a>00065   { _products.push_back(sp); }
<a name="l00066"></a>00066 
<a name="l00067"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#12e0921f488b9a80c9fc29a059acac3b">00067</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#12e0921f488b9a80c9fc29a059acac3b">SetTransitionState</a>(<span class="keyword">const</span> std::tr1::shared_ptr&lt;OBMol&gt; sp)
<a name="l00068"></a>00068   { _ts = sp; }
<a name="l00069"></a>00069 
<a name="l00070"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#5f6a16a25ac4f2eddd118d06723cdb48">00070</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#5f6a16a25ac4f2eddd118d06723cdb48">AddAgent</a>(<span class="keyword">const</span> std::tr1::shared_ptr&lt;OBMol&gt; sp)
<a name="l00071"></a>00071   { _agent = sp; }
<a name="l00072"></a>00072   
<a name="l00073"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#1f467b540119fc778937ce4c1e0c6cf3">00073</a>   std::tr1::shared_ptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#1f467b540119fc778937ce4c1e0c6cf3">GetReactant</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> i)
<a name="l00074"></a>00074   {
<a name="l00075"></a>00075     std::tr1::shared_ptr&lt;OBMol&gt; sp;
<a name="l00076"></a>00076     <span class="keywordflow">if</span>(i&lt;_reactants.size())
<a name="l00077"></a>00077       sp = _reactants[i];
<a name="l00078"></a>00078     <span class="keywordflow">return</span> sp; <span class="comment">//returns empty if out of range</span>
<a name="l00079"></a>00079   }
<a name="l00080"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#c0521b76f1480f0a1f51dc1d2fbe5aae">00080</a>   std::tr1::shared_ptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#c0521b76f1480f0a1f51dc1d2fbe5aae">GetProduct</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> i)
<a name="l00081"></a>00081   {
<a name="l00082"></a>00082     std::tr1::shared_ptr&lt;OBMol&gt; sp;
<a name="l00083"></a>00083     <span class="keywordflow">if</span>(i&lt;_products.size())
<a name="l00084"></a>00084       sp = _products[i];
<a name="l00085"></a>00085     <span class="keywordflow">return</span> sp; <span class="comment">//returns empty if out of range</span>
<a name="l00086"></a>00086   }
<a name="l00087"></a>00087 
<a name="l00088"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#ec930fabef776a15a3e155e0bd34f863">00088</a>   std::tr1::shared_ptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#ec930fabef776a15a3e155e0bd34f863">GetTransitionState</a>()<span class="keyword">const</span>
<a name="l00089"></a>00089 <span class="keyword">  </span>{ <span class="keywordflow">return</span> _ts; }
<a name="l00090"></a>00090 
<a name="l00091"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#e9d1bff1a5cd8205604dbb0998eedd15">00091</a>   std::tr1::shared_ptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#e9d1bff1a5cd8205604dbb0998eedd15">GetAgent</a>()<span class="keyword">const</span>
<a name="l00092"></a>00092 <span class="keyword">  </span>{ <span class="keywordflow">return</span> _agent; }
<a name="l00093"></a>00093 
<a name="l00094"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#85cb18896dd69857181b9f0fee289f53">00094</a>   std::string <a class="code" href="classOpenBabel_1_1OBReaction.shtml#85cb18896dd69857181b9f0fee289f53">GetTitle</a>()<span class="keyword">        const </span>{ <span class="keywordflow">return</span> _title; }
<a name="l00095"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#756028b52b8e0945201426d53a80b47a">00095</a>   std::string <a class="code" href="classOpenBabel_1_1OBReaction.shtml#756028b52b8e0945201426d53a80b47a">GetComment</a>()<span class="keyword">      const </span>{ <span class="keywordflow">return</span> _comment; }
<a name="l00096"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#54294c70e5c7d4e8edacbdde65a07ab3">00096</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#54294c70e5c7d4e8edacbdde65a07ab3">SetTitle</a>(<span class="keyword">const</span> std::string&amp; title) { _title=title; }
<a name="l00097"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#172c10e306c608ed9687a06d065dcf7d">00097</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#172c10e306c608ed9687a06d065dcf7d">SetComment</a>(<span class="keyword">const</span> std::string&amp; comment) { _comment=comment; }
<a name="l00098"></a>00098 
<a name="l00099"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#ffd0e8a81e6376c7af13d9265170bb93">00099</a>   <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#ffd0e8a81e6376c7af13d9265170bb93">IsReversible</a>()<span class="keyword"> const       </span>{<span class="keywordflow">return</span> _reversible;}
<a name="l00100"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#b8592aab9b061be89f1d86e642d748b4">00100</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#b8592aab9b061be89f1d86e642d748b4">SetReversible</a>(<span class="keywordtype">bool</span> b=<span class="keyword">true</span>) {_reversible=b;}
<a name="l00101"></a>00101 
<a name="l00102"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#6bb6ed5c064e3957d8dd03aba51e61f7">00102</a>   <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classOpenBabel_1_1OBReaction.shtml#6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a>()
<a name="l00103"></a>00103   {
<a name="l00104"></a>00104     <span class="keywordflow">return</span> <span class="stringliteral">" reactions\n"</span>;
<a name="l00105"></a>00105   }
<a name="l00106"></a>00106 };
<a name="l00107"></a>00107 
<a name="l00108"></a>00108 
<a name="l00109"></a>00109 } <span class="comment">//namespace OpenBabel</span>
<a name="l00110"></a>00110 <span class="preprocessor">#endif</span>
<a name="l00111"></a>00111 <span class="preprocessor"></span>
</pre></div></div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:34 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
