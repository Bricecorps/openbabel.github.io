<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: SpaceGroup Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>
  </div>
</div>
<div class="contents">
<h1>SpaceGroup Class Reference</h1><!-- doxytag: class="OpenBabel::SpaceGroup" -->Handle crystallographic space group symmetry.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="spacegroup_8h-source.shtml">openbabel/math/spacegroup.h</a>&gt;</code>
<p>

<p>
<a href="classOpenBabel_1_1SpaceGroup-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#aff95ae977a162888b91b1dd9a385c37">SpaceGroup</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#6cba611670b2b7c8754242b5f500cdec">~SpaceGroup</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#ac8bbb3e3c283722a681c012daf6d31d">SetHMName</a> (const char *name)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#187cb02cf6cfc7ff146f12940c1ba4a1">SetHMName</a> (const std::string &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#e7455f5d6c96b0ae2e36fc11965c34bc">SetHallName</a> (const char *name)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#50e5af834059842019b2383154556856">SetHallName</a> (const std::string &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#c5c8d608f8b5fa8c20b79b2f3780d2ba">SetId</a> (unsigned n)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#c6957eacc9ea85e6e67a9d964c6d4ced">AddTransform</a> (const std::string &amp;s)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const std::string &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#3e25be88ad9a6307553165a6415bffff">GetHMName</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const std::string &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#877504662caba7eeaa68f09cd09cb26d">GetHallName</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#dd8ee090e8f38e79e0070c0e9628631e">GetId</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::list&lt; <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#80fb04724ecd70b729587ee43c1abcdb">Transform</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> const *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#2184b65fc53b32419db806ed2449b962">BeginTransform</a> (<a class="el" href="namespaceOpenBabel.shtml#7ae0ba0c317c360c22eaa4b481e2dc87">transform3dIterator</a> &amp;i) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> const *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#45ec8285906cb116a67fc53aa9c51d6b">NextTransform</a> (<a class="el" href="namespaceOpenBabel.shtml#7ae0ba0c317c360c22eaa4b481e2dc87">transform3dIterator</a> &amp;i) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#3053a7c0ada34598119f6768fdad5138">RegisterSpaceGroup</a> (int nb=0,...)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#6afbc6571b954abe4df4011708dc8aae">operator==</a> (const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> &amp;) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#c8fd6a9c5f8df50ac3a9665b8b075f1e">operator!=</a> (const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> &amp;other) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#fa8720abaf6972d6dac22a8cd1a67225">IsValid</a> () const </td></tr>

<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#2787ce8a302b665bc4f059670f2e68ca">GetSpaceGroup</a> (char const *name)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#95a213aecae334a88a385c647318361e">GetSpaceGroup</a> (const std::string &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#2c9e8975976f2e714078943728a800c5">GetSpaceGroup</a> (unsigned id)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#dc5179fa55c4d176d458cadb7ffd2afe">Find</a> (<a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *group)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Handle crystallographic space group symmetry. 
<p>
<dl class="since" compact><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1transform3d.shtml" title="Handle 3D transformations, such as space group definitions.">transform3d</a> </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="aff95ae977a162888b91b1dd9a385c37"></a><!-- doxytag: member="OpenBabel::SpaceGroup::SpaceGroup" ref="aff95ae977a162888b91b1dd9a385c37" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="6cba611670b2b7c8754242b5f500cdec"></a><!-- doxytag: member="OpenBabel::SpaceGroup::~SpaceGroup" ref="6cba611670b2b7c8754242b5f500cdec" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="ac8bbb3e3c283722a681c012daf6d31d"></a><!-- doxytag: member="OpenBabel::SpaceGroup::SetHMName" ref="ac8bbb3e3c283722a681c012daf6d31d" args="(const char *name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetHMName           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="187cb02cf6cfc7ff146f12940c1ba4a1"></a><!-- doxytag: member="OpenBabel::SpaceGroup::SetHMName" ref="187cb02cf6cfc7ff146f12940c1ba4a1" args="(const std::string &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetHMName           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e7455f5d6c96b0ae2e36fc11965c34bc"></a><!-- doxytag: member="OpenBabel::SpaceGroup::SetHallName" ref="e7455f5d6c96b0ae2e36fc11965c34bc" args="(const char *name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetHallName           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="50e5af834059842019b2383154556856"></a><!-- doxytag: member="OpenBabel::SpaceGroup::SetHallName" ref="50e5af834059842019b2383154556856" args="(const std::string &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetHallName           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="c5c8d608f8b5fa8c20b79b2f3780d2ba"></a><!-- doxytag: member="OpenBabel::SpaceGroup::SetId" ref="c5c8d608f8b5fa8c20b79b2f3780d2ba" args="(unsigned n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetId           </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>n</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="c6957eacc9ea85e6e67a9d964c6d4ced"></a><!-- doxytag: member="OpenBabel::SpaceGroup::AddTransform" ref="c6957eacc9ea85e6e67a9d964c6d4ced" args="(const std::string &amp;s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddTransform           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3e25be88ad9a6307553165a6415bffff"></a><!-- doxytag: member="OpenBabel::SpaceGroup::GetHMName" ref="3e25be88ad9a6307553165a6415bffff" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::string&amp; GetHMName           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="877504662caba7eeaa68f09cd09cb26d"></a><!-- doxytag: member="OpenBabel::SpaceGroup::GetHallName" ref="877504662caba7eeaa68f09cd09cb26d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::string&amp; GetHallName           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="dd8ee090e8f38e79e0070c0e9628631e"></a><!-- doxytag: member="OpenBabel::SpaceGroup::GetId" ref="dd8ee090e8f38e79e0070c0e9628631e" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned GetId           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="generic_8cpp-source.shtml#l00408">OBUnitCell::GetLatticeType()</a>, and <a class="el" href="generic_8cpp-source.shtml#l00498">OBUnitCell::GetSpaceGroupNumber()</a>.</p>

</div>
</div><p>
<a class="anchor" name="80fb04724ecd70b729587ee43c1abcdb"></a><!-- doxytag: member="OpenBabel::SpaceGroup::Transform" ref="80fb04724ecd70b729587ee43c1abcdb" args="(const vector3 &amp;v) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">list&lt; <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &gt; Transform           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="generic_8cpp-source.shtml#l00550">OBUnitCell::FillUnitCell()</a>.</p>

</div>
</div><p>
<a class="anchor" name="2184b65fc53b32419db806ed2449b962"></a><!-- doxytag: member="OpenBabel::SpaceGroup::BeginTransform" ref="2184b65fc53b32419db806ed2449b962" args="(transform3dIterator &amp;i) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> const * BeginTransform           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#7ae0ba0c317c360c22eaa4b481e2dc87">transform3dIterator</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="45ec8285906cb116a67fc53aa9c51d6b"></a><!-- doxytag: member="OpenBabel::SpaceGroup::NextTransform" ref="45ec8285906cb116a67fc53aa9c51d6b" args="(transform3dIterator &amp;i) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> const * NextTransform           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#7ae0ba0c317c360c22eaa4b481e2dc87">transform3dIterator</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="2787ce8a302b665bc4f059670f2e68ca"></a><!-- doxytag: member="OpenBabel::SpaceGroup::GetSpaceGroup" ref="2787ce8a302b665bc4f059670f2e68ca" args="(char const *name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> * GetSpaceGroup           </td>
          <td>(</td>
          <td class="paramtype">char const *&nbsp;</td>
          <td class="paramname"> <em>name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="generic_8h-source.shtml#l00342">OBUnitCell::SetSpaceGroup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="95a213aecae334a88a385c647318361e"></a><!-- doxytag: member="OpenBabel::SpaceGroup::GetSpaceGroup" ref="95a213aecae334a88a385c647318361e" args="(const std::string &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> * GetSpaceGroup           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="2c9e8975976f2e714078943728a800c5"></a><!-- doxytag: member="OpenBabel::SpaceGroup::GetSpaceGroup" ref="2c9e8975976f2e714078943728a800c5" args="(unsigned id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> * GetSpaceGroup           </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>id</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="dc5179fa55c4d176d458cadb7ffd2afe"></a><!-- doxytag: member="OpenBabel::SpaceGroup::Find" ref="dc5179fa55c4d176d458cadb7ffd2afe" args="(SpaceGroup *group)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> * Find           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&nbsp;</td>
          <td class="paramname"> <em>group</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="3053a7c0ada34598119f6768fdad5138"></a><!-- doxytag: member="OpenBabel::SpaceGroup::RegisterSpaceGroup" ref="3053a7c0ada34598119f6768fdad5138" args="(int nb=0,...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RegisterSpaceGroup           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nb</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname"> <em>...</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="6afbc6571b954abe4df4011708dc8aae"></a><!-- doxytag: member="OpenBabel::SpaceGroup::operator==" ref="6afbc6571b954abe4df4011708dc8aae" args="(const SpaceGroup &amp;) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator==           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>sg</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="c8fd6a9c5f8df50ac3a9665b8b075f1e"></a><!-- doxytag: member="OpenBabel::SpaceGroup::operator!=" ref="c8fd6a9c5f8df50ac3a9665b8b075f1e" args="(const SpaceGroup &amp;other) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int operator!=           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>other</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="fa8720abaf6972d6dac22a8cd1a67225"></a><!-- doxytag: member="OpenBabel::SpaceGroup::IsValid" ref="fa8720abaf6972d6dac22a8cd1a67225" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsValid           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="spacegroup_8cpp-source.shtml#l00403">SpaceGroup::Find()</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="spacegroup_8h-source.shtml">spacegroup.h</a><li><a class="el" href="spacegroup_8cpp.shtml">spacegroup.cpp</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:41 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
