<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBTorsionData Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a>
  </div>
</div>
<div class="contents">
<h1>OBTorsionData Class Reference</h1><!-- doxytag: class="OpenBabel::OBTorsionData" --><!-- doxytag: inherits="OpenBabel::OBGenericData" -->Used to hold torsions as generic data for <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="generic_8h-source.shtml">openbabel/generic.h</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for OBTorsionData:</div>
<div class="dynsection">
<p><center><img src="classOpenBabel_1_1OBTorsionData__inherit__graph.png" border="0" usemap="#OBTorsionData__inherit__map" alt="Inheritance graph"></center>
<map name="OBTorsionData__inherit__map">
<area shape="rect" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data." alt="" coords="5,5,123,32"></map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center></div>

<p>
<a href="classOpenBabel_1_1OBTorsionData-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#b526e7eddb908b711e19aa355d133241">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#67bda850335747e7ac5d66629bda0a67">Clone</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#a71d36872f416feaa853788a7a7a7ef8">Clear</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a> &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#7549ccb8e6a424fb7e15367125a259c8">GetData</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#7d1646dc12416daf821f666c233d2be2">GetSize</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#0d25d5bc7edb0283cc28e8e81cf4cc59">SetData</a> (<a class="el" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a> &amp;torsion)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#f77f051793a56b4f15aa0106066358b9">FillTorsionArray</a> (std::vector&lt; std::vector&lt; unsigned int &gt; &gt; &amp;torsions)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ae3d15983201a2a115701b2c538fef77">SetAttribute</a> (const std::string &amp;v)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#45613e34598a9584fb0120ef3fdab9e0">SetOrigin</a> (const <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a> s)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const std::string &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#c72c28db8b5bb8911845ada56220a1e0">GetAttribute</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#c20b99b31895c99422fb1244def6e213">GetDataType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const std::string &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#c9527475c246fadbbab63a35376fd5fe">GetValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#d080c58f230c474935ed3e27cb2ba906">GetOrigin</a> () const </td></tr>

<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#2eacebc6e2740f1c2525e52fa588702c">OBTorsionData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#59b7f2ef74e6ab882d6cd25424542ba8">OBTorsionData</a> (const <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a> &amp;)</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a> &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#8284d9e040299fd3ee667ad31e34a8d3">_torsions</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#dceb77134f15418a66cf1124dcef1b51">_attr</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#31291823d487a4a47f24aae5870505ef">_type</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#239606b62a534e4df7626ea0cfdfb856">_source</a></td></tr>

<tr><td colspan="2"><br><h2>Friends</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#c59e55249c26b7453efa178aab836428">OBMol</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Used to hold torsions as generic data for <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>. 
<p>
Filled by <a class="el" href="classOpenBabel_1_1OBMol.shtml#1ce9b09fb625faffaae648d7beae9598" title="Fills out an OBTorsionData with angles from the molecule.">OBMol::FindTorsions()</a> <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="2eacebc6e2740f1c2525e52fa588702c"></a><!-- doxytag: member="OpenBabel::OBTorsionData::OBTorsionData" ref="2eacebc6e2740f1c2525e52fa588702c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="59b7f2ef74e6ab882d6cd25424542ba8"></a><!-- doxytag: member="OpenBabel::OBTorsionData::OBTorsionData" ref="59b7f2ef74e6ab882d6cd25424542ba8" args="(const OBTorsionData &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a>           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>src</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="b526e7eddb908b711e19aa355d133241"></a><!-- doxytag: member="OpenBabel::OBTorsionData::operator=" ref="b526e7eddb908b711e19aa355d133241" args="(const OBTorsionData &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a> &amp; operator=           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>src</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="67bda850335747e7ac5d66629bda0a67"></a><!-- doxytag: member="OpenBabel::OBTorsionData::Clone" ref="67bda850335747e7ac5d66629bda0a67" args="(OBBase *) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* Clone           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="todo.shtml#_todo000002">Todo:</a></b></dt><dd>Needs to be updated to rebase atom pointers (or use indexes) </dd></dl>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#67bda850335747e7ac5d66629bda0a67">OBGenericData</a>.</p>

</div>
</div><p>
<a class="anchor" name="a71d36872f416feaa853788a7a7a7ef8"></a><!-- doxytag: member="OpenBabel::OBTorsionData::Clear" ref="a71d36872f416feaa853788a7a7a7ef8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Clear           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="7549ccb8e6a424fb7e15367125a259c8"></a><!-- doxytag: member="OpenBabel::OBTorsionData::GetData" ref="7549ccb8e6a424fb7e15367125a259c8" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a>&gt; GetData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Gets a vector of the <a class="el" href="classOpenBabel_1_1OBTorsion.shtml" title="Used to hold the torsion data for a single rotatable bond and all four atoms around...">OBTorsion</a> objects <dl class="return" compact><dt><b>Returns:</b></dt><dd>the vector of torsions </dd></dl>

</div>
</div><p>
<a class="anchor" name="7d1646dc12416daf821f666c233d2be2"></a><!-- doxytag: member="OpenBabel::OBTorsionData::GetSize" ref="7d1646dc12416daf821f666c233d2be2" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Gets the number of torsion structs <dl class="return" compact><dt><b>Returns:</b></dt><dd>integer count of the number of torsions </dd></dl>

</div>
</div><p>
<a class="anchor" name="0d25d5bc7edb0283cc28e8e81cf4cc59"></a><!-- doxytag: member="OpenBabel::OBTorsionData::SetData" ref="0d25d5bc7edb0283cc28e8e81cf4cc59" args="(OBTorsion &amp;torsion)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>torsion</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="mol_8cpp-source.shtml#l00432">OBMol::FindTorsions()</a>.</p>

</div>
</div><p>
<a class="anchor" name="f77f051793a56b4f15aa0106066358b9"></a><!-- doxytag: member="OpenBabel::OBTorsionData::FillTorsionArray" ref="f77f051793a56b4f15aa0106066358b9" args="(std::vector&lt; std::vector&lt; unsigned int &gt; &gt; &amp;torsions)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FillTorsionArray           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; std::vector&lt; unsigned int &gt; &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>torsions</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Fills a vector with the indices of the atoms in torsions (ordered abcd). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>torsions</em>&nbsp;</td><td>reference to the vector of abcd atom sets </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>boolean success </dd></dl>

<p>Referenced by <a class="el" href="obiter_8cpp-source.shtml#l01000">OBMolTorsionIter::OBMolTorsionIter()</a>.</p>

</div>
</div><p>
<a class="anchor" name="ae3d15983201a2a115701b2c538fef77"></a><!-- doxytag: member="OpenBabel::OBTorsionData::SetAttribute" ref="ae3d15983201a2a115701b2c538fef77" args="(const std::string &amp;v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAttribute           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the attribute (key), which can be used to retrieve this data. 
<p>

<p>Referenced by <a class="el" href="molchrg_8cpp-source.shtml#l00058">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l00990">OBForceField::GetAtomTypes()</a>, <a class="el" href="mol_8cpp-source.shtml#l01052">OBMol::GetFormula()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01010">OBForceField::GetPartialCharges()</a>, <a class="el" href="descriptor_8cpp-source.shtml#l00308">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="mol_8cpp-source.shtml#l01075">OBMol::SetFormula()</a>.</p>

</div>
</div><p>
<a class="anchor" name="45613e34598a9584fb0120ef3fdab9e0"></a><!-- doxytag: member="OpenBabel::OBTorsionData::SetOrigin" ref="45613e34598a9584fb0120ef3fdab9e0" args="(const DataOrigin s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetOrigin           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the origin of this data, which can be used to filter the data. 
<p>

<p>Referenced by <a class="el" href="molchrg_8cpp-source.shtml#l00058">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="chiral_8cpp-source.shtml#l00206">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="mol_8cpp-source.shtml#l00389">OBMol::FindAngles()</a>, <a class="el" href="ring_8cpp-source.shtml#l00082">OBMol::FindSSSR()</a>, <a class="el" href="mol_8cpp-source.shtml#l00432">OBMol::FindTorsions()</a>, <a class="el" href="mol_8cpp-source.shtml#l01052">OBMol::GetFormula()</a>, <a class="el" href="mol_8cpp-source.shtml#l00898">OBMol::GetSSSR()</a>, <a class="el" href="descriptor_8cpp-source.shtml#l00308">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="mol_8cpp-source.shtml#l01075">OBMol::SetFormula()</a>.</p>

</div>
</div><p>
<a class="anchor" name="c72c28db8b5bb8911845ada56220a1e0"></a><!-- doxytag: member="OpenBabel::OBTorsionData::GetAttribute" ref="c72c28db8b5bb8911845ada56220a1e0" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetAttribute           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The attribute (key), which can be used to retrieve this data </dd></dl>

<p>Referenced by <a class="el" href="obmolecformat_8cpp-source.shtml#l00273">OBMoleculeFormat::MakeCombinedMolecule()</a>.</p>

</div>
</div><p>
<a class="anchor" name="c20b99b31895c99422fb1244def6e213"></a><!-- doxytag: member="OpenBabel::OBTorsionData::GetDataType" ref="c20b99b31895c99422fb1244def6e213" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetDataType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the data type for this object as defined in <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="c9527475c246fadbbab63a35376fd5fe"></a><!-- doxytag: member="OpenBabel::OBTorsionData::GetValue" ref="c9527475c246fadbbab63a35376fd5fe" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetValue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Base class returns a default value (the attribute type) but should never be called. 
<p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBCommentData.shtml#c9527475c246fadbbab63a35376fd5fe">OBCommentData</a>, and <a class="el" href="classOpenBabel_1_1OBPairData.shtml#c9527475c246fadbbab63a35376fd5fe">OBPairData</a>.</p>

<p>Referenced by <a class="el" href="descriptor_8cpp-source.shtml#l00085">OBDescriptor::FilterCompare()</a>, and <a class="el" href="descriptor_8cpp-source.shtml#l00423">OBDescriptor::GetValues()</a>.</p>

</div>
</div><p>
<a class="anchor" name="d080c58f230c474935ed3e27cb2ba906"></a><!-- doxytag: member="OpenBabel::OBTorsionData::GetOrigin" ref="d080c58f230c474935ed3e27cb2ba906" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a> GetOrigin           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Friends And Related Function Documentation</h2>
<a class="anchor" name="c59e55249c26b7453efa178aab836428"></a><!-- doxytag: member="OpenBabel::OBTorsionData::OBMol" ref="c59e55249c26b7453efa178aab836428" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a><code> [friend]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="8284d9e040299fd3ee667ad31e34a8d3"></a><!-- doxytag: member="OpenBabel::OBTorsionData::_torsions" ref="8284d9e040299fd3ee667ad31e34a8d3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a>&gt; <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#8284d9e040299fd3ee667ad31e34a8d3">_torsions</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="generic_8cpp-source.shtml#l01190">OBTorsionData::Clear()</a>, <a class="el" href="generic_8cpp-source.shtml#l01205">OBTorsionData::FillTorsionArray()</a>, <a class="el" href="generic_8cpp-source.shtml#l01177">OBTorsionData::operator=()</a>, and <a class="el" href="generic_8cpp-source.shtml#l01195">OBTorsionData::SetData()</a>.</p>

</div>
</div><p>
<a class="anchor" name="dceb77134f15418a66cf1124dcef1b51"></a><!-- doxytag: member="OpenBabel::OBTorsionData::_attr" ref="dceb77134f15418a66cf1124dcef1b51" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#dceb77134f15418a66cf1124dcef1b51">_attr</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
attribute tag (e.g., "UnitCell", "Comment" or "Author") 
<p>

<p>Referenced by <a class="el" href="rotamer_8cpp-source.shtml#l00114">OBRotamerList::Clone()</a>, and <a class="el" href="kinetics_8h-source.shtml#l00141">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div><p>
<a class="anchor" name="31291823d487a4a47f24aae5870505ef"></a><!-- doxytag: member="OpenBabel::OBTorsionData::_type" ref="31291823d487a4a47f24aae5870505ef" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#31291823d487a4a47f24aae5870505ef">_type</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
attribute type -- declared for each subclass 
<p>

<p>Referenced by <a class="el" href="rotamer_8cpp-source.shtml#l00114">OBRotamerList::Clone()</a>, and <a class="el" href="kinetics_8h-source.shtml#l00141">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div><p>
<a class="anchor" name="239606b62a534e4df7626ea0cfdfb856"></a><!-- doxytag: member="OpenBabel::OBTorsionData::_source" ref="239606b62a534e4df7626ea0cfdfb856" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a> <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#239606b62a534e4df7626ea0cfdfb856">_source</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
source of data for accounting 
<p>

<p>Referenced by <a class="el" href="generic_8cpp-source.shtml#l01338">OBChiralData::operator=()</a>, <a class="el" href="generic_8cpp-source.shtml#l01177">OBTorsionData::operator=()</a>, <a class="el" href="generic_8cpp-source.shtml#l00918">OBAngleData::operator=()</a>, <a class="el" href="generic_8cpp-source.shtml#l00669">OBConformerData::operator=()</a>, and <a class="el" href="generic_8cpp-source.shtml#l00645">OBSymmetryData::operator=()</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="generic_8h-source.shtml">generic.h</a><li><a class="el" href="generic_8cpp.shtml">generic.cpp</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:39 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
