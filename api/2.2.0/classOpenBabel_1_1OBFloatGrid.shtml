<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBFloatGrid Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a>
  </div>
</div>
<div class="contents">
<h1>OBFloatGrid Class Reference</h1><!-- doxytag: class="OpenBabel::OBFloatGrid" --><!-- doxytag: inherits="OpenBabel::OBGrid" -->Handle double precision floating point 3D grids (e.g., charge density around an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>).  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="grid_8h-source.shtml">openbabel/grid.h</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for OBFloatGrid:</div>
<div class="dynsection">
<p><center><img src="classOpenBabel_1_1OBFloatGrid__inherit__graph.png" border="0" usemap="#OBFloatGrid__inherit__map" alt="Inheritance graph"></center>
<map name="OBFloatGrid__inherit__map">
<area shape="rect" href="classOpenBabel_1_1OBGrid.shtml" title="A base grid class." alt="" coords="21,80,88,107"><area shape="rect" href="classOpenBabel_1_1OBBase.shtml" title="Base Class." alt="" coords="19,6,91,32"></map>
<center><font size="2">[<a href="graph_legend.shtml">legend</a>]</font></center></div>

<p>
<a href="classOpenBabel_1_1OBFloatGrid-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#7ddbf2110b572079e0dee5def5b97cf9">OBFloatGrid</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#d84f091329edc731ab0fb4c53640923b">~OBFloatGrid</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#80c4eee6725703a22dcce7990eb37552">Init</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;box, double spacing, double pad=0.0)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#8121470b4aa37e344630ffb3c8104cc0">GetMin</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#b3d065904c33ecf6eaae0199fe6d0592">GetMin</a> (double *a)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#dfbe5b67160cd2a39b96b48ef6a5ce20">GetMax</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#1aa43bea8911cf7665f6e2fd151b609c">GetMax</a> (double *a)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#12a4638e627471ba4f9d2ec8837dff0d">GetSpacing</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#78f75c8108f8539c255711029b37cedc">GetSpacing</a> (double &amp;s)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#815a893513d9333dffce060b37d413cf">GetScale</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#59381fddeab9394eb1e6f881bc5bcfde">GetHalfSpace</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#2d1899945af07ee0874f426dfa907301">GetXdim</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#f06d1abed456dfc5ae6df717bfdfd119">GetYdim</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#48f46d73fcb9f58a8fe51296a9b223df">GetZdim</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#6e6665768ad3b8fc18276c6517c0b03d">GetDim</a> (int *a)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ccffd942b323dd88aebc6fb6c20e1e18">GetMidpointVector</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#664e46425ebb4de07d1d3d44eced9fd7">GetXAxis</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#f7bce82f6dfeb2b4f04f243e23e74dca">GetYAxis</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#299ca4b8330c823e4c771888b09ac5ea">GetZAxis</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#8e057288f32449cbd79175447a8eec49">SetNumberOfPoints</a> (int nx, int ny, int nz)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#89ab18f2833d6df6028f5570c1c46e22">SetXAxis</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#2f5749ad1c1b06bcb3c938e78c75f8f9">SetYAxis</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#dcbcb0e0537b5fa2c834ffa962f37b2c">SetZAxis</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#0b9fb0de3277dd55625e632bc4f0ab5b">SetLimits</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;origin, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;x, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;y, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;z)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#009627e179cde33c9c0150d6a06214fd">SetLimits</a> (const double origin[3], const double x[3], const double y[3], const double z[3])</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; double &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#6501513ff0a2a1cf7960b172d5022926">GetDataVector</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#958a1ed547047fb833c200c96686d4a7">SetVals</a> (const std::vector&lt; double &gt; &amp;vals)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#5eb7667a7f7ac9876e632c35231fc44a">GetVals</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#c52efdf630f7f15198bf57bff1520113">GetValue</a> (int i, int j, int k)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#70b7ebc269d7a65e00d8eae51a5f01f4">SetVals</a> (double *ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#8e87e5ca8491e61def25764da4fdb46d">SetValue</a> (int i, int j, int k, double val)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#2a6903cb1be80ac1055925f1074b75a7">Center</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#0c91177f625939fc2607de9003b1c728">Inject</a> (double x, double y, double z)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#b3b10d37b8b9c5e049a43b7f481c3062">IndexToCoords</a> (int idx, double &amp;x, double &amp;y, double &amp;z)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#b508ca499d4968d05e172c2682a0138c">CoordsToIndex</a> (int *, double *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#36e846af36e72a94ea8f316667b8a2e4">CoordsToIndex</a> (double x, double y, double z)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#7cc972540451ceedb7215b3bc291c9d7">Interpolate</a> (double, double, double)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#3b04b4e2c0917adc5863f867b6b8c6b4">InterpolateDerivatives</a> (double, double, double, double *derivatives)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#c64ef48829b8b0825d823194065a813e">Init</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;box)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#1f6551dd07c7ac678e87490d5670aa7a">GetXmin</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#e8fcb907c909f575ef72e132e7b18ef8">GetYmin</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#5de60e41b3a8ae923af4acf34a5dd8b3">GetZmin</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a3e98e4e3d520f6c796c89976cb48677">GetXmax</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#df7089774e10eac6341d3662ece9b7ea">GetYmax</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#e1dab64d37bb4f2fee3dd9dbbb2dd3fd">GetZmax</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#2a499643ad2be70afaa1607b4affb310">PointIsInBox</a> (double x, double y, double z)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#d557d62926d0bc4cea092baba4466906">PointIsInBox</a> (double *c)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#4f56880aa1ad845fbc6c0c7a4ce45d3b">PointIsInBox</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> v)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#d12fd937da5f4b0c4562888252fe214b">Clear</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#c124224e62a72e842a6b61b1e5e3190d">DoTransformations</a> (const std::map&lt; std::string, std::string &gt; *)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">T *&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#305f9b75226a0e4d51c769e3a7dd6f13">CastAndClear</a> (bool clear=true)</td></tr>

<tr><td colspan="2"><div class="groupHeader">Generic data handling methods (via OBGenericData)</div></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#86dd58fc1da5652d70e823fa77cc1637">HasData</a> (const std::string &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#01b429ffcaf47cf265acd439ed2faca0">HasData</a> (const char *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#6cb103f12f49d86132ece200000da830">HasData</a> (const unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#797e5b4d20b6233062d2fdba78a08e06">DeleteData</a> (unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#b586df65e3f115b69510820b34098ce9">DeleteData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#af61a3ecb8f2926aaf117299388d43c2">DeleteData</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a068a2a7b64d2ee73aedb8c6e3cf0c4c">DeleteData</a> (const std::string &amp;s)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#db6b0ec89bfea783825b3b466e4dbc00">SetData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6f692332837387535e337413d0100de">CloneData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#584f49e458c30b6d45a11eeebd8518f9">DataSize</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ee672d91b694547fb072fdaa8e03cfe9">GetData</a> (const unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#22f0eade8b5924eec28ad50f0ce2031f">GetData</a> (const std::string &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#483b277678a8ca48998742c80985fd0b">GetData</a> (const char *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#90a551ff0a0ed3fa58745dff0ecacdaa">GetData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a959146c3f7b458009dc04f61b5a2e7f">GetData</a> (<a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a> source)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#fb56decc1b824c9fad980fc22e1d778c">GetAllData</a> (const unsigned int type)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#d5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#15b47c65393d46fde62d1f0a19bcf9fa">BeginData</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#d5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#117c836710dd3aaa8748509262a5c280">EndData</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; double &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#7d7a76b9f2cf24040d65d2387f01ebd1">_values</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#87d1e1b6b09eecaec2670dd0f8caa6a1">_ival</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#63f7b06cde4a057a2c76f8af0ff28e91">_midz</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#e65bd2fad82143233d356b5767f7a37f">_midx</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#e2de17d8c54e293efbddc7b1eefa0c05">_midy</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#7c3c42170d23cae468eb5885aa913ca2">_ydim</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#aec2f9d77f4de3a82e0149113b6416a2">_xdim</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a4d2282bc8cc51ffa66eb6c17aae17ee">_zdim</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#382cc46cd19ec2a1e726d9c8191cedea">_spacing</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#86660f38a65032dffc210cb116735e95">_inv_spa</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#314a0d1d51e74f040278d0de06f075b5">_halfSpace</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#774e5b3910ccdafb41ac680e319085d1">_xAxis</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#526e1a071db304e1970afc1bdf1769f0">_yAxis</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#0d3a8c489526216952d17734085e7287">_zAxis</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#7b91634c838cfa025070df146452d4d9">_xmin</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a3a779f1daff2a7dbe79fa4e0b9def75">_xmax</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#775215217e5f88eabb13d886d3f28e6a">_ymin</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#89dce702ed281c7c1ca2e88f6a3a00b0">_ymax</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#d2367ec6a3d166e433fec916c5826aa1">_zmin</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#be522732504118f0d41304e111c94e38">_zmax</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#f7811cf8aadbf3b3477c560b0ef2f797">_vdata</a></td></tr>

<tr><td colspan="2"><br><h2>Friends</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::ostream &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#0d83407c5f3e5136e849127939db3a70">operator&lt;&lt;</a> (std::ostream &amp;, const <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a> &amp;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">std::istream &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#d47b6c9bc3a81f0b8ae7047ee8132488">operator&gt;&gt;</a> (std::istream &amp;, <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a> &amp;)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Handle double precision floating point 3D grids (e.g., charge density around an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>). 
<p>
Supports input/output and base functionality for simple 3D discrete grids of some function -- typically around a molecule. Typically you will want to use <a class="el" href="classOpenBabel_1_1OBGridData.shtml" title="Store values for numeric grids such as orbitals or electrostatic potential.">OBGridData</a> which uses <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml" title="Handle double precision floating point 3D grids (e.g., charge density around an OBMol)...">OBFloatGrid</a> to store its data. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBGridData.shtml" title="Store values for numeric grids such as orbitals or electrostatic potential.">OBGridData</a> </dd></dl>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="7ddbf2110b572079e0dee5def5b97cf9"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::OBFloatGrid" ref="7ddbf2110b572079e0dee5def5b97cf9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d84f091329edc731ab0fb4c53640923b"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::~OBFloatGrid" ref="d84f091329edc731ab0fb4c53640923b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="80c4eee6725703a22dcce7990eb37552"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::Init" ref="80c4eee6725703a22dcce7990eb37552" args="(OBMol &amp;box, double spacing, double pad=0.0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Init           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>spacing</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>pad</em> = <code>0.0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initialize the grid using this molecule as a box (plus a padding) with the supplied spacing between points. 
<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l04073">OBForceField::GetGrid()</a>.</p>

</div>
</div><p>
<a class="anchor" name="8121470b4aa37e344630ffb3c8104cc0"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetMin" ref="8121470b4aa37e344630ffb3c8104cc0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetMin           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the minimum point in the grid. </dd></dl>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l04073">OBForceField::GetGrid()</a>.</p>

</div>
</div><p>
<a class="anchor" name="b3d065904c33ecf6eaae0199fe6d0592"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetMin" ref="b3d065904c33ecf6eaae0199fe6d0592" args="(double *a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetMin           </td>
          <td>(</td>
          <td class="paramtype">double *&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the minimum point in the grid. <dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000028">Deprecated:</a></b></dt><dd>Will be removed. Use </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#8121470b4aa37e344630ffb3c8104cc0">GetMin()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="dfbe5b67160cd2a39b96b48ef6a5ce20"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetMax" ref="dfbe5b67160cd2a39b96b48ef6a5ce20" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetMax           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the minimum point in the grid. </dd></dl>

</div>
</div><p>
<a class="anchor" name="1aa43bea8911cf7665f6e2fd151b609c"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetMax" ref="1aa43bea8911cf7665f6e2fd151b609c" args="(double *a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetMax           </td>
          <td>(</td>
          <td class="paramtype">double *&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the maximum point in the grid. <dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000029">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#dfbe5b67160cd2a39b96b48ef6a5ce20">GetMax()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="12a4638e627471ba4f9d2ec8837dff0d"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetSpacing" ref="12a4638e627471ba4f9d2ec8837dff0d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetSpacing           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>The grid spacing. </dd></dl>

</div>
</div><p>
<a class="anchor" name="78f75c8108f8539c255711029b37cedc"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetSpacing" ref="78f75c8108f8539c255711029b37cedc" args="(double &amp;s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetSpacing           </td>
          <td>(</td>
          <td class="paramtype">double &amp;&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the grid spacing. <dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000030">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#12a4638e627471ba4f9d2ec8837dff0d">GetSpacing()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="815a893513d9333dffce060b37d413cf"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetScale" ref="815a893513d9333dffce060b37d413cf" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetScale           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Inverse of the grid spacing. </dd></dl>

</div>
</div><p>
<a class="anchor" name="59381fddeab9394eb1e6f881bc5bcfde"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetHalfSpace" ref="59381fddeab9394eb1e6f881bc5bcfde" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetHalfSpace           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Half of the spacing between grid points. </dd></dl>

</div>
</div><p>
<a class="anchor" name="2d1899945af07ee0874f426dfa907301"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetXdim" ref="2d1899945af07ee0874f426dfa907301" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetXdim           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Size of the grid in the x dimension. </dd></dl>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l04073">OBForceField::GetGrid()</a>.</p>

</div>
</div><p>
<a class="anchor" name="f06d1abed456dfc5ae6df717bfdfd119"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetYdim" ref="f06d1abed456dfc5ae6df717bfdfd119" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetYdim           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Size of the grid in the y dimension. </dd></dl>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l04073">OBForceField::GetGrid()</a>.</p>

</div>
</div><p>
<a class="anchor" name="48f46d73fcb9f58a8fe51296a9b223df"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetZdim" ref="48f46d73fcb9f58a8fe51296a9b223df" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetZdim           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Size of the grid in the z dimension. </dd></dl>

<p>Referenced by <a class="el" href="forcefield_8cpp-source.shtml#l04073">OBForceField::GetGrid()</a>.</p>

</div>
</div><p>
<a class="anchor" name="6e6665768ad3b8fc18276c6517c0b03d"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetDim" ref="6e6665768ad3b8fc18276c6517c0b03d" args="(int *a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetDim           </td>
          <td>(</td>
          <td class="paramtype">int *&nbsp;</td>
          <td class="paramname"> <em>a</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the x, y and z dimensions (must pass an double[3] at least). <dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000031">Deprecated:</a></b></dt><dd>May be removed in future. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#2d1899945af07ee0874f426dfa907301">GetXdim()</a> <p>
<a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#f06d1abed456dfc5ae6df717bfdfd119">GetYdim()</a> <p>
<a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#48f46d73fcb9f58a8fe51296a9b223df">GetZdim()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="ccffd942b323dd88aebc6fb6c20e1e18"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetMidpointVector" ref="ccffd942b323dd88aebc6fb6c20e1e18" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetMidpointVector           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Position of the center of the grid. </dd></dl>

</div>
</div><p>
<a class="anchor" name="664e46425ebb4de07d1d3d44eced9fd7"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetXAxis" ref="664e46425ebb4de07d1d3d44eced9fd7" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetXAxis           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>X axis direction. </dd></dl>

</div>
</div><p>
<a class="anchor" name="f7bce82f6dfeb2b4f04f243e23e74dca"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetYAxis" ref="f7bce82f6dfeb2b4f04f243e23e74dca" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetYAxis           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Y axis direction. </dd></dl>

</div>
</div><p>
<a class="anchor" name="299ca4b8330c823e4c771888b09ac5ea"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetZAxis" ref="299ca4b8330c823e4c771888b09ac5ea" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetZAxis           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Z axis direction. </dd></dl>

</div>
</div><p>
<a class="anchor" name="8e057288f32449cbd79175447a8eec49"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::SetNumberOfPoints" ref="8e057288f32449cbd79175447a8eec49" args="(int nx, int ny, int nz)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNumberOfPoints           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>ny</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets the number of points in the x, y and z directions. 
<p>

</div>
</div><p>
<a class="anchor" name="89ab18f2833d6df6028f5570c1c46e22"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::SetXAxis" ref="89ab18f2833d6df6028f5570c1c46e22" args="(vector3)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetXAxis           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the direction of the x axis. 
<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>.</p>

</div>
</div><p>
<a class="anchor" name="2f5749ad1c1b06bcb3c938e78c75f8f9"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::SetYAxis" ref="2f5749ad1c1b06bcb3c938e78c75f8f9" args="(vector3)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetYAxis           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the direction of the y axis. 
<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>.</p>

</div>
</div><p>
<a class="anchor" name="dcbcb0e0537b5fa2c834ffa962f37b2c"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::SetZAxis" ref="dcbcb0e0537b5fa2c834ffa962f37b2c" args="(vector3)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetZAxis           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the direction of the z axis. 
<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>.</p>

</div>
</div><p>
<a class="anchor" name="0b9fb0de3277dd55625e632bc4f0ab5b"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::SetLimits" ref="0b9fb0de3277dd55625e632bc4f0ab5b" args="(const vector3 &amp;origin, const vector3 &amp;x, const vector3 &amp;y, const vector3 &amp;z)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetLimits           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>origin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>z</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the limits (i.e., the origin point and the axes) NOTE: You must set the number of points first, with SetNumberOfPoints so the grid spacing can be calculated 
<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00089">OBFloatGrid::SetLimits()</a>.</p>

</div>
</div><p>
<a class="anchor" name="009627e179cde33c9c0150d6a06214fd"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::SetLimits" ref="009627e179cde33c9c0150d6a06214fd" args="(const double origin[3], const double x[3], const double y[3], const double z[3])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetLimits           </td>
          <td>(</td>
          <td class="paramtype">const double&nbsp;</td>
          <td class="paramname"> <em>origin</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&nbsp;</td>
          <td class="paramname"> <em>x</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&nbsp;</td>
          <td class="paramname"> <em>y</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&nbsp;</td>
          <td class="paramname"> <em>z</em>[3]</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000032">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#0b9fb0de3277dd55625e632bc4f0ab5b">SetLimits(const vector3&amp; origin, const vector3&amp; x, const vector3&amp; y, const vector3&amp; z)</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="6501513ff0a2a1cf7960b172d5022926"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetDataVector" ref="6501513ff0a2a1cf7960b172d5022926" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; double &gt; GetDataVector           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get a copy of the vector that stores the points in the grid. 
<p>

</div>
</div><p>
<a class="anchor" name="958a1ed547047fb833c200c96686d4a7"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::SetVals" ref="958a1ed547047fb833c200c96686d4a7" args="(const std::vector&lt; double &gt; &amp;vals)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVals           </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; double &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>vals</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the values in the grid to those in the vector passed. Note that the vector must be of the same dimensions as the grid based on the values given in <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#8e057288f32449cbd79175447a8eec49" title="Sets the number of points in the x, y and z directions.">SetNumberOfPoints(int nx, int ny, int nz)</a>. 
</div>
</div><p>
<a class="anchor" name="5eb7667a7f7ac9876e632c35231fc44a"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetVals" ref="5eb7667a7f7ac9876e632c35231fc44a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double* GetVals           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Pointer to the first element of the grid point data stored as a one dimensional array. </dd></dl>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000033">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#6501513ff0a2a1cf7960b172d5022926" title="Get a copy of the vector that stores the points in the grid.">GetDataVector()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="c52efdf630f7f15198bf57bff1520113"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetValue" ref="c52efdf630f7f15198bf57bff1520113" args="(int i, int j, int k)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetValue           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>k</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Value at the point in the grid specified by i, j and k. </dd></dl>

</div>
</div><p>
<a class="anchor" name="70b7ebc269d7a65e00d8eae51a5f01f4"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::SetVals" ref="70b7ebc269d7a65e00d8eae51a5f01f4" args="(double *ptr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVals           </td>
          <td>(</td>
          <td class="paramtype">double *&nbsp;</td>
          <td class="paramname"> <em>ptr</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b><a class="el" href="deprecated.shtml#_deprecated000034">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#958a1ed547047fb833c200c96686d4a7">SetVals(const std::vector&lt;double&gt; &amp; vals)</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="8e87e5ca8491e61def25764da4fdb46d"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::SetValue" ref="8e87e5ca8491e61def25764da4fdb46d" args="(int i, int j, int k, double val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SetValue           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>k</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>val</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the value at the grid point specified by i, j and k to val. 
<p>

</div>
</div><p>
<a class="anchor" name="2a6903cb1be80ac1055925f1074b75a7"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::Center" ref="2a6903cb1be80ac1055925f1074b75a7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> Center           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Position of the center of the grid. </dd></dl>

</div>
</div><p>
<a class="anchor" name="0c91177f625939fc2607de9003b1c728"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::Inject" ref="0c91177f625939fc2607de9003b1c728" args="(double x, double y, double z)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Inject           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>z</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the value at the given point (rounding as needed) </dd></dl>

</div>
</div><p>
<a class="anchor" name="b3b10d37b8b9c5e049a43b7f481c3062"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::IndexToCoords" ref="b3b10d37b8b9c5e049a43b7f481c3062" args="(int idx, double &amp;x, double &amp;y, double &amp;z)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IndexToCoords           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double &amp;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double &amp;&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double &amp;&nbsp;</td>
          <td class="paramname"> <em>z</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b508ca499d4968d05e172c2682a0138c"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::CoordsToIndex" ref="b508ca499d4968d05e172c2682a0138c" args="(int *, double *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CoordsToIndex           </td>
          <td>(</td>
          <td class="paramtype">int *&nbsp;</td>
          <td class="paramname"> <em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&nbsp;</td>
          <td class="paramname"> <em>c</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00147">OBFloatGrid::Inject()</a>.</p>

</div>
</div><p>
<a class="anchor" name="36e846af36e72a94ea8f316667b8a2e4"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::CoordsToIndex" ref="36e846af36e72a94ea8f316667b8a2e4" args="(double x, double y, double z)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int CoordsToIndex           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>z</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="7cc972540451ceedb7215b3bc291c9d7"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::Interpolate" ref="7cc972540451ceedb7215b3bc291c9d7" args="(double, double, double)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Interpolate           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>z</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the interpolated value for the given point </dd></dl>

</div>
</div><p>
<a class="anchor" name="3b04b4e2c0917adc5863f867b6b8c6b4"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::InterpolateDerivatives" ref="3b04b4e2c0917adc5863f867b6b8c6b4" args="(double, double, double, double *derivatives)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double InterpolateDerivatives           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&nbsp;</td>
          <td class="paramname"> <em>derivatives</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the interpolated value for the given point and set the dx, dy, dz derivatives </dd></dl>

</div>
</div><p>
<a class="anchor" name="c64ef48829b8b0825d823194065a813e"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::Init" ref="c64ef48829b8b0825d823194065a813e" args="(OBMol &amp;box)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Init           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>box</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initialize the grid based on a box around the molecule <code>box</code> Subclasses should overload this method -- this only tracks the dimension of the box itself. 
<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00404">OBProxGrid::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="1f6551dd07c7ac678e87490d5670aa7a"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetXmin" ref="1f6551dd07c7ac678e87490d5670aa7a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetXmin           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the minimum x point of the grid </dd></dl>

</div>
</div><p>
<a class="anchor" name="e8fcb907c909f575ef72e132e7b18ef8"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetYmin" ref="e8fcb907c909f575ef72e132e7b18ef8" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetYmin           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the minimum y point of the grid </dd></dl>

</div>
</div><p>
<a class="anchor" name="5de60e41b3a8ae923af4acf34a5dd8b3"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetZmin" ref="5de60e41b3a8ae923af4acf34a5dd8b3" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetZmin           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the minimum z point of the grid </dd></dl>

</div>
</div><p>
<a class="anchor" name="a3e98e4e3d520f6c796c89976cb48677"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetXmax" ref="a3e98e4e3d520f6c796c89976cb48677" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetXmax           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the maximum x point of the grid </dd></dl>

</div>
</div><p>
<a class="anchor" name="df7089774e10eac6341d3662ece9b7ea"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetYmax" ref="df7089774e10eac6341d3662ece9b7ea" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetYmax           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the maximum y point of the grid </dd></dl>

</div>
</div><p>
<a class="anchor" name="e1dab64d37bb4f2fee3dd9dbbb2dd3fd"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetZmax" ref="e1dab64d37bb4f2fee3dd9dbbb2dd3fd" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetZmax           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the maximum z point of the grid </dd></dl>

</div>
</div><p>
<a class="anchor" name="2a499643ad2be70afaa1607b4affb310"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::PointIsInBox" ref="2a499643ad2be70afaa1607b4affb310" args="(double x, double y, double z)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool PointIsInBox           </td>
          <td>(</td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>z</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether the supplied XYZ coordinates fall within the box </dd></dl>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00404">OBProxGrid::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="d557d62926d0bc4cea092baba4466906"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::PointIsInBox" ref="d557d62926d0bc4cea092baba4466906" args="(double *c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool PointIsInBox           </td>
          <td>(</td>
          <td class="paramtype">double *&nbsp;</td>
          <td class="paramname"> <em>c</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>true if the point falls within the box </dd></dl>

</div>
</div><p>
<a class="anchor" name="4f56880aa1ad845fbc6c0c7a4ce45d3b"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::PointIsInBox" ref="4f56880aa1ad845fbc6c0c7a4ce45d3b" args="(vector3 v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool PointIsInBox           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>true if the point falls within the box </dd></dl>

</div>
</div><p>
<a class="anchor" name="d12fd937da5f4b0c4562888252fe214b"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::Clear" ref="d12fd937da5f4b0c4562888252fe214b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Clear           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear any and all data associated with this object. 
<p>
This method can be called by <a class="el" href="classOpenBabel_1_1OBConversion.shtml#1204f9b613067a04ebfe881a58775918" title="Reads an object of a class derived from OBBase into pOb.">OBConversion::Read()</a> before reading data. Derived classes should be sure to call <a class="el" href="classOpenBabel_1_1OBBase.shtml#d12fd937da5f4b0c4562888252fe214b" title="Clear any and all data associated with this object.">OBBase::Clear()</a> to remove inherited generic data.<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether the call was successful. </dd></dl>
<dl class="since" compact><dt><b>Since:</b></dt><dd>version 2.1. </dd></dl>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBAtom.shtml#d12fd937da5f4b0c4562888252fe214b">OBAtom</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#d12fd937da5f4b0c4562888252fe214b">OBMol</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#d12fd937da5f4b0c4562888252fe214b">OBResidue</a>.</p>

<p>Referenced by <a class="el" href="residue_8cpp-source.shtml#l00945">OBResidue::Clear()</a>, <a class="el" href="mol_8cpp-source.shtml#l01303">OBMol::Clear()</a>, and <a class="el" href="atom_8cpp-source.shtml#l00127">OBAtom::Clear()</a>.</p>

</div>
</div><p>
<a class="anchor" name="c124224e62a72e842a6b61b1e5e3190d"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::DoTransformations" ref="c124224e62a72e842a6b61b1e5e3190d" args="(const std::map&lt; std::string, std::string &gt; *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* DoTransformations           </td>
          <td>(</td>
          <td class="paramtype">const std::map&lt; std::string, std::string &gt; *&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Perform a set of transformations specified by the user<p>
Typically these are program options to filter or modify an object For example, see <a class="el" href="classOpenBabel_1_1OBMol.shtml#035de6b4d4b6834f08d08940911f645d">OBMol::DoTransformations()</a> and <a class="el" href="classOpenBabel_1_1OBMol.shtml#b72bba66cc9e40fb3b657a30d87bbe6d">OBMol::ClassDescription()</a> 
<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#035de6b4d4b6834f08d08940911f645d">OBMol</a>.</p>

</div>
</div><p>
<a class="anchor" name="6bb6ed5c064e3957d8dd03aba51e61f7"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::ClassDescription" ref="6bb6ed5c064e3957d8dd03aba51e61f7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static const char* ClassDescription           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, static, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>A list of descriptions of command-line options for <a class="el" href="classOpenBabel_1_1OBBase.shtml#c124224e62a72e842a6b61b1e5e3190d">DoTransformations()</a> </dd></dl>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#b72bba66cc9e40fb3b657a30d87bbe6d">OBMol</a>, and <a class="el" href="classOpenBabel_1_1OBReaction.shtml#6bb6ed5c064e3957d8dd03aba51e61f7">OBReaction</a>.</p>

</div>
</div><p>
<a class="anchor" name="305f9b75226a0e4d51c769e3a7dd6f13"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::CastAndClear" ref="305f9b75226a0e4d51c769e3a7dd6f13" args="(bool clear=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">T* CastAndClear           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>clear</em> = <code>true</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
By default clears the object. Called from ReadMolecule of most format classes. 
<p>

</div>
</div><p>
<a class="anchor" name="86dd58fc1da5652d70e823fa77cc1637"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::HasData" ref="86dd58fc1da5652d70e823fa77cc1637" args="(const std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists </dd></dl>

<p>Referenced by <a class="el" href="mol_8cpp-source.shtml#l01562">OBMol::AddAtom()</a>, <a class="el" href="mol_8cpp-source.shtml#l00389">OBMol::FindAngles()</a>, <a class="el" href="ring_8cpp-source.shtml#l00082">OBMol::FindSSSR()</a>, <a class="el" href="mol_8cpp-source.shtml#l00432">OBMol::FindTorsions()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01064">OBForceField::GetConformers()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01033">OBForceField::GetCoordinates()</a>, <a class="el" href="mol_8cpp-source.shtml#l03693">OBMol::GetEnergies()</a>, <a class="el" href="mol_8cpp-source.shtml#l03703">OBMol::GetEnergy()</a>, <a class="el" href="mol_8cpp-source.shtml#l00898">OBMol::GetSSSR()</a>, <a class="el" href="base_8cpp-source.shtml#l00099">OBBase::HasData()</a>, <a class="el" href="descriptor_8cpp-source.shtml#l00455">OBDescriptor::MatchPairData()</a>, <a class="el" href="mol_8cpp-source.shtml#l01474">OBMol::NewAtom()</a>, <a class="el" href="mol_8cpp-source.shtml#l01156">OBMol::operator=()</a>, and <a class="el" href="mol_8cpp-source.shtml#l03685">OBMol::SetEnergies()</a>.</p>

</div>
</div><p>
<a class="anchor" name="01b429ffcaf47cf265acd439ed2faca0"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::HasData" ref="01b429ffcaf47cf265acd439ed2faca0" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists </dd></dl>

</div>
</div><p>
<a class="anchor" name="6cb103f12f49d86132ece200000da830"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::HasData" ref="6cb103f12f49d86132ece200000da830" args="(const unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData           </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists, for a given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="797e5b4d20b6233062d2fdba78a08e06"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::DeleteData" ref="797e5b4d20b6233062d2fdba78a08e06" args="(unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Delete any data matching the given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a>. 
<p>

<p>Referenced by <a class="el" href="mol_8cpp-source.shtml#l01562">OBMol::AddAtom()</a>, <a class="el" href="mol_8cpp-source.shtml#l01345">OBMol::BeginModify()</a>, <a class="el" href="builder_8cpp-source.shtml#l00617">OBBuilder::CorrectStereoBonds()</a>, <a class="el" href="descriptor_8cpp-source.shtml#l00407">OBDescriptor::DeleteProperties()</a>, <a class="el" href="ring_8cpp-source.shtml#l00082">OBMol::FindSSSR()</a>, <a class="el" href="mol_8cpp-source.shtml#l01474">OBMol::NewAtom()</a>, and <a class="el" href="forcefield_8cpp-source.shtml#l00843">OBForceField::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="b586df65e3f115b69510820b34098ce9"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::DeleteData" ref="b586df65e3f115b69510820b34098ce9" args="(OBGenericData *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td>
          <td class="paramname"> <em>gd</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Delete the given generic data from this object. 
<p>

</div>
</div><p>
<a class="anchor" name="af61a3ecb8f2926aaf117299388d43c2"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::DeleteData" ref="af61a3ecb8f2926aaf117299388d43c2" args="(std::vector&lt; OBGenericData * &gt; &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData           </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>vg</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Delete all of the given generic data from this object. 
<p>

</div>
</div><p>
<a class="anchor" name="a068a2a7b64d2ee73aedb8c6e3cf0c4c"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::DeleteData" ref="a068a2a7b64d2ee73aedb8c6e3cf0c4c" args="(const std::string &amp;s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool DeleteData           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Deletes the generic data with the specified attribute, returning false if not found. 
<p>

</div>
</div><p>
<a class="anchor" name="db6b0ec89bfea783825b3b466e4dbc00"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::SetData" ref="db6b0ec89bfea783825b3b466e4dbc00" args="(OBGenericData *d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Adds a data object; does nothing if d==NULL. 
<p>

<p>Referenced by <a class="el" href="mol_8cpp-source.shtml#l02671">OBMol::AddBond()</a>, <a class="el" href="molchrg_8cpp-source.shtml#l00058">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="chiral_8cpp-source.shtml#l00206">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="transform_8cpp-source.shtml#l00028">OBMol::DoTransformations()</a>, <a class="el" href="atom_8cpp-source.shtml#l00157">OBAtom::Duplicate()</a>, <a class="el" href="mol_8cpp-source.shtml#l00389">OBMol::FindAngles()</a>, <a class="el" href="ring_8cpp-source.shtml#l00082">OBMol::FindSSSR()</a>, <a class="el" href="mol_8cpp-source.shtml#l00432">OBMol::FindTorsions()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01064">OBForceField::GetConformers()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01033">OBForceField::GetCoordinates()</a>, <a class="el" href="mol_8cpp-source.shtml#l03693">OBMol::GetEnergies()</a>, <a class="el" href="mol_8cpp-source.shtml#l03703">OBMol::GetEnergy()</a>, <a class="el" href="mol_8cpp-source.shtml#l01052">OBMol::GetFormula()</a>, <a class="el" href="mol_8cpp-source.shtml#l03839">OBMol::GetNextFragment()</a>, <a class="el" href="mol_8cpp-source.shtml#l00898">OBMol::GetSSSR()</a>, <a class="el" href="obmolecformat_8cpp-source.shtml#l00273">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="mol_8cpp-source.shtml#l01156">OBMol::operator=()</a>, <a class="el" href="descriptor_8cpp-source.shtml#l00308">OBDescriptor::PredictAndSave()</a>, <a class="el" href="mol_8cpp-source.shtml#l03685">OBMol::SetEnergies()</a>, and <a class="el" href="mol_8cpp-source.shtml#l01075">OBMol::SetFormula()</a>.</p>

</div>
</div><p>
<a class="anchor" name="a6f692332837387535e337413d0100de"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::CloneData" ref="a6f692332837387535e337413d0100de" args="(OBGenericData *d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CloneData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&nbsp;</td>
          <td class="paramname"> <em>d</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Adds a copy of a data object; does nothing if d == NULL <dl class="since" compact><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>

</div>
</div><p>
<a class="anchor" name="584f49e458c30b6d45a11eeebd8518f9"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::DataSize" ref="584f49e458c30b6d45a11eeebd8518f9" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int DataSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a> items attached to this molecule. </dd></dl>

</div>
</div><p>
<a class="anchor" name="ee672d91b694547fb072fdaa8e03cfe9"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetData" ref="ee672d91b694547fb072fdaa8e03cfe9" args="(const unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the first matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> or NULL if nothing matches </dd></dl>

<p>Referenced by <a class="el" href="chiral_8cpp-source.shtml#l00206">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="chiral_8cpp-source.shtml#l00146">OpenBabel::CorrectChirality()</a>, <a class="el" href="descriptor_8cpp-source.shtml#l00085">OBDescriptor::FilterCompare()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01064">OBForceField::GetConformers()</a>, <a class="el" href="forcefield_8cpp-source.shtml#l01033">OBForceField::GetCoordinates()</a>, <a class="el" href="mol_8cpp-source.shtml#l03839">OBMol::GetNextFragment()</a>, <a class="el" href="descriptor_8cpp-source.shtml#l00423">OBDescriptor::GetValues()</a>, <a class="el" href="obmolecformat_8cpp-source.shtml#l00273">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="obiter_8cpp-source.shtml#l00901">OBMolAngleIter::OBMolAngleIter()</a>, <a class="el" href="obiter_8cpp-source.shtml#l00809">OBMolRingIter::OBMolRingIter()</a>, <a class="el" href="obiter_8cpp-source.shtml#l01000">OBMolTorsionIter::OBMolTorsionIter()</a>, <a class="el" href="mol_8cpp-source.shtml#l01156">OBMol::operator=()</a>, and <a class="el" href="descriptor_8cpp-source.shtml#l00308">OBDescriptor::PredictAndSave()</a>.</p>

</div>
</div><p>
<a class="anchor" name="22f0eade8b5924eec28ad50f0ce2031f"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetData" ref="22f0eade8b5924eec28ad50f0ce2031f" args="(const std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>any data matching the given attribute name or NULL if nothing matches<p>
the value given an attribute name </dd></dl>

</div>
</div><p>
<a class="anchor" name="483b277678a8ca48998742c80985fd0b"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetData" ref="483b277678a8ca48998742c80985fd0b" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>s</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>any data matching the given attribute name or NULL if nothing matches<p>
the value given an attribute name </dd></dl>

</div>
</div><p>
<a class="anchor" name="90a551ff0a0ed3fa58745dff0ecacdaa"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetData" ref="90a551ff0a0ed3fa58745dff0ecacdaa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;&amp; GetData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>all data, suitable for iterating </dd></dl>

<p>Referenced by <a class="el" href="mol_8cpp-source.shtml#l01345">OBMol::BeginModify()</a>, <a class="el" href="transform_8cpp-source.shtml#l00028">OBMol::DoTransformations()</a>, <a class="el" href="ring_8cpp-source.shtml#l00082">OBMol::FindSSSR()</a>, <a class="el" href="base_8cpp-source.shtml#l00134">OBBase::GetData()</a>, <a class="el" href="mol_8cpp-source.shtml#l03693">OBMol::GetEnergies()</a>, <a class="el" href="mol_8cpp-source.shtml#l03703">OBMol::GetEnergy()</a>, <a class="el" href="mol_8cpp-source.shtml#l01052">OBMol::GetFormula()</a>, <a class="el" href="mol_8cpp-source.shtml#l00898">OBMol::GetSSSR()</a>, <a class="el" href="mol_8cpp-source.shtml#l03685">OBMol::SetEnergies()</a>, and <a class="el" href="mol_8cpp-source.shtml#l01075">OBMol::SetFormula()</a>.</p>

</div>
</div><p>
<a class="anchor" name="a959146c3f7b458009dc04f61b5a2e7f"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetData" ref="a959146c3f7b458009dc04f61b5a2e7f" args="(DataOrigin source)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetData           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&nbsp;</td>
          <td class="paramname"> <em>source</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>all data with a specific origin, suitable for iterating </dd></dl>

</div>
</div><p>
<a class="anchor" name="fb56decc1b824c9fad980fc22e1d778c"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::GetAllData" ref="fb56decc1b824c9fad980fc22e1d778c" args="(const unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetAllData           </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&nbsp;</td>
          <td class="paramname"> <em>type</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the all matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> or an empty vector if nothing matches </dd></dl>
<dl class="since" compact><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>

</div>
</div><p>
<a class="anchor" name="15b47c65393d46fde62d1f0a19bcf9fa"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::BeginData" ref="15b47c65393d46fde62d1f0a19bcf9fa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#d5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> BeginData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>An iterator pointing to the beginning of the data </dd></dl>

<p>Referenced by <a class="el" href="mol_8cpp-source.shtml#l01562">OBMol::AddAtom()</a>, <a class="el" href="atom_8cpp-source.shtml#l00157">OBAtom::Duplicate()</a>, <a class="el" href="obmolecformat_8cpp-source.shtml#l00273">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="mol_8cpp-source.shtml#l01474">OBMol::NewAtom()</a>, and <a class="el" href="mol_8cpp-source.shtml#l01156">OBMol::operator=()</a>.</p>

</div>
</div><p>
<a class="anchor" name="117c836710dd3aaa8748509262a5c280"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::EndData" ref="117c836710dd3aaa8748509262a5c280" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#d5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> EndData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>An iterator pointing to the end of the data </dd></dl>

<p>Referenced by <a class="el" href="mol_8cpp-source.shtml#l01562">OBMol::AddAtom()</a>, <a class="el" href="atom_8cpp-source.shtml#l00157">OBAtom::Duplicate()</a>, <a class="el" href="obmolecformat_8cpp-source.shtml#l00273">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="mol_8cpp-source.shtml#l01474">OBMol::NewAtom()</a>, and <a class="el" href="mol_8cpp-source.shtml#l01156">OBMol::operator=()</a>.</p>

</div>
</div><p>
<hr><h2>Friends And Related Function Documentation</h2>
<a class="anchor" name="0d83407c5f3e5136e849127939db3a70"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::operator&lt;&lt;" ref="0d83407c5f3e5136e849127939db3a70" args="(std::ostream &amp;, const OBFloatGrid &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt;           </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&nbsp;</td>
          <td class="paramname"> <em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>fg</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="d47b6c9bc3a81f0b8ae7047ee8132488"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::operator&gt;&gt;" ref="d47b6c9bc3a81f0b8ae7047ee8132488" args="(std::istream &amp;, OBFloatGrid &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::istream&amp; operator&gt;&gt;           </td>
          <td>(</td>
          <td class="paramtype">std::istream &amp;&nbsp;</td>
          <td class="paramname"> <em>is</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>fg</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="7d7a76b9f2cf24040d65d2387f01ebd1"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_values" ref="7d7a76b9f2cf24040d65d2387f01ebd1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;double&gt; <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#7d7a76b9f2cf24040d65d2387f01ebd1">_values</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
floating point values 
<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00251">OBFloatGrid::GetDataVector()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00147">OBFloatGrid::Inject()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00263">OBFloatGrid::InterpolateDerivatives()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00124">OBFloatGrid::SetNumberOfPoints()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00256">OBFloatGrid::SetVals()</a>.</p>

</div>
</div><p>
<a class="anchor" name="87d1e1b6b09eecaec2670dd0f8caa6a1"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_ival" ref="87d1e1b6b09eecaec2670dd0f8caa6a1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int* <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#87d1e1b6b09eecaec2670dd0f8caa6a1">_ival</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
for integer values (deprecated) 
<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>.</p>

</div>
</div><p>
<a class="anchor" name="63f7b06cde4a057a2c76f8af0ff28e91"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_midz" ref="63f7b06cde4a057a2c76f8af0ff28e91" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#63f7b06cde4a057a2c76f8af0ff28e91">_midz</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div><p>
<a class="anchor" name="e65bd2fad82143233d356b5767f7a37f"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_midx" ref="e65bd2fad82143233d356b5767f7a37f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#e65bd2fad82143233d356b5767f7a37f">_midx</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div><p>
<a class="anchor" name="e2de17d8c54e293efbddc7b1eefa0c05"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_midy" ref="e2de17d8c54e293efbddc7b1eefa0c05" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#e2de17d8c54e293efbddc7b1eefa0c05">_midy</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
center of grid in world coordinates 
<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div><p>
<a class="anchor" name="7c3c42170d23cae468eb5885aa913ca2"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_ydim" ref="7c3c42170d23cae468eb5885aa913ca2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#7c3c42170d23cae468eb5885aa913ca2">_ydim</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00172">OBFloatGrid::CoordsToIndex()</a>, <a class="el" href="grid_8cpp-source.shtml#l00159">OBFloatGrid::IndexToCoords()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00263">OBFloatGrid::InterpolateDerivatives()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>, <a class="el" href="grid_8cpp-source.shtml#l00124">OBFloatGrid::SetNumberOfPoints()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00256">OBFloatGrid::SetVals()</a>.</p>

</div>
</div><p>
<a class="anchor" name="aec2f9d77f4de3a82e0149113b6416a2"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_xdim" ref="aec2f9d77f4de3a82e0149113b6416a2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#aec2f9d77f4de3a82e0149113b6416a2">_xdim</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>, <a class="el" href="grid_8cpp-source.shtml#l00124">OBFloatGrid::SetNumberOfPoints()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00256">OBFloatGrid::SetVals()</a>.</p>

</div>
</div><p>
<a class="anchor" name="a4d2282bc8cc51ffa66eb6c17aae17ee"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_zdim" ref="a4d2282bc8cc51ffa66eb6c17aae17ee" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a4d2282bc8cc51ffa66eb6c17aae17ee">_zdim</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
grid dimensions 
<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00172">OBFloatGrid::CoordsToIndex()</a>, <a class="el" href="grid_8cpp-source.shtml#l00159">OBFloatGrid::IndexToCoords()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00263">OBFloatGrid::InterpolateDerivatives()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>, <a class="el" href="grid_8cpp-source.shtml#l00124">OBFloatGrid::SetNumberOfPoints()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00256">OBFloatGrid::SetVals()</a>.</p>

</div>
</div><p>
<a class="anchor" name="382cc46cd19ec2a1e726d9c8191cedea"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_spacing" ref="382cc46cd19ec2a1e726d9c8191cedea" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#382cc46cd19ec2a1e726d9c8191cedea">_spacing</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00159">OBFloatGrid::IndexToCoords()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>.</p>

</div>
</div><p>
<a class="anchor" name="86660f38a65032dffc210cb116735e95"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_inv_spa" ref="86660f38a65032dffc210cb116735e95" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#86660f38a65032dffc210cb116735e95">_inv_spa</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
spacing between grid points and its inverse 
<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00172">OBFloatGrid::CoordsToIndex()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00263">OBFloatGrid::InterpolateDerivatives()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>.</p>

</div>
</div><p>
<a class="anchor" name="314a0d1d51e74f040278d0de06f075b5"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_halfSpace" ref="314a0d1d51e74f040278d0de06f075b5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#314a0d1d51e74f040278d0de06f075b5">_halfSpace</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
half of the grid spacing 
<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00159">OBFloatGrid::IndexToCoords()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00263">OBFloatGrid::InterpolateDerivatives()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>.</p>

</div>
</div><p>
<a class="anchor" name="774e5b3910ccdafb41ac680e319085d1"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_xAxis" ref="774e5b3910ccdafb41ac680e319085d1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#774e5b3910ccdafb41ac680e319085d1">_xAxis</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Three axes (i.e., translation vectors like a unit cell). 
<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00132">OBFloatGrid::SetXAxis()</a>.</p>

</div>
</div><p>
<a class="anchor" name="526e1a071db304e1970afc1bdf1769f0"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_yAxis" ref="526e1a071db304e1970afc1bdf1769f0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#526e1a071db304e1970afc1bdf1769f0">_yAxis</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00137">OBFloatGrid::SetYAxis()</a>.</p>

</div>
</div><p>
<a class="anchor" name="0d3a8c489526216952d17734085e7287"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_zAxis" ref="0d3a8c489526216952d17734085e7287" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#0d3a8c489526216952d17734085e7287">_zAxis</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00142">OBFloatGrid::SetZAxis()</a>.</p>

</div>
</div><p>
<a class="anchor" name="7b91634c838cfa025070df146452d4d9"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_xmin" ref="7b91634c838cfa025070df146452d4d9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBGrid.shtml#7b91634c838cfa025070df146452d4d9">_xmin</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00172">OBFloatGrid::CoordsToIndex()</a>, <a class="el" href="grid_8cpp-source.shtml#l00479">OBProxGrid::GetProxVector()</a>, <a class="el" href="grid_8cpp-source.shtml#l00159">OBFloatGrid::IndexToCoords()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00030">OBGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00263">OBFloatGrid::InterpolateDerivatives()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00404">OBProxGrid::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="a3a779f1daff2a7dbe79fa4e0b9def75"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_xmax" ref="a3a779f1daff2a7dbe79fa4e0b9def75" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBGrid.shtml#a3a779f1daff2a7dbe79fa4e0b9def75">_xmax</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00479">OBProxGrid::GetProxVector()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00030">OBGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00147">OBFloatGrid::Inject()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00263">OBFloatGrid::InterpolateDerivatives()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00404">OBProxGrid::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="775215217e5f88eabb13d886d3f28e6a"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_ymin" ref="775215217e5f88eabb13d886d3f28e6a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBGrid.shtml#775215217e5f88eabb13d886d3f28e6a">_ymin</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00172">OBFloatGrid::CoordsToIndex()</a>, <a class="el" href="grid_8cpp-source.shtml#l00479">OBProxGrid::GetProxVector()</a>, <a class="el" href="grid_8cpp-source.shtml#l00159">OBFloatGrid::IndexToCoords()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00030">OBGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00263">OBFloatGrid::InterpolateDerivatives()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00404">OBProxGrid::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="89dce702ed281c7c1ca2e88f6a3a00b0"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_ymax" ref="89dce702ed281c7c1ca2e88f6a3a00b0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBGrid.shtml#89dce702ed281c7c1ca2e88f6a3a00b0">_ymax</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00479">OBProxGrid::GetProxVector()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00030">OBGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00147">OBFloatGrid::Inject()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00263">OBFloatGrid::InterpolateDerivatives()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00404">OBProxGrid::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="d2367ec6a3d166e433fec916c5826aa1"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_zmin" ref="d2367ec6a3d166e433fec916c5826aa1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBGrid.shtml#d2367ec6a3d166e433fec916c5826aa1">_zmin</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00172">OBFloatGrid::CoordsToIndex()</a>, <a class="el" href="grid_8cpp-source.shtml#l00479">OBProxGrid::GetProxVector()</a>, <a class="el" href="grid_8cpp-source.shtml#l00159">OBFloatGrid::IndexToCoords()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00030">OBGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00263">OBFloatGrid::InterpolateDerivatives()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00404">OBProxGrid::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="be522732504118f0d41304e111c94e38"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_zmax" ref="be522732504118f0d41304e111c94e38" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBGrid.shtml#be522732504118f0d41304e111c94e38">_zmax</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
the min/max axes in XYZ axes (i.e., the box) 
<p>

<p>Referenced by <a class="el" href="grid_8cpp-source.shtml#l00479">OBProxGrid::GetProxVector()</a>, <a class="el" href="grid_8cpp-source.shtml#l00061">OBFloatGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00030">OBGrid::Init()</a>, <a class="el" href="grid_8cpp-source.shtml#l00147">OBFloatGrid::Inject()</a>, <a class="el" href="grid_8cpp-source.shtml#l00188">OBFloatGrid::Interpolate()</a>, <a class="el" href="grid_8cpp-source.shtml#l00263">OBFloatGrid::InterpolateDerivatives()</a>, <a class="el" href="grid_8cpp-source.shtml#l00348">OpenBabel::operator&lt;&lt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00377">OpenBabel::operator&gt;&gt;()</a>, <a class="el" href="grid_8cpp-source.shtml#l00100">OBFloatGrid::SetLimits()</a>, and <a class="el" href="grid_8cpp-source.shtml#l00404">OBProxGrid::Setup()</a>.</p>

</div>
</div><p>
<a class="anchor" name="f7811cf8aadbf3b3477c560b0ef2f797"></a><!-- doxytag: member="OpenBabel::OBFloatGrid::_vdata" ref="f7811cf8aadbf3b3477c560b0ef2f797" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt; <a class="el" href="classOpenBabel_1_1OBBase.shtml#f7811cf8aadbf3b3477c560b0ef2f797">_vdata</a><code> [protected, inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Custom data. 
<p>

<p>Referenced by <a class="el" href="base_8cpp-source.shtml#l00071">OBBase::Clear()</a>, <a class="el" href="base_8cpp-source.shtml#l00174">OBBase::CloneData()</a>, <a class="el" href="base_8cpp-source.shtml#l00188">OBBase::DeleteData()</a>, <a class="el" href="atom_8cpp-source.shtml#l00157">OBAtom::Duplicate()</a>, <a class="el" href="base_8cpp-source.shtml#l00149">OBBase::GetAllData()</a>, <a class="el" href="base_8cpp-source.shtml#l00122">OBBase::GetData()</a>, <a class="el" href="base_8cpp-source.shtml#l00084">OBBase::HasData()</a>, <a class="el" href="bond_8cpp-source.shtml#l00050">OBBond::OBBond()</a>, <a class="el" href="mol_8cpp-source.shtml#l02895">OBMol::OBMol()</a>, and <a class="el" href="residue_8cpp-source.shtml#l00847">OBResidue::OBResidue()</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="grid_8h-source.shtml">grid.h</a><li><a class="el" href="grid_8cpp.shtml">grid.cpp</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:40 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
