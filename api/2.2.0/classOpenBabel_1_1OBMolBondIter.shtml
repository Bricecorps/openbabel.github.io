<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Open Babel: OBMolBondIter Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="api-style.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="classes.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.shtml"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.shtml"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>::<a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a>
  </div>
</div>
<div class="contents">
<h1>OBMolBondIter Class Reference</h1><!-- doxytag: class="OpenBabel::OBMolBondIter" -->Iterate over all bonds in an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="obiter_8h-source.shtml">openbabel/obiter.h</a>&gt;</code>
<p>

<p>
<a href="classOpenBabel_1_1OBMolBondIter-members.shtml">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml#455059ecfe54c9a0c32e8456aa848569">OBMolBondIter</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml#05b5a8858b706d1046f933c51daa8727">OBMolBondIter</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml#e814890578f0e8951a5ba1c734d7d5a2">OBMolBondIter</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml#e21ad5f1f7fbd04f72693d116ab25ce3">OBMolBondIter</a> (const <a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a> &amp;bi)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml#6ab51a3738ec0fa144ed6b3e49545cd7">~OBMolBondIter</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml#35cb4c77558cb50d54883f5af4968c3d">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a> &amp;bi)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml#a385aa18f5e42db5a415c25a90f4193d">operator bool</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml#d17af958901317fceb246b53b90a376d">operator++</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml#d09a4b6c7a2e51c277f52bd486ed73da">operator++</a> (int)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml#3f8f5f0e7c6e7c69467b815de9082a69">operator-&gt;</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml#adede7839311add35bf5710a3031f13d">operator*</a> () const </td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Iterate over all bonds in an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>. 
<p>
To facilitate iteration through all bonds in a molecule, without resorting to bond indexes (which may change in the future), a variety of iterators are provided.<p>
This has been made significantly easier by a series of macros in the <a class="el" href="obiter_8h.shtml" title="STL-style iterators for Open Babel.">obiter.h</a> header file:<p>
<div class="fragment"><pre class="fragment">      \#define <a class="code" href="obiter_8h.shtml#16c0f68c4f2d476fae98338b31e77e46">FOR_BONDS_OF_MOL</a>(b,m)     for( <a class="code" href="classOpenBabel_1_1OBMolBondIter.shtml#455059ecfe54c9a0c32e8456aa848569">OBMolBondIter</a>     b(m); b; ++b )
</pre></div><p>
Here is an example: <div class="fragment"><pre class="fragment"><span class="preprocessor">      #include &lt;<a class="code" href="obiter_8h.shtml" title="STL-style iterators for Open Babel.">openbabel/obiter.h</a>&gt;</span>
<span class="preprocessor">      #include &lt;<a class="code" href="mol_8h.shtml" title="Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header...">openbabel/mol.h</a>&gt;</span>

      OBMol mol;
      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bondOrderSum = 0;
      <a class="code" href="obiter_8h.shtml#16c0f68c4f2d476fae98338b31e77e46">FOR_BONDS_OF_MOL</a>(b, mol)
      {
         <span class="comment">// The variable b behaves like OBBond* when used with -&gt; and * but</span>
         <span class="comment">// but needs to be explicitly converted when appearing as a parameter</span>
         <span class="comment">// in a function call - use &amp;*b</span>
         bondOrderSum +=  b-&gt;GetBO();
      }
</pre></div> <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="455059ecfe54c9a0c32e8456aa848569"></a><!-- doxytag: member="OpenBabel::OBMolBondIter::OBMolBondIter" ref="455059ecfe54c9a0c32e8456aa848569" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="05b5a8858b706d1046f933c51daa8727"></a><!-- doxytag: member="OpenBabel::OBMolBondIter::OBMolBondIter" ref="05b5a8858b706d1046f933c51daa8727" args="(OBMol *mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a>           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e814890578f0e8951a5ba1c734d7d5a2"></a><!-- doxytag: member="OpenBabel::OBMolBondIter::OBMolBondIter" ref="e814890578f0e8951a5ba1c734d7d5a2" args="(OBMol &amp;mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a>           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>mol</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="e21ad5f1f7fbd04f72693d116ab25ce3"></a><!-- doxytag: member="OpenBabel::OBMolBondIter::OBMolBondIter" ref="e21ad5f1f7fbd04f72693d116ab25ce3" args="(const OBMolBondIter &amp;bi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a>           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>bi</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="6ab51a3738ec0fa144ed6b3e49545cd7"></a><!-- doxytag: member="OpenBabel::OBMolBondIter::~OBMolBondIter" ref="6ab51a3738ec0fa144ed6b3e49545cd7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a>           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="35cb4c77558cb50d54883f5af4968c3d"></a><!-- doxytag: member="OpenBabel::OBMolBondIter::operator=" ref="35cb4c77558cb50d54883f5af4968c3d" args="(const OBMolBondIter &amp;bi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a> &amp; operator=           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>bi</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="a385aa18f5e42db5a415c25a90f4193d"></a><!-- doxytag: member="OpenBabel::OBMolBondIter::operator bool" ref="a385aa18f5e42db5a415c25a90f4193d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">operator bool           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Whether the iterator can still advance (i.e., visit more bonds) </dd></dl>

</div>
</div><p>
<a class="anchor" name="d17af958901317fceb246b53b90a376d"></a><!-- doxytag: member="OpenBabel::OBMolBondIter::operator++" ref="d17af958901317fceb246b53b90a376d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a> &amp; operator++           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Preincrement -- advance to the next bond and return. 
<p>

<p>Referenced by <a class="el" href="obiter_8cpp-source.shtml#l00466">OBMolBondIter::operator++()</a>.</p>

</div>
</div><p>
<a class="anchor" name="d09a4b6c7a2e51c277f52bd486ed73da"></a><!-- doxytag: member="OpenBabel::OBMolBondIter::operator++" ref="d09a4b6c7a2e51c277f52bd486ed73da" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a> operator++           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Postincrement -- return the current bond and advance to the next. 
<p>

</div>
</div><p>
<a class="anchor" name="3f8f5f0e7c6e7c69467b815de9082a69"></a><!-- doxytag: member="OpenBabel::OBMolBondIter::operator-&gt;" ref="3f8f5f0e7c6e7c69467b815de9082a69" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>* operator-&gt;           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>a pointer to the current bond </dd></dl>

</div>
</div><p>
<a class="anchor" name="adede7839311add35bf5710a3031f13d"></a><!-- doxytag: member="OpenBabel::OBMolBondIter::operator*" ref="adede7839311add35bf5710a3031f13d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>&amp; operator*           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>a reference to the current bond </dd></dl>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="obiter_8h-source.shtml">obiter.h</a><li><a class="el" href="obiter_8cpp.shtml">obiter.cpp</a></ul>
</div>
</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.2.0.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Jul 3 14:30:40 2008 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6.
</div>

</body>
</html>
