<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open Babel: OBReactionFacade Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open Babel
   &#160;<span id="projectnumber">3.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml">OBReactionFacade</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classOpenBabel_1_1OBReactionFacade-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBReactionFacade Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="reactionfacade_8h_source.shtml">openbabel/reactionfacade.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Constructor</div></td></tr>
<tr class="memitem:ab4db800a2aa94917e4338a705465e7c1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#ab4db800a2aa94917e4338a705465e7c1">OBReactionFacade</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol)</td></tr>
<tr class="separator:ab4db800a2aa94917e4338a705465e7c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abca259fa69d62ea1b78da27037de9131"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#abca259fa69d62ea1b78da27037de9131">~OBReactionFacade</a> ()</td></tr>
<tr class="separator:abca259fa69d62ea1b78da27037de9131"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Low-level methods</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>These are convenience functions that set/get reaction-related data on individual atoms. The actual data is stored in the underlying <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> as OBPairInteger data with the keys "rxnrole" or "rxncomp" (reaction role, reaction component). The other methods of this class are implemented using these methods. Care should be taken using the setter functions, as (unlike the other methods) their use can result in an inconsistent state. <a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#a9dcb9b43a3d0fa9003d4c1c9d921f6b2">IsValid()</a> may be used to check whether this is the case. </p>
</div></td></tr>
<tr class="memitem:af14adae67b240b8e76b61dbc6765e918"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#af14adae67b240b8e76b61dbc6765e918">AssignComponentIds</a> (bool wipe=true)</td></tr>
<tr class="separator:af14adae67b240b8e76b61dbc6765e918"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5aa377b4803b0af6196dfb608e0c3165"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#a5aa377b4803b0af6196dfb608e0c3165">GetRole</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>
<tr class="separator:a5aa377b4803b0af6196dfb608e0c3165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab99afdade133252d39905d60333e4990"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#ab99afdade133252d39905d60333e4990">GetComponentId</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>
<tr class="separator:ab99afdade133252d39905d60333e4990"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76a218fb2d4dbb81e752feb62a98d004"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#a76a218fb2d4dbb81e752feb62a98d004">SetRole</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, <a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a> rxnrole)</td></tr>
<tr class="separator:a76a218fb2d4dbb81e752feb62a98d004"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43f841c8e310331ab962e564237baeff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#a43f841c8e310331ab962e564237baeff">SetComponentId</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, unsigned int compid)</td></tr>
<tr class="separator:a43f841c8e310331ab962e564237baeff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Check validity of reaction data</div></td></tr>
<tr class="memitem:a9dcb9b43a3d0fa9003d4c1c9d921f6b2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#a9dcb9b43a3d0fa9003d4c1c9d921f6b2">IsValid</a> ()</td></tr>
<tr class="separator:a9dcb9b43a3d0fa9003d4c1c9d921f6b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">High-level methods</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>These are a set of methods that manipulate reactions at the component level. If you use these high-level methods, and subsequently modify the underlying <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> or its reaction data, you may need to clear cached information on the reaction components via <a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#aad14f3d72a1765ff121b0583ce127202">ClearInternalState()</a>. </p>
</div></td></tr>
<tr class="memitem:a9abbb69cb53e12974508a39f7e8f390a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#a9abbb69cb53e12974508a39f7e8f390a">AddComponent</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol, <a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a> rxnrole)</td></tr>
<tr class="separator:a9abbb69cb53e12974508a39f7e8f390a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad14f3d72a1765ff121b0583ce127202"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#aad14f3d72a1765ff121b0583ce127202">ClearInternalState</a> ()</td></tr>
<tr class="separator:aad14f3d72a1765ff121b0583ce127202"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e00bc63a3d1e88ebf4fa6f56da7b188"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#a5e00bc63a3d1e88ebf4fa6f56da7b188">GetComponent</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol, <a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a> rxnrole, unsigned int num)</td></tr>
<tr class="separator:a5e00bc63a3d1e88ebf4fa6f56da7b188"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb671e57418a6021c6292494675383b0"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#acb671e57418a6021c6292494675383b0">NumComponents</a> (<a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a> rxnrole)</td></tr>
<tr class="separator:acb671e57418a6021c6292494675383b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a46e9988e866574af238152035e1bb0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#a6a46e9988e866574af238152035e1bb0">ReassignComponent</a> (<a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a> oldrole, unsigned int num, <a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a> newrole)</td></tr>
<tr class="separator:a6a46e9988e866574af238152035e1bb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Facade to simplify manipulation of reactions stored as <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> objects. </p>
<p>All of the information defining a reaction is stored as part of an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>. This information is:</p><ul>
<li>a flag indicating that the <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> represents a reaction (see <a class="el" href="classOpenBabel_1_1OBMol.shtml#a53482d076141ffa01e66a19c3c4a10db">OBMol::SetIsReaction()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a83ab9a82a79ffb6750cb23a3fbc11444" title="Does this OBMol represent a reaction? ">OBMol::IsReaction()</a>)</li>
<li><a class="el" href="namespaceOpenBabel.shtml#a0bdf8334aad62a6bb7ad50f58060c9b6" title="Store arbitrary key/value integer data like OBPairData. ">OBPairInteger</a> data attached to each atom indicating the reaction role ("rxnrole")</li>
<li><a class="el" href="namespaceOpenBabel.shtml#a0bdf8334aad62a6bb7ad50f58060c9b6" title="Store arbitrary key/value integer data like OBPairData. ">OBPairInteger</a> data attached to each atom indicating the reaction component Id ("rxncomp")</li>
</ul>
<p>Everything that may need to be done with reactions can be implemented using this information. The purpose of this class is simply to provide convenience functions that cover a range of likely use cases. If your use case is not included, it should still be straightforward for you to manipulate the underlying information to achieve your goal.</p>
<dl class="section since"><dt>Since</dt><dd>version 3.0 </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab4db800a2aa94917e4338a705465e7c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4db800a2aa94917e4338a705465e7c1">&#9670;&nbsp;</a></span>OBReactionFacade()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml">OBReactionFacade</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The constructor requires an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>. Member functions retrieve or manipulate reaction data stored in this molecule. </p>

</div>
</div>
<a id="abca259fa69d62ea1b78da27037de9131"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abca259fa69d62ea1b78da27037de9131">&#9670;&nbsp;</a></span>~OBReactionFacade()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml">OBReactionFacade</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af14adae67b240b8e76b61dbc6765e918"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af14adae67b240b8e76b61dbc6765e918">&#9670;&nbsp;</a></span>AssignComponentIds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AssignComponentIds </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>wipe</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Assigns a component Id to every atom in the molecule based on connected components. If <code>wipe</code> is <code>false</code>, then any atoms that already have a component Id are skipped. </p>

</div>
</div>
<a id="a5aa377b4803b0af6196dfb608e0c3165"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5aa377b4803b0af6196dfb608e0c3165">&#9670;&nbsp;</a></span>GetRole()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a> GetRole </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return the reaction role of an atom. </p>

</div>
</div>
<a id="ab99afdade133252d39905d60333e4990"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab99afdade133252d39905d60333e4990">&#9670;&nbsp;</a></span>GetComponentId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetComponentId </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return the component Id of an atom. </p>

</div>
</div>
<a id="a76a218fb2d4dbb81e752feb62a98d004"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76a218fb2d4dbb81e752feb62a98d004">&#9670;&nbsp;</a></span>SetRole()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetRole </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a>&#160;</td>
          <td class="paramname"><em>rxnrole</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the reaction role of an atom. </p>

</div>
</div>
<a id="a43f841c8e310331ab962e564237baeff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43f841c8e310331ab962e564237baeff">&#9670;&nbsp;</a></span>SetComponentId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetComponentId </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>compid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the component Id of an atom. </p>

</div>
</div>
<a id="a9dcb9b43a3d0fa9003d4c1c9d921f6b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dcb9b43a3d0fa9003d4c1c9d921f6b2">&#9670;&nbsp;</a></span>IsValid()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsValid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check whether this <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> is in a valid state to represent a reaction.</p>
<p>Note, first of all, that this does not check whether a reaction is chemically valid. It simply checks whether the <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> has the following properties:</p><ul>
<li>(a) it is marked as a reaction</li>
<li>(b) every atom is marked as having a reaction role</li>
<li>(c) every atom is marked as belonging to a particular reaction component</li>
<li>(d) every atom in a connected component is marked as belong to the same reaction component and having the same reaction role</li>
</ul>
<p>If (a) is not true, while it does not affect any of the methods of the <a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml" title="Facade to simplify manipulation of reactions stored as OBMol objects. ">OBReactionFacade</a>, the reaction may not be written appropriately by an output format.</p>
<p>If (b), (c) or (d) is not true, then the behavior of the toolkit is undefined when handling this molecule.</p>
<p>While not checked by this function, it is also a good idea to avoid reusing the same component Id for different reaction roles, e.g. having a reactant with component Id 1 as well as a product with component Id 1. If you reassign roles, then the duplication of component Ids may cause two components to be merged into one. </p>

</div>
</div>
<a id="a9abbb69cb53e12974508a39f7e8f390a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9abbb69cb53e12974508a39f7e8f390a">&#9670;&nbsp;</a></span>AddComponent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddComponent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a>&#160;</td>
          <td class="paramname"><em>rxnrole</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a new component to the reaction </p>

</div>
</div>
<a id="aad14f3d72a1765ff121b0583ce127202"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad14f3d72a1765ff121b0583ce127202">&#9670;&nbsp;</a></span>ClearInternalState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ClearInternalState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Clear the list of found components.</p>
<p>On first use any of the high-level methods, the number of components for each reaction role is determined and each is assigned a number from 0 to the number of components. This information is cached for future accesses. If you modify the underlying <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> in a way that invalidates this information (e.g. using the low-level methods), you should call <a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#aad14f3d72a1765ff121b0583ce127202">ClearInternalState()</a> or create a new <a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml" title="Facade to simplify manipulation of reactions stored as OBMol objects. ">OBReactionFacade</a>. </p>

</div>
</div>
<a id="a5e00bc63a3d1e88ebf4fa6f56da7b188"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e00bc63a3d1e88ebf4fa6f56da7b188">&#9670;&nbsp;</a></span>GetComponent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetComponent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a>&#160;</td>
          <td class="paramname"><em>rxnrole</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy a component from the reaction into the provided <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>.</p>
<p>Note that all reaction data is copied, and so this may be useful for building up a new reaction composed of just some of the components of the original reaction. If copying components from multiple reactions into a single one, to avoid duplicate component Ids it may be easier to copy into an empty <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>, and then use <a class="el" href="classOpenBabel_1_1OBReactionFacade.shtml#a9abbb69cb53e12974508a39f7e8f390a">AddComponent()</a> to add this <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> into the new reaction.</p>
<dl class="section return"><dt>Returns</dt><dd>A boolean indicating whether the reaction has a component with that number. </dd></dl>

</div>
</div>
<a id="acb671e57418a6021c6292494675383b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb671e57418a6021c6292494675383b0">&#9670;&nbsp;</a></span>NumComponents()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumComponents </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a>&#160;</td>
          <td class="paramname"><em>rxnrole</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return the number of reaction components with a particular reaction role. </p>

</div>
</div>
<a id="a6a46e9988e866574af238152035e1bb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a46e9988e866574af238152035e1bb0">&#9670;&nbsp;</a></span>ReassignComponent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ReassignComponent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a>&#160;</td>
          <td class="paramname"><em>oldrole</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955d">OBReactionRole</a>&#160;</td>
          <td class="paramname"><em>newrole</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reassign the reaction role of a given component. If assigned to <a class="el" href="namespaceOpenBabel.shtml#a819755731290d520479685a9b791955da92f0769059e9ed5adc2863b910417479" title="no reaction role - useful for temporarily hiding a component ">NO_REACTIONROLE</a>, this may be used to hide the reaction component when writing to a reaction output format.</p>
<p>It should be noted that reassigning a component changes the numbers assigned. For example, in a reaction with 2 reactants and 2 products (each numbered from 0 to 1), if you reassign reactant number 0 to be a product, it will now be product number 2 while former reactant number 1 will now be reactant number 0.</p>
<dl class="section return"><dt>Returns</dt><dd>A boolean indicating whether the reaction has a component with that number. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="reactionfacade_8h_source.shtml">reactionfacade.h</a></li>
<li><a class="el" href="reactionfacade_8cpp.shtml">reactionfacade.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Oct 15 2019 21:28:05 for Open Babel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
